/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Långsam.java
 *
 * Created on Jul 1, 2012, 2:49:05 PM
 */
package Mobile_Operating_System;


import java.awt.event.ActionEvent;
import java.awt.Dimension;
import java.awt.event.ActionListener;
import javax.swing.ImageIcon;
import javax.swing.Timer;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import java.awt.*;
import java.io.IOException;
import java.net.URL;
import java.sql.*;
import java.util.ArrayList;
import java.util.Random;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.*;
import javax.swing.border.LineBorder;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import uk.co.caprica.vlcj.binding.LibVlc;
import uk.co.caprica.vlcj.component.EmbeddedMediaPlayerComponent;
import uk.co.caprica.vlcj.runtime.RuntimeUtil;

/**
 *
 * @author $Akshay$
 */
public class Blue_Diamond extends javax.swing.JFrame {

    /** Creates new form Långsam */
    public Blue_Diamond() {
        initComponents();
        
mlc = new EmbeddedMediaPlayerComponent();
Animation.add(mlc).setSize(450,700);;
URL mrl1 = getClass().getResource("/Mobile_Operating_System/Snow_Animation.flv");
mlc.getMediaPlayer().prepareMedia("file://"+mrl1.getPath());   
mlc.getMediaPlayer().setRepeat(true);    
        
t = new Timer(1100,new ActionListener() {    
public void actionPerformed(ActionEvent evt){
if(set_pattern.isSelected()){
Parent_Lock.setSize(450,0);
Security_Window.setSize(450,700);
set_pattern.doClick();
}
reset.doClick();
t.stop();
}});

bar_open = new Timer(20,new ActionListener() {    
public void actionPerformed(ActionEvent evt){
mov+=10;
Notification_Bar.setSize(450,20+mov);
Notification_Time.setLocation(10,mov);
Notification_Drop_Down.setLocation(200,mov);
Notification_Background.setLocation(0,mov);
Notification_Battery.setLocation(390,mov);
if(Notification_Bar.getHeight()>=150)
bar_open.stop();
}});

bar_close = new Timer(20,new ActionListener() {    
public void actionPerformed(ActionEvent evt){
mov-=10;
Notification_Bar.setSize(450,20+mov);
Notification_Time.setLocation(10,mov);
Notification_Drop_Down.setLocation(200,mov);
Notification_Background.setLocation(0,mov);
Notification_Battery.setLocation(390,mov);
if(Notification_Bar.getHeight()<=20)
bar_close.stop();
}});

unlock = new Timer(1000,new ActionListener() {    
public void actionPerformed(ActionEvent evt){
mlc.getMediaPlayer().stop();
mlc.setSize(450,0);
Parent_Lock.setSize(450,0);
unlock.stop();
}});      
  

test = new Timer(1,new ActionListener() {    
public void actionPerformed(ActionEvent evt){
Previous_Month.doClick();
}}); 

board.add(drawpanel).setSize(350,350);
drawpanel.repaint();
drawpanel.setAutoscrolls(true);
    
    
reset_game = new Timer(400,new ActionListener() {    
public void actionPerformed(ActionEvent evt){
refresh.doClick();
reset_game.stop();
}}); 

Timer time = new Timer(60000,new ActionListener() {    
public void actionPerformed(ActionEvent evt){
try{
ResultSet time = executeQuerry("Select now();","Blue_Diamond");
time.next();
int hour = time.getTime(1).getHours();
int min = time.getTime(1).getMinutes();
String ap;
if(hour>12){
hour-=12;ap="PM";
}
else{
ap="AM";
}

if((hour<10)&&(min<10))
Notification_Time.setText("0"+hour+":0"+min+" "+ap);
else if((hour<10)&&(min>=10))
Notification_Time.setText("0"+hour+":"+min+" "+ap);
else if((hour>=10)&&(min<10))
Notification_Time.setText(""+hour+":0"+min+" "+ap);
else if((hour>=10)&&(min>=10))
Notification_Time.setText(""+hour+":"+min+" "+ap);
}
catch(Exception e)
{
JOptionPane.showMessageDialog (null, e.getMessage());
}
}});
time.start();
}


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Message_Dialog = new javax.swing.JDialog();
        Message_Dialog_Title = new javax.swing.JLabel();
        From_Number = new javax.swing.JTextField();
        Message_Dialog_Sub_Title1 = new javax.swing.JLabel();
        Message_Dialog_Sub_Title2 = new javax.swing.JLabel();
        Sender_SMS_Scroll_Pane = new javax.swing.JScrollPane();
        Sender_SMS = new javax.swing.JTextArea();
        Send_SMS = new javax.swing.JButton();
        Cancel_SMS = new javax.swing.JButton();
        Call_Dialog = new javax.swing.JDialog();
        Call_Dialog_Title = new javax.swing.JLabel();
        Caller_Number = new javax.swing.JTextField();
        Call_Dialog_Sub_Title3 = new javax.swing.JLabel();
        Make_Call = new javax.swing.JButton();
        Cancel_Call = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Angles = new javax.swing.ButtonGroup();
        Walpaper_Change_Dialog = new javax.swing.JDialog();
        Wallpaper_Chooser = new javax.swing.JFileChooser();
        Ringtone_Change_Dialog = new javax.swing.JDialog();
        Ringtone_Chooser = new javax.swing.JFileChooser();
        Notification_Bar = new javax.swing.JPanel();
        Notification_Drop_Down = new javax.swing.JLabel();
        Notification_Time = new javax.swing.JTextField();
        Notification_Battery = new javax.swing.JLabel();
        Notification_Background = new javax.swing.JLabel();
        Notification_Wifi = new javax.swing.JLabel();
        Notification_Sound = new javax.swing.JLabel();
        Notification_Bluetooth = new javax.swing.JLabel();
        Notification_Power = new javax.swing.JLabel();
        Notification_Close = new javax.swing.JButton();
        Parent_Lock = new javax.swing.JPanel();
        Lock_Screen = new javax.swing.JPanel();
        set_pattern = new javax.swing.JToggleButton();
        dot1 = new javax.swing.JLabel();
        dot2 = new javax.swing.JLabel();
        dot3 = new javax.swing.JLabel();
        dot4 = new javax.swing.JLabel();
        dot5 = new javax.swing.JLabel();
        dot6 = new javax.swing.JLabel();
        dot7 = new javax.swing.JLabel();
        dot8 = new javax.swing.JLabel();
        dot9 = new javax.swing.JLabel();
        board = new javax.swing.JPanel();
        reset = new javax.swing.JButton();
        Animation = new javax.swing.JPanel();
        Calendar_Window = new javax.swing.JPanel();
        Calendar_Title = new javax.swing.JLabel();
        Previous_Month = new javax.swing.JButton();
        Next_Month = new javax.swing.JButton();
        Calendar_Back = new javax.swing.JButton();
        Calendar_Scroll = new javax.swing.JScrollPane();
        Calendar = new javax.swing.JTable();
        Calendar_Sub_Title1 = new javax.swing.JTextField();
        Calculator_Window = new javax.swing.JPanel();
        Calculator_Title = new javax.swing.JLabel();
        Calculator_Back = new javax.swing.JButton();
        Num_Pad = new javax.swing.JPanel();
        Num_1 = new javax.swing.JButton();
        Num_2 = new javax.swing.JButton();
        Num_3 = new javax.swing.JButton();
        Add = new javax.swing.JButton();
        Multiply = new javax.swing.JButton();
        Sin = new javax.swing.JButton();
        Num_4 = new javax.swing.JButton();
        Num_5 = new javax.swing.JButton();
        Num_6 = new javax.swing.JButton();
        Subtract = new javax.swing.JButton();
        Divide = new javax.swing.JButton();
        Cos = new javax.swing.JButton();
        Num_7 = new javax.swing.JButton();
        Num_8 = new javax.swing.JButton();
        Num_9 = new javax.swing.JButton();
        Power = new javax.swing.JButton();
        Square_Root = new javax.swing.JButton();
        Tan = new javax.swing.JButton();
        Pi = new javax.swing.JButton();
        Num_0 = new javax.swing.JButton();
        Remainder = new javax.swing.JButton();
        Lan = new javax.swing.JButton();
        Log = new javax.swing.JButton();
        Backspace = new javax.swing.JButton();
        Clear = new javax.swing.JButton();
        Factorial = new javax.swing.JButton();
        Mod = new javax.swing.JButton();
        Inverse = new javax.swing.JButton();
        Equals = new javax.swing.JButton();
        Plus_Minus = new javax.swing.JButton();
        Workspace = new javax.swing.JTextField();
        Radians = new javax.swing.JRadioButton();
        Degree = new javax.swing.JRadioButton();
        History_Scroll = new javax.swing.JScrollPane();
        History = new javax.swing.JTextArea();
        Call_Window = new javax.swing.JPanel();
        In_Call = new javax.swing.JPanel();
        Call_End = new javax.swing.JButton();
        Call_Hold = new javax.swing.JToggleButton();
        Call_Speaker = new javax.swing.JToggleButton();
        Caller = new javax.swing.JLabel();
        Call_Background1 = new javax.swing.JLabel();
        Take_Call = new javax.swing.JPanel();
        Call_Cut = new javax.swing.JLabel();
        Call_Take = new javax.swing.JLabel();
        Call_Taken = new javax.swing.JLabel();
        Call_Cuted = new javax.swing.JLabel();
        Caller_Info = new javax.swing.JLabel();
        Call_Background = new javax.swing.JLabel();
        Call_Background2 = new javax.swing.JLabel();
        Sound_Window = new javax.swing.JPanel();
        Sound_Title = new javax.swing.JLabel();
        Sound_Choice = new javax.swing.JLabel();
        Sound_Sub_Title1 = new javax.swing.JLabel();
        Vibrate_Choice = new javax.swing.JLabel();
        Sound_Sub_Title2 = new javax.swing.JLabel();
        Sound_Sub_Title3 = new javax.swing.JLabel();
        System_Volume = new javax.swing.JSlider();
        Sound_Back = new javax.swing.JButton();
        Call_Settings_Window = new javax.swing.JPanel();
        Call_Settings_Title = new javax.swing.JLabel();
        Call_Settings_Sub_Title1 = new javax.swing.JLabel();
        Call_Settings_Back = new javax.swing.JButton();
        Choose_Ringtone = new javax.swing.JButton();
        Display_Sub_Title5 = new javax.swing.JLabel();
        Call_Settings_Volume = new javax.swing.JSlider();
        Display_Window = new javax.swing.JPanel();
        Display_Title = new javax.swing.JLabel();
        Display_Sub_Title1 = new javax.swing.JLabel();
        Display_Back = new javax.swing.JButton();
        Choose_Walpaper = new javax.swing.JButton();
        Display_Sub_Title2 = new javax.swing.JLabel();
        Display_Brightness = new javax.swing.JSlider();
        Display_Sub_Title3 = new javax.swing.JLabel();
        Display_Backlight_Time = new javax.swing.JSlider();
        Date_Time_Window = new javax.swing.JPanel();
        Date_Time_Title = new javax.swing.JLabel();
        Date_Time_Back = new javax.swing.JButton();
        Display_Sub_Title6 = new javax.swing.JLabel();
        System_Day = new javax.swing.JComboBox();
        System_Month = new javax.swing.JComboBox();
        System_Year = new javax.swing.JComboBox();
        Bluetooth_Window = new javax.swing.JPanel();
        Bluetooth_Title = new javax.swing.JLabel();
        Bluetooth_Sub_Title1 = new javax.swing.JLabel();
        Bluetooth_Sub_Title2 = new javax.swing.JLabel();
        Bluetooth_Back = new javax.swing.JButton();
        Security_Window = new javax.swing.JPanel();
        Security_Title = new javax.swing.JLabel();
        Security_Sub_Title1 = new javax.swing.JLabel();
        Change_Lock_Pattern = new javax.swing.JToggleButton();
        Security_Back = new javax.swing.JButton();
        Updates_Window = new javax.swing.JPanel();
        Updates_Title = new javax.swing.JLabel();
        Updates_Back = new javax.swing.JButton();
        Bluetooth_Sub_Title3 = new javax.swing.JLabel();
        About_Window = new javax.swing.JPanel();
        About_Title = new javax.swing.JLabel();
        About_Back = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        Network_Window = new javax.swing.JPanel();
        Network_Title = new javax.swing.JLabel();
        Network_Sub_Title1 = new javax.swing.JLabel();
        Network_Sub_Title2 = new javax.swing.JLabel();
        Network_Back = new javax.swing.JButton();
        Wifi_Window = new javax.swing.JPanel();
        Wifi_Title = new javax.swing.JLabel();
        Wifi_Sub_Title1 = new javax.swing.JLabel();
        Wifi_Sub_Title2 = new javax.swing.JLabel();
        Wifi_Back = new javax.swing.JButton();
        Settings_Window = new javax.swing.JPanel();
        Settings_Title = new javax.swing.JLabel();
        Settings_Scroll = new javax.swing.JScrollPane();
        Settings_List = new javax.swing.JPanel();
        Settings_Airplane_Mode_Choice = new javax.swing.JLabel();
        Settings_Airplane = new javax.swing.JLabel();
        Settings_Wifi_Choice = new javax.swing.JLabel();
        Settings_Wifi = new javax.swing.JLabel();
        Settings_Display = new javax.swing.JLabel();
        Settings_Bluetooth_Choice = new javax.swing.JLabel();
        Settings_Bluetooth = new javax.swing.JLabel();
        Settings_Call = new javax.swing.JLabel();
        Settings_Sound = new javax.swing.JLabel();
        Settings_Date_Time = new javax.swing.JLabel();
        Settings_Network = new javax.swing.JLabel();
        Settings_Security = new javax.swing.JLabel();
        Settings_About = new javax.swing.JLabel();
        Settings_Updates = new javax.swing.JLabel();
        Settings_Back = new javax.swing.JButton();
        Message_Window = new javax.swing.JPanel();
        Message_Select_All = new javax.swing.JCheckBox();
        Message_Title = new javax.swing.JLabel();
        Message_Compose = new javax.swing.JPanel();
        Compose_Sub_Title1 = new javax.swing.JLabel();
        To_Number = new javax.swing.JTextField();
        Compose_Sub_Title2 = new javax.swing.JLabel();
        Compose_SMS_Scroll_Pane = new javax.swing.JScrollPane();
        Compose_SMS = new javax.swing.JTextArea();
        Compose_Send = new javax.swing.JButton();
        Compose_Cancel = new javax.swing.JButton();
        Message_Scroll = new javax.swing.JScrollPane();
        Message_List = new javax.swing.JPanel();
        Message_Convo_Scroll = new javax.swing.JScrollPane();
        Message_Convo = new javax.swing.JPanel();
        Message_Back = new javax.swing.JButton();
        Message_Write_New = new javax.swing.JButton();
        Message_Delete = new javax.swing.JButton();
        Contact_Window = new javax.swing.JPanel();
        Contacts_Title = new javax.swing.JLabel();
        Contact_Info = new javax.swing.JPanel();
        Create_Contact = new javax.swing.JPanel();
        Create_Sub_Title1 = new javax.swing.JLabel();
        Create_Name = new javax.swing.JTextField();
        Create_Sub_Title2 = new javax.swing.JLabel();
        Create_Number1 = new javax.swing.JTextField();
        Create_Sub_Title5 = new javax.swing.JLabel();
        Create_Number2 = new javax.swing.JTextField();
        Create_Sub_Title6 = new javax.swing.JLabel();
        Create_Number3 = new javax.swing.JTextField();
        Create_Sub_Title3 = new javax.swing.JLabel();
        Create_Email = new javax.swing.JTextField();
        Create_Sub_Title4 = new javax.swing.JLabel();
        Create_Day = new javax.swing.JComboBox();
        Create_Month = new javax.swing.JComboBox();
        Create_Year = new javax.swing.JComboBox();
        Create_Add = new javax.swing.JButton();
        Create_Clear = new javax.swing.JButton();
        Create_Cancel = new javax.swing.JButton();
        Edit_Contact = new javax.swing.JPanel();
        Edit_Sub_Title1 = new javax.swing.JLabel();
        Edit_Name = new javax.swing.JTextField();
        Edit_Sub_Title2 = new javax.swing.JLabel();
        Edit_Number1 = new javax.swing.JTextField();
        Edit_Sub_Title5 = new javax.swing.JLabel();
        Edit_Number2 = new javax.swing.JTextField();
        Edit_Sub_Title6 = new javax.swing.JLabel();
        Edit_Number3 = new javax.swing.JTextField();
        Edit_Sub_Title3 = new javax.swing.JLabel();
        Edit_Email = new javax.swing.JTextField();
        Edit_Sub_Title4 = new javax.swing.JLabel();
        Edit_Day = new javax.swing.JComboBox();
        Edit_Month = new javax.swing.JComboBox();
        Edit_Year = new javax.swing.JComboBox();
        Edit_Save = new javax.swing.JButton();
        Edit_Delete = new javax.swing.JButton();
        Edit_Cancel = new javax.swing.JButton();
        Edit_Clear = new javax.swing.JButton();
        Edit_Sl_No = new javax.swing.JTextField();
        Contact_Scroll = new javax.swing.JScrollPane();
        Contact_List = new javax.swing.JPanel();
        Contact_Back = new javax.swing.JButton();
        Contact_Create_New = new javax.swing.JButton();
        Games_Window = new javax.swing.JPanel();
        Games_Title = new javax.swing.JLabel();
        Play_Tic_Tac_Toe = new javax.swing.JButton();
        Games_Window_Back = new javax.swing.JButton();
        Tic_Tac_Toe_Window = new javax.swing.JPanel();
        box1 = new javax.swing.JTextField();
        box2 = new javax.swing.JTextField();
        box3 = new javax.swing.JTextField();
        box4 = new javax.swing.JTextField();
        box5 = new javax.swing.JTextField();
        box6 = new javax.swing.JTextField();
        box7 = new javax.swing.JTextField();
        box8 = new javax.swing.JTextField();
        box9 = new javax.swing.JTextField();
        refresh = new javax.swing.JButton();
        Tic_Tac_Toe_Window_Quit = new javax.swing.JButton();
        Menu_Window = new javax.swing.JPanel();
        Menu_Back = new javax.swing.JButton();
        Menu_Title = new javax.swing.JLabel();
        Menu_Calendar = new javax.swing.JButton();
        Menu_Settings = new javax.swing.JButton();
        Menu_Games = new javax.swing.JButton();
        Menu_Calculator = new javax.swing.JButton();
        Menu_Contacts = new javax.swing.JButton();
        Menu_Messages = new javax.swing.JButton();
        Home_Window = new javax.swing.JPanel();
        Contacts = new javax.swing.JButton();
        Menu = new javax.swing.JButton();
        Messages = new javax.swing.JButton();
        Wallpaper = new javax.swing.JLabel();
        Lock_Phone = new javax.swing.JButton();
        Send_Message = new javax.swing.JButton();
        Copyrights = new javax.swing.JLabel();
        Call_Button = new javax.swing.JButton();
        Make_Call_Button = new javax.swing.JButton();

        Message_Dialog.setMinimumSize(new java.awt.Dimension(400, 400));
        Message_Dialog.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Message_Dialog_Title.setBackground(new java.awt.Color(0, 75, 255));
        Message_Dialog_Title.setFont(new java.awt.Font("Tekton Pro", 1, 24)); // NOI18N
        Message_Dialog_Title.setForeground(new java.awt.Color(0, 255, 255));
        Message_Dialog_Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Message_Dialog_Title.setText("Send a message");
        Message_Dialog_Title.setOpaque(true);
        Message_Dialog.getContentPane().add(Message_Dialog_Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 40));
        Message_Dialog.getContentPane().add(From_Number, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, 200, 30));

        Message_Dialog_Sub_Title1.setBackground(new java.awt.Color(0, 75, 255));
        Message_Dialog_Sub_Title1.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        Message_Dialog_Sub_Title1.setForeground(new java.awt.Color(0, 255, 255));
        Message_Dialog_Sub_Title1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Message_Dialog_Sub_Title1.setText("From  :");
        Message_Dialog_Sub_Title1.setOpaque(true);
        Message_Dialog.getContentPane().add(Message_Dialog_Sub_Title1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 80, 30));

        Message_Dialog_Sub_Title2.setBackground(new java.awt.Color(0, 75, 255));
        Message_Dialog_Sub_Title2.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        Message_Dialog_Sub_Title2.setForeground(new java.awt.Color(0, 255, 255));
        Message_Dialog_Sub_Title2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Message_Dialog_Sub_Title2.setText("Message :");
        Message_Dialog_Sub_Title2.setOpaque(true);
        Message_Dialog.getContentPane().add(Message_Dialog_Sub_Title2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 280, 30));

        Sender_SMS.setColumns(20);
        Sender_SMS.setRows(5);
        Sender_SMS_Scroll_Pane.setViewportView(Sender_SMS);

        Message_Dialog.getContentPane().add(Sender_SMS_Scroll_Pane, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 280, 160));

        Send_SMS.setBackground(new java.awt.Color(0, 150, 255));
        Send_SMS.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        Send_SMS.setForeground(new java.awt.Color(0, 0, 204));
        Send_SMS.setText("Send");
        Send_SMS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Send_SMSActionPerformed(evt);
            }
        });
        Message_Dialog.getContentPane().add(Send_SMS, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 310, 120, 40));

        Cancel_SMS.setBackground(new java.awt.Color(0, 150, 255));
        Cancel_SMS.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        Cancel_SMS.setForeground(new java.awt.Color(0, 0, 204));
        Cancel_SMS.setText("Cancel");
        Cancel_SMS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cancel_SMSActionPerformed(evt);
            }
        });
        Message_Dialog.getContentPane().add(Cancel_SMS, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 310, 120, 40));

        Call_Dialog.setMinimumSize(new java.awt.Dimension(400, 200));
        Call_Dialog.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Call_Dialog_Title.setBackground(new java.awt.Color(0, 75, 255));
        Call_Dialog_Title.setFont(new java.awt.Font("Tekton Pro", 1, 24)); // NOI18N
        Call_Dialog_Title.setForeground(new java.awt.Color(0, 255, 255));
        Call_Dialog_Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Call_Dialog_Title.setText("Make a Call");
        Call_Dialog_Title.setOpaque(true);
        Call_Dialog.getContentPane().add(Call_Dialog_Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 40));
        Call_Dialog.getContentPane().add(Caller_Number, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 200, 30));

        Call_Dialog_Sub_Title3.setBackground(new java.awt.Color(0, 75, 255));
        Call_Dialog_Sub_Title3.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        Call_Dialog_Sub_Title3.setForeground(new java.awt.Color(0, 255, 255));
        Call_Dialog_Sub_Title3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Call_Dialog_Sub_Title3.setText("Call From  :");
        Call_Dialog_Sub_Title3.setOpaque(true);
        Call_Dialog.getContentPane().add(Call_Dialog_Sub_Title3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 120, 30));

        Make_Call.setBackground(new java.awt.Color(0, 150, 255));
        Make_Call.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        Make_Call.setForeground(new java.awt.Color(0, 0, 204));
        Make_Call.setText("Call");
        Make_Call.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Make_CallActionPerformed(evt);
            }
        });
        Call_Dialog.getContentPane().add(Make_Call, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, 120, 40));

        Cancel_Call.setBackground(new java.awt.Color(0, 150, 255));
        Cancel_Call.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        Cancel_Call.setForeground(new java.awt.Color(0, 0, 204));
        Cancel_Call.setText("Cancel");
        Call_Dialog.getContentPane().add(Cancel_Call, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 130, 120, 40));

        Wallpaper_Chooser.setCurrentDirectory(new java.io.File("C:\\Users\\VISHNU\\Documents\\NetBeansProjects\\$Akshay$\\src\\Mobile_Operating_System"));
        Wallpaper_Chooser.setFileFilter(new FileNameExtensionFilter("Image File", "jpg", "jpeg","png","gif"));
        Wallpaper_Chooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Wallpaper_ChooserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Walpaper_Change_DialogLayout = new javax.swing.GroupLayout(Walpaper_Change_Dialog.getContentPane());
        Walpaper_Change_Dialog.getContentPane().setLayout(Walpaper_Change_DialogLayout);
        Walpaper_Change_DialogLayout.setHorizontalGroup(
            Walpaper_Change_DialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
            .addGroup(Walpaper_Change_DialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(Walpaper_Change_DialogLayout.createSequentialGroup()
                    .addGap(0, 9, Short.MAX_VALUE)
                    .addComponent(Wallpaper_Chooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 9, Short.MAX_VALUE)))
        );
        Walpaper_Change_DialogLayout.setVerticalGroup(
            Walpaper_Change_DialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(Walpaper_Change_DialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(Walpaper_Change_DialogLayout.createSequentialGroup()
                    .addGap(0, 1, Short.MAX_VALUE)
                    .addComponent(Wallpaper_Chooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 2, Short.MAX_VALUE)))
        );

        Ringtone_Chooser.setCurrentDirectory(new java.io.File("C:\\Users\\VISHNU\\Documents\\NetBeansProjects\\$Akshay$\\src\\Mobile_Operating_System"));
        Ringtone_Chooser.setFileFilter(new FileNameExtensionFilter("Sound File", "wav"));
        Ringtone_Chooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Ringtone_ChooserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Ringtone_Change_DialogLayout = new javax.swing.GroupLayout(Ringtone_Change_Dialog.getContentPane());
        Ringtone_Change_Dialog.getContentPane().setLayout(Ringtone_Change_DialogLayout);
        Ringtone_Change_DialogLayout.setHorizontalGroup(
            Ringtone_Change_DialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
            .addGroup(Ringtone_Change_DialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(Ringtone_Change_DialogLayout.createSequentialGroup()
                    .addGap(0, 9, Short.MAX_VALUE)
                    .addComponent(Ringtone_Chooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 9, Short.MAX_VALUE)))
        );
        Ringtone_Change_DialogLayout.setVerticalGroup(
            Ringtone_Change_DialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(Ringtone_Change_DialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(Ringtone_Change_DialogLayout.createSequentialGroup()
                    .addGap(0, 1, Short.MAX_VALUE)
                    .addComponent(Ringtone_Chooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 2, Short.MAX_VALUE)))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 102, 255));
        setBounds(new java.awt.Rectangle(0, 0, 570, 700));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Notification_Bar.setBackground(new java.awt.Color(0, 0, 0));
        Notification_Bar.setMinimumSize(new java.awt.Dimension(450, 0));
        Notification_Bar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Notification_BarMouseExited(evt);
            }
        });
        Notification_Bar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Notification_Drop_Down.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Notification_Drop_Down.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Notification_Drop_DownMousePressed(evt);
            }
        });
        Notification_Bar.add(Notification_Drop_Down, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 0, 50, 20));

        Notification_Time.setEditable(false);
        Notification_Time.setBackground(new java.awt.Color(51, 204, 255));
        Notification_Time.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Notification_Time.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Notification_Time.setText("12:00 AM");
        Notification_Time.setBorder(null);
        Notification_Bar.add(Notification_Time, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 80, 20));

        Notification_Battery.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Battery_33.png"))); // NOI18N
        Notification_Battery.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        Notification_Battery.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Notification_Bar_Exited(evt);
            }
        });
        Notification_Bar.add(Notification_Battery, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 0, 60, 20));

        Notification_Background.setBackground(new java.awt.Color(0, 175, 255));
        Notification_Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Noticifation_Bar.png"))); // NOI18N
        Notification_Background.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        Notification_Background.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Notification_BarMouseExited(evt);
            }
        });
        Notification_Bar.add(Notification_Background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 20));

        Notification_Wifi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Wifi_Disabled.png"))); // NOI18N
        Notification_Wifi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Notification_WifiMouseClicked(evt);
            }
        });
        Notification_Bar.add(Notification_Wifi, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 100, 100));

        Notification_Sound.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Sound_Disabled.png"))); // NOI18N
        Notification_Sound.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Notification_SoundMouseClicked(evt);
            }
        });
        Notification_Bar.add(Notification_Sound, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 100, 100));

        Notification_Bluetooth.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Bluetooth_Disabled.png"))); // NOI18N
        Notification_Bluetooth.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Notification_BluetoothMouseClicked(evt);
            }
        });
        Notification_Bar.add(Notification_Bluetooth, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 10, 100, 100));

        Notification_Power.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Power.png"))); // NOI18N
        Notification_Power.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Notification_PowerMouseClicked(evt);
            }
        });
        Notification_Bar.add(Notification_Power, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 10, 100, 100));

        Notification_Close.setBackground(new java.awt.Color(0, 0, 255));
        Notification_Close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Notification_CloseActionPerformed(evt);
            }
        });
        Notification_Bar.add(Notification_Close, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 10, 10));

        getContentPane().add(Notification_Bar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 450, 20));

        Parent_Lock.setMinimumSize(new java.awt.Dimension(450, 0));
        Parent_Lock.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Lock_Screen.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        set_pattern.setBackground(new java.awt.Color(0, 153, 255));
        set_pattern.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        set_pattern.setText("Set Pattern");
        set_pattern.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                set_patternActionPerformed(evt);
            }
        });
        Lock_Screen.add(set_pattern, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 0, 120, 0));

        dot1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/blue_connector_dot.png"))); // NOI18N
        dot1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                DotsMousePressed(evt);
            }
        });
        dot1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                DotsMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                DotsMouseMoved(evt);
            }
        });
        Lock_Screen.add(dot1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 50, 50));

        dot2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/blue_connector_dot.png"))); // NOI18N
        dot2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                DotsMousePressed(evt);
            }
        });
        dot2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                DotsMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                DotsMouseMoved(evt);
            }
        });
        Lock_Screen.add(dot2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 50, 50, 50));

        dot3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/blue_connector_dot.png"))); // NOI18N
        dot3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                DotsMousePressed(evt);
            }
        });
        dot3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                DotsMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                DotsMouseMoved(evt);
            }
        });
        Lock_Screen.add(dot3, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 50, 50, 50));

        dot4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/blue_connector_dot.png"))); // NOI18N
        dot4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                DotsMousePressed(evt);
            }
        });
        dot4.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                DotsMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                DotsMouseMoved(evt);
            }
        });
        Lock_Screen.add(dot4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, 50, 50));

        dot5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/blue_connector_dot.png"))); // NOI18N
        dot5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                DotsMousePressed(evt);
            }
        });
        dot5.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                DotsMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                DotsMouseMoved(evt);
            }
        });
        Lock_Screen.add(dot5, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 150, 50, 50));

        dot6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/blue_connector_dot.png"))); // NOI18N
        dot6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                DotsMousePressed(evt);
            }
        });
        dot6.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                DotsMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                DotsMouseMoved(evt);
            }
        });
        Lock_Screen.add(dot6, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 150, 50, 50));

        dot7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/blue_connector_dot.png"))); // NOI18N
        dot7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                DotsMousePressed(evt);
            }
        });
        dot7.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                DotsMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                DotsMouseMoved(evt);
            }
        });
        Lock_Screen.add(dot7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 250, 50, 50));

        dot8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/blue_connector_dot.png"))); // NOI18N
        dot8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                DotsMousePressed(evt);
            }
        });
        dot8.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                DotsMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                DotsMouseMoved(evt);
            }
        });
        Lock_Screen.add(dot8, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 250, 50, 50));

        dot9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/blue_connector_dot.png"))); // NOI18N
        dot9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                DotsMousePressed(evt);
            }
        });
        dot9.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                DotsMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                DotsMouseMoved(evt);
            }
        });
        Lock_Screen.add(dot9, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 250, 50, 50));

        board.setOpaque(false);

        javax.swing.GroupLayout boardLayout = new javax.swing.GroupLayout(board);
        board.setLayout(boardLayout);
        boardLayout.setHorizontalGroup(
            boardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
        );
        boardLayout.setVerticalGroup(
            boardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 350, Short.MAX_VALUE)
        );

        Lock_Screen.add(board, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 350, 350));

        reset.setBackground(new java.awt.Color(0, 204, 0));
        reset.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });
        Lock_Screen.add(reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 70, 30));

        Parent_Lock.add(Lock_Screen, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, 350, 350));

        Animation.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout AnimationLayout = new javax.swing.GroupLayout(Animation);
        Animation.setLayout(AnimationLayout);
        AnimationLayout.setHorizontalGroup(
            AnimationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 450, Short.MAX_VALUE)
        );
        AnimationLayout.setVerticalGroup(
            AnimationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 680, Short.MAX_VALUE)
        );

        Parent_Lock.add(Animation, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 680));

        getContentPane().add(Parent_Lock, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 450, 0));

        Calendar_Window.setBackground(new java.awt.Color(0, 0, 0));
        Calendar_Window.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Calendar_Title.setBackground(new java.awt.Color(0, 75, 255));
        Calendar_Title.setFont(new java.awt.Font("Tekton Pro", 1, 24)); // NOI18N
        Calendar_Title.setForeground(new java.awt.Color(102, 255, 255));
        Calendar_Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Calendar_Title.setText("Calendar");
        Calendar_Title.setOpaque(true);
        Calendar_Window.add(Calendar_Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 450, 40));

        Previous_Month.setBackground(new java.awt.Color(0, 0, 51));
        Previous_Month.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Month_Backward.png"))); // NOI18N
        Previous_Month.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Previous_MonthActionPerformed(evt);
            }
        });
        Calendar_Window.add(Previous_Month, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 85, 30, 30));

        Next_Month.setBackground(new java.awt.Color(0, 0, 51));
        Next_Month.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Month_Foward.png"))); // NOI18N
        Next_Month.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Next_MonthActionPerformed(evt);
            }
        });
        Calendar_Window.add(Next_Month, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 85, 30, 30));

        Calendar_Back.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        Calendar_Back.setText("<- Back");
        Calendar_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Calendar_BackActionPerformed(evt);
            }
        });
        Calendar_Window.add(Calendar_Back, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 660, 100, 30));

        Calendar.setFont(new java.awt.Font("Tekton Pro", 1, 14)); // NOI18N
        Calendar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Calendar.getTableHeader().setReorderingAllowed(false);
        Calendar_Scroll.setViewportView(Calendar);
        Calendar.getColumnModel().getColumn(0).setResizable(false);
        Calendar.getColumnModel().getColumn(1).setResizable(false);
        Calendar.getColumnModel().getColumn(2).setResizable(false);
        Calendar.getColumnModel().getColumn(3).setResizable(false);
        Calendar.getColumnModel().getColumn(4).setResizable(false);
        Calendar.getColumnModel().getColumn(5).setResizable(false);
        Calendar.getColumnModel().getColumn(6).setResizable(false);

        Calendar_Window.add(Calendar_Scroll, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 430, 180));

        Calendar_Sub_Title1.setBackground(new java.awt.Color(0, 0, 0));
        Calendar_Sub_Title1.setFont(new java.awt.Font("Tekton Pro", 0, 24)); // NOI18N
        Calendar_Sub_Title1.setForeground(new java.awt.Color(51, 153, 255));
        Calendar_Sub_Title1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Calendar_Sub_Title1.setText("Month, Year");
        Calendar_Sub_Title1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 150, 255), 1, true));
        Calendar_Window.add(Calendar_Sub_Title1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-1, 80, 450, 40));

        getContentPane().add(Calendar_Window, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 450, 0));

        Calculator_Window.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Calculator_Title.setBackground(new java.awt.Color(0, 75, 255));
        Calculator_Title.setFont(new java.awt.Font("Tekton Pro", 1, 24)); // NOI18N
        Calculator_Title.setForeground(new java.awt.Color(102, 255, 255));
        Calculator_Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Calculator_Title.setText("Calculator");
        Calculator_Title.setOpaque(true);
        Calculator_Window.add(Calculator_Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 450, 40));

        Calculator_Back.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        Calculator_Back.setText("<- Back");
        Calculator_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Calculator_BackActionPerformed(evt);
            }
        });
        Calculator_Window.add(Calculator_Back, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 660, 100, 30));

        Num_Pad.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        Num_1.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        Num_1.setText("1");
        Num_1.setPreferredSize(new java.awt.Dimension(50, 50));
        Num_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Num_Pad_Pressed(evt);
            }
        });
        Num_Pad.add(Num_1);

        Num_2.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        Num_2.setText("2");
        Num_2.setPreferredSize(new java.awt.Dimension(50, 50));
        Num_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Num_Pad_Pressed(evt);
            }
        });
        Num_Pad.add(Num_2);

        Num_3.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        Num_3.setText("3");
        Num_3.setPreferredSize(new java.awt.Dimension(50, 50));
        Num_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Num_Pad_Pressed(evt);
            }
        });
        Num_Pad.add(Num_3);

        Add.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        Add.setText("+");
        Add.setPreferredSize(new java.awt.Dimension(50, 50));
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });
        Num_Pad.add(Add);

        Multiply.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        Multiply.setText("*");
        Multiply.setPreferredSize(new java.awt.Dimension(50, 50));
        Multiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MultiplyActionPerformed(evt);
            }
        });
        Num_Pad.add(Multiply);

        Sin.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        Sin.setText("Sinθ");
        Sin.setPreferredSize(new java.awt.Dimension(100, 50));
        Sin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SinActionPerformed(evt);
            }
        });
        Num_Pad.add(Sin);

        Num_4.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        Num_4.setText("4");
        Num_4.setPreferredSize(new java.awt.Dimension(50, 50));
        Num_4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Num_Pad_Pressed(evt);
            }
        });
        Num_Pad.add(Num_4);

        Num_5.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        Num_5.setText("5");
        Num_5.setPreferredSize(new java.awt.Dimension(50, 50));
        Num_5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Num_Pad_Pressed(evt);
            }
        });
        Num_Pad.add(Num_5);

        Num_6.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        Num_6.setText("6");
        Num_6.setPreferredSize(new java.awt.Dimension(50, 50));
        Num_6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Num_Pad_Pressed(evt);
            }
        });
        Num_Pad.add(Num_6);

        Subtract.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        Subtract.setText("-");
        Subtract.setPreferredSize(new java.awt.Dimension(50, 50));
        Subtract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubtractActionPerformed(evt);
            }
        });
        Num_Pad.add(Subtract);

        Divide.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        Divide.setText("/");
        Divide.setPreferredSize(new java.awt.Dimension(50, 50));
        Divide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DivideActionPerformed(evt);
            }
        });
        Num_Pad.add(Divide);

        Cos.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        Cos.setText("Cosθ");
        Cos.setPreferredSize(new java.awt.Dimension(100, 50));
        Cos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CosActionPerformed(evt);
            }
        });
        Num_Pad.add(Cos);

        Num_7.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        Num_7.setText("7");
        Num_7.setPreferredSize(new java.awt.Dimension(50, 50));
        Num_7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Num_Pad_Pressed(evt);
            }
        });
        Num_Pad.add(Num_7);

        Num_8.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        Num_8.setText("8");
        Num_8.setPreferredSize(new java.awt.Dimension(50, 50));
        Num_8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Num_Pad_Pressed(evt);
            }
        });
        Num_Pad.add(Num_8);

        Num_9.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        Num_9.setText("9");
        Num_9.setPreferredSize(new java.awt.Dimension(50, 50));
        Num_9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Num_Pad_Pressed(evt);
            }
        });
        Num_Pad.add(Num_9);

        Power.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        Power.setText("^");
        Power.setPreferredSize(new java.awt.Dimension(50, 50));
        Power.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PowerActionPerformed(evt);
            }
        });
        Num_Pad.add(Power);

        Square_Root.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        Square_Root.setText("√");
        Square_Root.setPreferredSize(new java.awt.Dimension(50, 50));
        Square_Root.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Square_RootActionPerformed(evt);
            }
        });
        Num_Pad.add(Square_Root);

        Tan.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        Tan.setText("Tanθ");
        Tan.setPreferredSize(new java.awt.Dimension(100, 50));
        Tan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TanActionPerformed(evt);
            }
        });
        Num_Pad.add(Tan);

        Pi.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        Pi.setText("π");
        Pi.setPreferredSize(new java.awt.Dimension(50, 50));
        Pi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PiActionPerformed(evt);
            }
        });
        Num_Pad.add(Pi);

        Num_0.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        Num_0.setText("0");
        Num_0.setPreferredSize(new java.awt.Dimension(50, 50));
        Num_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Num_Pad_Pressed(evt);
            }
        });
        Num_Pad.add(Num_0);

        Remainder.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        Remainder.setText(".");
        Remainder.setPreferredSize(new java.awt.Dimension(50, 50));
        Remainder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Num_Pad_Pressed(evt);
            }
        });
        Num_Pad.add(Remainder);

        Lan.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        Lan.setText("Lan");
        Lan.setPreferredSize(new java.awt.Dimension(100, 50));
        Lan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LanActionPerformed(evt);
            }
        });
        Num_Pad.add(Lan);

        Log.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        Log.setText("Log");
        Log.setPreferredSize(new java.awt.Dimension(100, 50));
        Log.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogActionPerformed(evt);
            }
        });
        Num_Pad.add(Log);

        Backspace.setFont(new java.awt.Font("Monospaced", 1, 20)); // NOI18N
        Backspace.setText("←");
        Backspace.setPreferredSize(new java.awt.Dimension(50, 50));
        Backspace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackspaceActionPerformed(evt);
            }
        });
        Num_Pad.add(Backspace);

        Clear.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        Clear.setText("CE");
        Clear.setPreferredSize(new java.awt.Dimension(50, 50));
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });
        Num_Pad.add(Clear);

        Factorial.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        Factorial.setText("!");
        Factorial.setPreferredSize(new java.awt.Dimension(50, 50));
        Factorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FactorialActionPerformed(evt);
            }
        });
        Num_Pad.add(Factorial);

        Mod.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        Mod.setText("Mod");
        Mod.setPreferredSize(new java.awt.Dimension(100, 50));
        Mod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModActionPerformed(evt);
            }
        });
        Num_Pad.add(Mod);

        Inverse.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        Inverse.setText("1/x");
        Inverse.setPreferredSize(new java.awt.Dimension(100, 50));
        Inverse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InverseActionPerformed(evt);
            }
        });
        Num_Pad.add(Inverse);

        Equals.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        Equals.setText("=");
        Equals.setPreferredSize(new java.awt.Dimension(50, 50));
        Equals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EqualsActionPerformed(evt);
            }
        });
        Num_Pad.add(Equals);

        Plus_Minus.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        Plus_Minus.setText("±");
        Plus_Minus.setPreferredSize(new java.awt.Dimension(50, 50));
        Plus_Minus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Plus_MinusActionPerformed(evt);
            }
        });
        Num_Pad.add(Plus_Minus);

        Calculator_Window.add(Num_Pad, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 390, 340));

        Workspace.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        Workspace.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        Workspace.setText("0");
        Calculator_Window.add(Workspace, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 400, 50));

        Angles.add(Radians);
        Radians.setText("In Radians");
        Calculator_Window.add(Radians, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 120, 150, 30));

        Angles.add(Degree);
        Degree.setSelected(true);
        Degree.setText("In Degrees");
        Calculator_Window.add(Degree, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 150, 30));

        History.setColumns(20);
        History.setRows(5);
        History_Scroll.setViewportView(History);

        Calculator_Window.add(History_Scroll, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 500, 390, 150));

        getContentPane().add(Calculator_Window, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 450, 0));

        Call_Window.setMinimumSize(new java.awt.Dimension(450, 0));
        Call_Window.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        In_Call.setMinimumSize(new java.awt.Dimension(450, 0));
        In_Call.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Call_End.setBackground(new java.awt.Color(0, 0, 0));
        Call_End.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/End_Call.png"))); // NOI18N
        Call_End.setToolTipText("");
        Call_End.setOpaque(false);
        Call_End.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Call_EndActionPerformed(evt);
            }
        });
        In_Call.add(Call_End, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 380, 110, 110));

        Call_Hold.setBackground(new java.awt.Color(0, 0, 0));
        Call_Hold.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Hold_Call.png"))); // NOI18N
        Call_Hold.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Hold_Call.png"))); // NOI18N
        Call_Hold.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Resume_Call.png"))); // NOI18N
        In_Call.add(Call_Hold, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 380, 110, 110));

        Call_Speaker.setBackground(new java.awt.Color(0, 0, 0));
        Call_Speaker.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Speaker_Disabled.png"))); // NOI18N
        Call_Speaker.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Speaker_Disabled.png"))); // NOI18N
        Call_Speaker.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Speaker_Enabled.png"))); // NOI18N
        In_Call.add(Call_Speaker, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 380, 110, 110));

        Caller.setFont(new java.awt.Font("Tekton Pro", 0, 36)); // NOI18N
        Caller.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        In_Call.add(Caller, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 100));

        Call_Background1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Calling_Background.png"))); // NOI18N
        In_Call.add(Call_Background1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 680));

        Call_Window.add(In_Call, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 0));

        Take_Call.setMinimumSize(new java.awt.Dimension(450, 0));
        Take_Call.setPreferredSize(new java.awt.Dimension(450, 680));
        Take_Call.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Call_Cut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Cut_Call.png"))); // NOI18N
        Call_Cut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Call_CutMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Call_CutMouseReleased(evt);
            }
        });
        Call_Cut.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                Call_CutMouseDragged(evt);
            }
        });
        Take_Call.add(Call_Cut, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 500, 400, 50));

        Call_Take.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Take_Call.png"))); // NOI18N
        Call_Take.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Call_TakeMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Call_TakeMouseReleased(evt);
            }
        });
        Call_Take.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                Call_TakeMouseDragged(evt);
            }
        });
        Take_Call.add(Call_Take, new org.netbeans.lib.awtextra.AbsoluteConstraints(-320, 500, 400, 50));

        Call_Taken.setBackground(new java.awt.Color(0, 200, 0));
        Call_Taken.setOpaque(true);
        Take_Call.add(Call_Taken, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 525, 10, 10));

        Call_Cuted.setBackground(new java.awt.Color(200, 0, 0));
        Call_Cuted.setOpaque(true);
        Take_Call.add(Call_Cuted, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 525, 10, 10));

        Caller_Info.setFont(new java.awt.Font("Tekton Pro", 0, 36)); // NOI18N
        Caller_Info.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Take_Call.add(Caller_Info, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 100));

        Call_Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Calling_Background.png"))); // NOI18N
        Take_Call.add(Call_Background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 680));

        Call_Window.add(Take_Call, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 680));

        Call_Background2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Calling_Background.png"))); // NOI18N
        Call_Window.add(Call_Background2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 680));

        getContentPane().add(Call_Window, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 450, 680));

        Sound_Window.setBackground(new java.awt.Color(0, 0, 0));
        Sound_Window.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Sound_Title.setBackground(new java.awt.Color(0, 75, 255));
        Sound_Title.setFont(new java.awt.Font("Tekton Pro", 1, 24)); // NOI18N
        Sound_Title.setForeground(new java.awt.Color(102, 255, 255));
        Sound_Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Sound_Title.setText("Sound");
        Sound_Title.setOpaque(true);
        Sound_Window.add(Sound_Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 450, 40));

        Sound_Choice.setBackground(new java.awt.Color(102, 102, 102));
        Sound_Choice.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Sound_Choice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/ON.png"))); // NOI18N
        Sound_Choice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Sound_ChoiceMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Sound_ChoiceMouseReleased(evt);
            }
        });
        Sound_Window.add(Sound_Choice, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 80, 50, 50));

        Sound_Sub_Title1.setBackground(new java.awt.Color(51, 51, 51));
        Sound_Sub_Title1.setFont(new java.awt.Font("Times New Roman", 0, 30)); // NOI18N
        Sound_Sub_Title1.setForeground(new java.awt.Color(102, 102, 255));
        Sound_Sub_Title1.setText("   Sound");
        Sound_Sub_Title1.setOpaque(true);
        Sound_Window.add(Sound_Sub_Title1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 448, 68));

        Vibrate_Choice.setBackground(new java.awt.Color(102, 102, 102));
        Vibrate_Choice.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Vibrate_Choice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/ON.png"))); // NOI18N
        Vibrate_Choice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Vibrate_ChoiceMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Vibrate_ChoiceMouseReleased(evt);
            }
        });
        Sound_Window.add(Vibrate_Choice, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 160, 50, 50));

        Sound_Sub_Title2.setBackground(new java.awt.Color(51, 51, 51));
        Sound_Sub_Title2.setFont(new java.awt.Font("Times New Roman", 0, 30)); // NOI18N
        Sound_Sub_Title2.setForeground(new java.awt.Color(102, 102, 255));
        Sound_Sub_Title2.setText("   Vibrate");
        Sound_Sub_Title2.setOpaque(true);
        Sound_Sub_Title2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Sound_Sub_Title2MouseClicked(evt);
            }
        });
        Sound_Window.add(Sound_Sub_Title2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 448, 68));

        Sound_Sub_Title3.setBackground(new java.awt.Color(51, 51, 51));
        Sound_Sub_Title3.setFont(new java.awt.Font("Tempus Sans ITC", 1, 24)); // NOI18N
        Sound_Sub_Title3.setForeground(new java.awt.Color(51, 153, 255));
        Sound_Sub_Title3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Sound_Sub_Title3.setText("System Sound");
        Sound_Sub_Title3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 2, true));
        Sound_Sub_Title3.setOpaque(true);
        Sound_Window.add(Sound_Sub_Title3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 410, 50));

        System_Volume.setBackground(new java.awt.Color(0, 102, 102));
        System_Volume.setForeground(new java.awt.Color(51, 153, 255));
        System_Volume.setMajorTickSpacing(1);
        System_Volume.setMaximum(10);
        System_Volume.setPaintLabels(true);
        System_Volume.setPaintTicks(true);
        System_Volume.setValue(5);
        Sound_Window.add(System_Volume, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, 410, 50));

        Sound_Back.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        Sound_Back.setText("<- Back");
        Sound_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Sound_BackActionPerformed(evt);
            }
        });
        Sound_Window.add(Sound_Back, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 660, 100, 30));

        getContentPane().add(Sound_Window, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 450, 0));

        Call_Settings_Window.setBackground(new java.awt.Color(0, 0, 0));
        Call_Settings_Window.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Call_Settings_Title.setBackground(new java.awt.Color(0, 75, 255));
        Call_Settings_Title.setFont(new java.awt.Font("Tekton Pro", 1, 24)); // NOI18N
        Call_Settings_Title.setForeground(new java.awt.Color(102, 255, 255));
        Call_Settings_Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Call_Settings_Title.setText("Call Settings");
        Call_Settings_Title.setOpaque(true);
        Call_Settings_Window.add(Call_Settings_Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 450, 40));

        Call_Settings_Sub_Title1.setBackground(new java.awt.Color(51, 51, 51));
        Call_Settings_Sub_Title1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 24)); // NOI18N
        Call_Settings_Sub_Title1.setForeground(new java.awt.Color(51, 153, 255));
        Call_Settings_Sub_Title1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Call_Settings_Sub_Title1.setText("Ringtone Ring.wav");
        Call_Settings_Sub_Title1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 2, true));
        Call_Settings_Sub_Title1.setOpaque(true);
        Call_Settings_Window.add(Call_Settings_Sub_Title1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 410, 50));

        Call_Settings_Back.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        Call_Settings_Back.setText("<- Back");
        Call_Settings_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Call_Settings_BackActionPerformed(evt);
            }
        });
        Call_Settings_Window.add(Call_Settings_Back, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 660, 100, 30));

        Choose_Ringtone.setBackground(new java.awt.Color(51, 102, 255));
        Choose_Ringtone.setFont(new java.awt.Font("Centaur", 1, 24)); // NOI18N
        Choose_Ringtone.setText("Change");
        Choose_Ringtone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Choose_RingtoneActionPerformed(evt);
            }
        });
        Call_Settings_Window.add(Choose_Ringtone, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 140, 260, 40));

        Display_Sub_Title5.setBackground(new java.awt.Color(51, 51, 51));
        Display_Sub_Title5.setFont(new java.awt.Font("Tempus Sans ITC", 1, 24)); // NOI18N
        Display_Sub_Title5.setForeground(new java.awt.Color(51, 153, 255));
        Display_Sub_Title5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Display_Sub_Title5.setText("Call Volume");
        Display_Sub_Title5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 2, true));
        Display_Sub_Title5.setOpaque(true);
        Call_Settings_Window.add(Display_Sub_Title5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 410, 50));

        Call_Settings_Volume.setBackground(new java.awt.Color(0, 102, 102));
        Call_Settings_Volume.setForeground(new java.awt.Color(51, 153, 255));
        Call_Settings_Volume.setMajorTickSpacing(1);
        Call_Settings_Volume.setMaximum(10);
        Call_Settings_Volume.setPaintLabels(true);
        Call_Settings_Volume.setPaintTicks(true);
        Call_Settings_Volume.setValue(5);
        Call_Settings_Window.add(Call_Settings_Volume, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 410, 50));

        getContentPane().add(Call_Settings_Window, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 450, 0));

        Display_Window.setBackground(new java.awt.Color(0, 0, 0));
        Display_Window.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Display_Title.setBackground(new java.awt.Color(0, 75, 255));
        Display_Title.setFont(new java.awt.Font("Tekton Pro", 1, 24)); // NOI18N
        Display_Title.setForeground(new java.awt.Color(102, 255, 255));
        Display_Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Display_Title.setText("Display");
        Display_Title.setOpaque(true);
        Display_Window.add(Display_Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 450, 40));

        Display_Sub_Title1.setBackground(new java.awt.Color(51, 51, 51));
        Display_Sub_Title1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 24)); // NOI18N
        Display_Sub_Title1.setForeground(new java.awt.Color(51, 153, 255));
        Display_Sub_Title1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Display_Sub_Title1.setText("Wallpaper");
        Display_Sub_Title1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 2, true));
        Display_Sub_Title1.setOpaque(true);
        Display_Window.add(Display_Sub_Title1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 410, 50));

        Display_Back.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        Display_Back.setText("<- Back");
        Display_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Display_BackActionPerformed(evt);
            }
        });
        Display_Window.add(Display_Back, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 660, 100, 30));

        Choose_Walpaper.setBackground(new java.awt.Color(51, 102, 255));
        Choose_Walpaper.setFont(new java.awt.Font("Centaur", 1, 24)); // NOI18N
        Choose_Walpaper.setText("Change");
        Choose_Walpaper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Choose_WalpaperActionPerformed(evt);
            }
        });
        Display_Window.add(Choose_Walpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 140, 260, 40));

        Display_Sub_Title2.setBackground(new java.awt.Color(51, 51, 51));
        Display_Sub_Title2.setFont(new java.awt.Font("Tempus Sans ITC", 1, 24)); // NOI18N
        Display_Sub_Title2.setForeground(new java.awt.Color(51, 153, 255));
        Display_Sub_Title2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Display_Sub_Title2.setText("Brightness");
        Display_Sub_Title2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 2, true));
        Display_Sub_Title2.setOpaque(true);
        Display_Window.add(Display_Sub_Title2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 410, 50));

        Display_Brightness.setBackground(new java.awt.Color(0, 102, 102));
        Display_Brightness.setForeground(new java.awt.Color(51, 153, 255));
        Display_Brightness.setMajorTickSpacing(1);
        Display_Brightness.setMaximum(10);
        Display_Brightness.setPaintLabels(true);
        Display_Brightness.setPaintTicks(true);
        Display_Brightness.setValue(5);
        Display_Window.add(Display_Brightness, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 410, 50));

        Display_Sub_Title3.setBackground(new java.awt.Color(51, 51, 51));
        Display_Sub_Title3.setFont(new java.awt.Font("Tempus Sans ITC", 1, 24)); // NOI18N
        Display_Sub_Title3.setForeground(new java.awt.Color(51, 153, 255));
        Display_Sub_Title3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Display_Sub_Title3.setText("Backlight Time (sec)");
        Display_Sub_Title3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 2, true));
        Display_Sub_Title3.setOpaque(true);
        Display_Window.add(Display_Sub_Title3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, 410, 50));

        Display_Backlight_Time.setBackground(new java.awt.Color(0, 102, 102));
        Display_Backlight_Time.setForeground(new java.awt.Color(51, 153, 255));
        Display_Backlight_Time.setMajorTickSpacing(10);
        Display_Backlight_Time.setMaximum(60);
        Display_Backlight_Time.setMinorTickSpacing(5);
        Display_Backlight_Time.setPaintLabels(true);
        Display_Backlight_Time.setPaintTicks(true);
        Display_Backlight_Time.setSnapToTicks(true);
        Display_Backlight_Time.setValue(5);
        Display_Window.add(Display_Backlight_Time, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 420, 410, 50));

        getContentPane().add(Display_Window, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 450, 0));

        Date_Time_Window.setBackground(new java.awt.Color(0, 0, 0));
        Date_Time_Window.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Date_Time_Title.setBackground(new java.awt.Color(0, 75, 255));
        Date_Time_Title.setFont(new java.awt.Font("Tekton Pro", 1, 24)); // NOI18N
        Date_Time_Title.setForeground(new java.awt.Color(102, 255, 255));
        Date_Time_Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Date_Time_Title.setText("Date and Time");
        Date_Time_Title.setOpaque(true);
        Date_Time_Window.add(Date_Time_Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 450, 40));

        Date_Time_Back.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        Date_Time_Back.setText("<- Back");
        Date_Time_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Date_Time_BackActionPerformed(evt);
            }
        });
        Date_Time_Window.add(Date_Time_Back, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 660, 100, 30));

        Display_Sub_Title6.setBackground(new java.awt.Color(51, 51, 51));
        Display_Sub_Title6.setFont(new java.awt.Font("Tempus Sans ITC", 1, 24)); // NOI18N
        Display_Sub_Title6.setForeground(new java.awt.Color(51, 153, 255));
        Display_Sub_Title6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Display_Sub_Title6.setText("Set Date");
        Display_Sub_Title6.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 2, true));
        Display_Sub_Title6.setOpaque(true);
        Date_Time_Window.add(Display_Sub_Title6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 410, 50));

        System_Day.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        System_Day.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        System_Day.setSelectedIndex(-1);
        Date_Time_Window.add(System_Day, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, 80, -1));

        System_Month.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        System_Month.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        System_Month.setSelectedIndex(-1);
        Date_Time_Window.add(System_Month, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 150, 80, -1));

        System_Year.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        System_Year.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2050", "2049", "2048", "2047", "2046", "2045", "2044", "2043", "2042", "2041", "2040", "2039", "2038", "2037", "2036", "2035", "2034", "2033", "2032", "2031", "2030", "2029", "2028", "2027", "2026", "2025", "2024", "2023", "2022", "2021", "2020", "2019", "2018", "2017", "2016", "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004", "2003", "2002", "2001", "2000", "1999", "1998", "1997", "1996", "1995", "1994", "1993", "1992", "1991", "1990", "1989", "1988", "1987", "1986", "1985", "1984", "1983", "1982", "1981", "1980", "1979", "1978", "1977", "1976", "1975", "1974", "1973", "1972", "1971", "1970", "1969", "1968", "1967", "1966", "1965", "1964", "1963", "1962", "1961", "1960", "1959", "1958", "1957", "1956", "1955", "1954", "1953", "1952", "1951", "1950", "1949", "1948", "1947", "1946", "1945", "1944", "1943", "1942", "1941", "1940", "1939", "1938", "1937", "1936", "1935", "1934", "1933", "1932", "1931", "1930", "1929", "1928", "1927", "1926", "1925", "1924", "1923", "1922", "1921", "1920", "1919", "1918", "1917", "1916", "1915", "1914", "1913", "1912", "1911", "1910", "1909", "1908", "1907", "1906", "1905", "1904", "1903", "1902", "1901", "1900" }));
        System_Year.setSelectedIndex(-1);
        Date_Time_Window.add(System_Year, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 150, 100, -1));

        getContentPane().add(Date_Time_Window, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 450, 0));

        Bluetooth_Window.setBackground(new java.awt.Color(0, 0, 0));
        Bluetooth_Window.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Bluetooth_Title.setBackground(new java.awt.Color(0, 75, 255));
        Bluetooth_Title.setFont(new java.awt.Font("Tekton Pro", 1, 24)); // NOI18N
        Bluetooth_Title.setForeground(new java.awt.Color(102, 255, 255));
        Bluetooth_Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Bluetooth_Title.setText("Bluetooth");
        Bluetooth_Title.setOpaque(true);
        Bluetooth_Window.add(Bluetooth_Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 450, 40));

        Bluetooth_Sub_Title1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 36)); // NOI18N
        Bluetooth_Sub_Title1.setForeground(new java.awt.Color(51, 153, 255));
        Bluetooth_Sub_Title1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Bluetooth_Sub_Title1.setText("Nearby Devices");
        Bluetooth_Sub_Title1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 0, 255), 2, true));
        Bluetooth_Window.add(Bluetooth_Sub_Title1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 430, 80));

        Bluetooth_Sub_Title2.setBackground(new java.awt.Color(51, 51, 51));
        Bluetooth_Sub_Title2.setFont(new java.awt.Font("Tempus Sans ITC", 1, 24)); // NOI18N
        Bluetooth_Sub_Title2.setForeground(new java.awt.Color(51, 153, 255));
        Bluetooth_Sub_Title2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Bluetooth_Sub_Title2.setText("No Devices Found");
        Bluetooth_Sub_Title2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 2, true));
        Bluetooth_Sub_Title2.setOpaque(true);
        Bluetooth_Window.add(Bluetooth_Sub_Title2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 410, 50));

        Bluetooth_Back.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        Bluetooth_Back.setText("<- Back");
        Bluetooth_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bluetooth_BackActionPerformed(evt);
            }
        });
        Bluetooth_Window.add(Bluetooth_Back, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 660, 100, 30));

        getContentPane().add(Bluetooth_Window, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 450, 0));

        Security_Window.setBackground(new java.awt.Color(0, 0, 0));
        Security_Window.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Security_Title.setBackground(new java.awt.Color(0, 75, 255));
        Security_Title.setFont(new java.awt.Font("Tekton Pro", 1, 24)); // NOI18N
        Security_Title.setForeground(new java.awt.Color(102, 255, 255));
        Security_Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Security_Title.setText("Security");
        Security_Title.setOpaque(true);
        Security_Window.add(Security_Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 450, 40));

        Security_Sub_Title1.setBackground(new java.awt.Color(51, 51, 51));
        Security_Sub_Title1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 24)); // NOI18N
        Security_Sub_Title1.setForeground(new java.awt.Color(51, 153, 255));
        Security_Sub_Title1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Security_Sub_Title1.setText("Change Lock Pattern");
        Security_Sub_Title1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 2, true));
        Security_Sub_Title1.setOpaque(true);
        Security_Window.add(Security_Sub_Title1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 410, 50));

        Change_Lock_Pattern.setBackground(new java.awt.Color(0, 0, 0));
        Change_Lock_Pattern.setFont(new java.awt.Font("Poor Richard", 1, 36)); // NOI18N
        Change_Lock_Pattern.setForeground(new java.awt.Color(51, 153, 255));
        Change_Lock_Pattern.setText("Change");
        Change_Lock_Pattern.setOpaque(true);
        Change_Lock_Pattern.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Change_Lock_PatternActionPerformed(evt);
            }
        });
        Security_Window.add(Change_Lock_Pattern, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 150, 220, 50));

        Security_Back.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        Security_Back.setText("<- Back");
        Security_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Security_BackActionPerformed(evt);
            }
        });
        Security_Window.add(Security_Back, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 660, 100, 30));

        getContentPane().add(Security_Window, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 450, 0));

        Updates_Window.setBackground(new java.awt.Color(0, 0, 0));
        Updates_Window.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Updates_Title.setBackground(new java.awt.Color(0, 75, 255));
        Updates_Title.setFont(new java.awt.Font("Tekton Pro", 1, 24)); // NOI18N
        Updates_Title.setForeground(new java.awt.Color(102, 255, 255));
        Updates_Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Updates_Title.setText("Software Updates");
        Updates_Title.setOpaque(true);
        Updates_Window.add(Updates_Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 450, 40));

        Updates_Back.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        Updates_Back.setText("<- Back");
        Updates_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Updates_BackActionPerformed(evt);
            }
        });
        Updates_Window.add(Updates_Back, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 660, 100, 30));

        Bluetooth_Sub_Title3.setBackground(new java.awt.Color(51, 51, 51));
        Bluetooth_Sub_Title3.setFont(new java.awt.Font("Tempus Sans ITC", 1, 24)); // NOI18N
        Bluetooth_Sub_Title3.setForeground(new java.awt.Color(51, 153, 255));
        Bluetooth_Sub_Title3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Bluetooth_Sub_Title3.setText("<html>\nNo software updates available.<br>\nCome back later.\n</html>");
        Bluetooth_Sub_Title3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 2, true));
        Bluetooth_Sub_Title3.setOpaque(true);
        Updates_Window.add(Bluetooth_Sub_Title3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 410, 120));

        getContentPane().add(Updates_Window, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 450, 0));

        About_Window.setBackground(new java.awt.Color(0, 0, 0));
        About_Window.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        About_Title.setBackground(new java.awt.Color(0, 75, 255));
        About_Title.setFont(new java.awt.Font("Tekton Pro", 1, 24)); // NOI18N
        About_Title.setForeground(new java.awt.Color(102, 255, 255));
        About_Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        About_Title.setText("About Blue Diamond");
        About_Title.setOpaque(true);
        About_Window.add(About_Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 450, 40));

        About_Back.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        About_Back.setText("<- Back");
        About_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                About_BackActionPerformed(evt);
            }
        });
        About_Window.add(About_Back, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 660, 100, 30));

        jTextArea1.setBackground(new java.awt.Color(0, 0, 0));
        jTextArea1.setColumns(20);
        jTextArea1.setForeground(new java.awt.Color(51, 153, 255));
        jTextArea1.setRows(5);
        jTextArea1.setText("Copyright © 2013, Akshay.L.Aradhya\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met: \n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer. \n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution. \n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nAll images in this software were created using GIMP 2.4 and are Copyrighted to © Akshay.L.Aradhya\n\nThe views and conclusions contained in the software and documentation are those\nof the authors and should not be interpreted as representing official policies, \neither expressed or implied, of the Blue Diamond Project.\n");
        jTextArea1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 204, 255), 1, true));
        jScrollPane2.setViewportView(jTextArea1);

        About_Window.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 430, 560));

        getContentPane().add(About_Window, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 450, 0));

        Network_Window.setBackground(new java.awt.Color(0, 0, 0));
        Network_Window.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Network_Title.setBackground(new java.awt.Color(0, 75, 255));
        Network_Title.setFont(new java.awt.Font("Tekton Pro", 1, 24)); // NOI18N
        Network_Title.setForeground(new java.awt.Color(102, 255, 255));
        Network_Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Network_Title.setText("Network");
        Network_Title.setOpaque(true);
        Network_Window.add(Network_Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 450, 40));

        Network_Sub_Title1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 36)); // NOI18N
        Network_Sub_Title1.setForeground(new java.awt.Color(51, 153, 255));
        Network_Sub_Title1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Network_Sub_Title1.setText("Showing Networks");
        Network_Sub_Title1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 0, 255), 2, true));
        Network_Window.add(Network_Sub_Title1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 430, 80));

        Network_Sub_Title2.setBackground(new java.awt.Color(51, 51, 51));
        Network_Sub_Title2.setFont(new java.awt.Font("Tempus Sans ITC", 1, 24)); // NOI18N
        Network_Sub_Title2.setForeground(new java.awt.Color(51, 153, 255));
        Network_Sub_Title2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Network_Sub_Title2.setText("No Networks Found");
        Network_Sub_Title2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 2, true));
        Network_Sub_Title2.setOpaque(true);
        Network_Window.add(Network_Sub_Title2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 410, 50));

        Network_Back.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        Network_Back.setText("<- Back");
        Network_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Network_BackActionPerformed(evt);
            }
        });
        Network_Window.add(Network_Back, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 660, 100, 30));

        getContentPane().add(Network_Window, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 450, 0));

        Wifi_Window.setBackground(new java.awt.Color(0, 0, 0));
        Wifi_Window.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Wifi_Title.setBackground(new java.awt.Color(0, 75, 255));
        Wifi_Title.setFont(new java.awt.Font("Tekton Pro", 1, 24)); // NOI18N
        Wifi_Title.setForeground(new java.awt.Color(102, 255, 255));
        Wifi_Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Wifi_Title.setText("Wifi");
        Wifi_Title.setOpaque(true);
        Wifi_Window.add(Wifi_Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 450, 40));

        Wifi_Sub_Title1.setFont(new java.awt.Font("Tempus Sans ITC", 1, 36)); // NOI18N
        Wifi_Sub_Title1.setForeground(new java.awt.Color(51, 153, 255));
        Wifi_Sub_Title1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Wifi_Sub_Title1.setText("Available Connections");
        Wifi_Sub_Title1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 0, 255), 2, true));
        Wifi_Window.add(Wifi_Sub_Title1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 430, 80));

        Wifi_Sub_Title2.setBackground(new java.awt.Color(51, 51, 51));
        Wifi_Sub_Title2.setFont(new java.awt.Font("Tempus Sans ITC", 1, 24)); // NOI18N
        Wifi_Sub_Title2.setForeground(new java.awt.Color(51, 153, 255));
        Wifi_Sub_Title2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Wifi_Sub_Title2.setText("No Networks Found");
        Wifi_Sub_Title2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 2, true));
        Wifi_Sub_Title2.setOpaque(true);
        Wifi_Window.add(Wifi_Sub_Title2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 410, 50));

        Wifi_Back.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        Wifi_Back.setText("<- Back");
        Wifi_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Wifi_BackActionPerformed(evt);
            }
        });
        Wifi_Window.add(Wifi_Back, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 660, 100, 30));

        getContentPane().add(Wifi_Window, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 450, 0));

        Settings_Window.setBackground(new java.awt.Color(0, 0, 0));
        Settings_Window.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Settings_Title.setBackground(new java.awt.Color(0, 75, 255));
        Settings_Title.setFont(new java.awt.Font("Tekton Pro", 1, 24)); // NOI18N
        Settings_Title.setForeground(new java.awt.Color(102, 255, 255));
        Settings_Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Settings_Title.setText("Settings");
        Settings_Title.setOpaque(true);
        Settings_Window.add(Settings_Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 450, 40));

        Settings_Scroll.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        Settings_Scroll.setMinimumSize(new java.awt.Dimension(450, 600));
        Settings_Scroll.setPreferredSize(new java.awt.Dimension(450, 600));
        Settings_Scroll.setWheelScrollingEnabled(false);

        Settings_List.setBackground(new java.awt.Color(0, 0, 0));
        Settings_List.setPreferredSize(new java.awt.Dimension(450, 770));
        Settings_List.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Settings_ListMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Settings_ListMouseExited(evt);
            }
        });
        Settings_List.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                Settings_ListMouseMoved(evt);
            }
        });
        Settings_List.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Settings_Airplane_Mode_Choice.setBackground(new java.awt.Color(102, 102, 102));
        Settings_Airplane_Mode_Choice.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Settings_Airplane_Mode_Choice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/ON.png"))); // NOI18N
        Settings_Airplane_Mode_Choice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Settings_Airplane_Mode_ChoiceMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Settings_Airplane_Mode_ChoiceMouseReleased(evt);
            }
        });
        Settings_List.add(Settings_Airplane_Mode_Choice, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 10, 50, 50));

        Settings_Airplane.setBackground(new java.awt.Color(51, 51, 51));
        Settings_Airplane.setFont(new java.awt.Font("Times New Roman", 0, 30)); // NOI18N
        Settings_Airplane.setForeground(new java.awt.Color(102, 102, 255));
        Settings_Airplane.setText("   Airplane Mode");
        Settings_Airplane.setOpaque(true);
        Settings_List.add(Settings_Airplane, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 448, 68));

        Settings_Wifi_Choice.setBackground(new java.awt.Color(102, 102, 102));
        Settings_Wifi_Choice.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Settings_Wifi_Choice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/OFF.png"))); // NOI18N
        Settings_Wifi_Choice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Settings_Wifi_ChoiceMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Settings_Wifi_ChoiceMouseReleased(evt);
            }
        });
        Settings_List.add(Settings_Wifi_Choice, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 80, 50, 50));

        Settings_Wifi.setBackground(new java.awt.Color(51, 51, 51));
        Settings_Wifi.setFont(new java.awt.Font("Times New Roman", 0, 30)); // NOI18N
        Settings_Wifi.setForeground(new java.awt.Color(102, 102, 255));
        Settings_Wifi.setText("   Wifi");
        Settings_Wifi.setOpaque(true);
        Settings_Wifi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Settings_WifiMouseClicked(evt);
            }
        });
        Settings_List.add(Settings_Wifi, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 71, 448, 68));

        Settings_Display.setBackground(new java.awt.Color(51, 51, 51));
        Settings_Display.setFont(new java.awt.Font("Times New Roman", 0, 30)); // NOI18N
        Settings_Display.setForeground(new java.awt.Color(102, 102, 255));
        Settings_Display.setText("   Display");
        Settings_Display.setOpaque(true);
        Settings_Display.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Settings_DisplayMouseClicked(evt);
            }
        });
        Settings_List.add(Settings_Display, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 141, 448, 68));

        Settings_Bluetooth_Choice.setBackground(new java.awt.Color(102, 102, 102));
        Settings_Bluetooth_Choice.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Settings_Bluetooth_Choice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/OFF.png"))); // NOI18N
        Settings_Bluetooth_Choice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Settings_Bluetooth_ChoiceMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Settings_Bluetooth_ChoiceMouseReleased(evt);
            }
        });
        Settings_List.add(Settings_Bluetooth_Choice, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 220, 50, 50));

        Settings_Bluetooth.setBackground(new java.awt.Color(51, 51, 51));
        Settings_Bluetooth.setFont(new java.awt.Font("Times New Roman", 0, 30)); // NOI18N
        Settings_Bluetooth.setForeground(new java.awt.Color(102, 102, 255));
        Settings_Bluetooth.setText("   Bluetooth");
        Settings_Bluetooth.setOpaque(true);
        Settings_Bluetooth.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Settings_BluetoothMouseClicked(evt);
            }
        });
        Settings_List.add(Settings_Bluetooth, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 211, 448, 68));

        Settings_Call.setBackground(new java.awt.Color(51, 51, 51));
        Settings_Call.setFont(new java.awt.Font("Times New Roman", 0, 30)); // NOI18N
        Settings_Call.setForeground(new java.awt.Color(102, 102, 255));
        Settings_Call.setText("   Call");
        Settings_Call.setOpaque(true);
        Settings_Call.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Settings_CallMouseClicked(evt);
            }
        });
        Settings_List.add(Settings_Call, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 281, 448, 68));

        Settings_Sound.setBackground(new java.awt.Color(51, 51, 51));
        Settings_Sound.setFont(new java.awt.Font("Times New Roman", 0, 30)); // NOI18N
        Settings_Sound.setForeground(new java.awt.Color(102, 102, 255));
        Settings_Sound.setText("   Sound");
        Settings_Sound.setOpaque(true);
        Settings_Sound.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Settings_SoundMouseClicked(evt);
            }
        });
        Settings_List.add(Settings_Sound, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 351, 448, 68));

        Settings_Date_Time.setBackground(new java.awt.Color(51, 51, 51));
        Settings_Date_Time.setFont(new java.awt.Font("Times New Roman", 0, 30)); // NOI18N
        Settings_Date_Time.setForeground(new java.awt.Color(102, 102, 255));
        Settings_Date_Time.setText("   Date and Time");
        Settings_Date_Time.setOpaque(true);
        Settings_Date_Time.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Settings_Date_TimeMouseClicked(evt);
            }
        });
        Settings_List.add(Settings_Date_Time, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 421, 448, 68));

        Settings_Network.setBackground(new java.awt.Color(51, 51, 51));
        Settings_Network.setFont(new java.awt.Font("Times New Roman", 0, 30)); // NOI18N
        Settings_Network.setForeground(new java.awt.Color(102, 102, 255));
        Settings_Network.setText("   Network");
        Settings_Network.setOpaque(true);
        Settings_Network.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Settings_NetworkMouseClicked(evt);
            }
        });
        Settings_List.add(Settings_Network, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 491, 448, 68));

        Settings_Security.setBackground(new java.awt.Color(51, 51, 51));
        Settings_Security.setFont(new java.awt.Font("Times New Roman", 0, 30)); // NOI18N
        Settings_Security.setForeground(new java.awt.Color(102, 102, 255));
        Settings_Security.setText("   Security");
        Settings_Security.setOpaque(true);
        Settings_Security.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Settings_SecurityMouseClicked(evt);
            }
        });
        Settings_List.add(Settings_Security, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 561, 448, 68));

        Settings_About.setBackground(new java.awt.Color(51, 51, 51));
        Settings_About.setFont(new java.awt.Font("Times New Roman", 0, 30)); // NOI18N
        Settings_About.setForeground(new java.awt.Color(102, 102, 255));
        Settings_About.setText("   About Blue Diamond");
        Settings_About.setOpaque(true);
        Settings_About.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Settings_AboutMouseClicked(evt);
            }
        });
        Settings_List.add(Settings_About, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 631, 448, 68));

        Settings_Updates.setBackground(new java.awt.Color(51, 51, 51));
        Settings_Updates.setFont(new java.awt.Font("Times New Roman", 0, 30)); // NOI18N
        Settings_Updates.setForeground(new java.awt.Color(102, 102, 255));
        Settings_Updates.setText("   Check for Software Updates");
        Settings_Updates.setOpaque(true);
        Settings_Updates.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Settings_UpdatesMouseClicked(evt);
            }
        });
        Settings_List.add(Settings_Updates, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 701, 448, 68));

        Settings_Scroll.setViewportView(Settings_List);

        Settings_Window.add(Settings_Scroll, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 450, 590));

        Settings_Back.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        Settings_Back.setText("<- Back");
        Settings_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Settings_BackActionPerformed(evt);
            }
        });
        Settings_Window.add(Settings_Back, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 665, 100, 30));

        getContentPane().add(Settings_Window, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 450, 0));

        Message_Window.setBackground(new java.awt.Color(0, 130, 255));
        Message_Window.setMinimumSize(new java.awt.Dimension(450, 0));
        Message_Window.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Message_Select_All.setDoubleBuffered(true);
        Message_Select_All.setOpaque(false);
        Message_Select_All.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Message_Select_AllActionPerformed(evt);
            }
        });
        Message_Window.add(Message_Select_All, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 30, 20, 0));

        Message_Title.setBackground(new java.awt.Color(0, 75, 255));
        Message_Title.setFont(new java.awt.Font("Tekton Pro", 1, 24)); // NOI18N
        Message_Title.setForeground(new java.awt.Color(102, 255, 255));
        Message_Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Message_Title.setText("Messages");
        Message_Title.setOpaque(true);
        Message_Window.add(Message_Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 450, 40));

        Message_Compose.setBackground(new java.awt.Color(255, 255, 255));
        Message_Compose.setLayout(null);

        Compose_Sub_Title1.setBackground(new java.awt.Color(0, 75, 255));
        Compose_Sub_Title1.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        Compose_Sub_Title1.setForeground(new java.awt.Color(0, 255, 255));
        Compose_Sub_Title1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Compose_Sub_Title1.setText("To  :");
        Compose_Sub_Title1.setOpaque(true);
        Message_Compose.add(Compose_Sub_Title1);
        Compose_Sub_Title1.setBounds(20, 10, 80, 40);
        Message_Compose.add(To_Number);
        To_Number.setBounds(100, 10, 330, 40);

        Compose_Sub_Title2.setBackground(new java.awt.Color(0, 75, 255));
        Compose_Sub_Title2.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        Compose_Sub_Title2.setForeground(new java.awt.Color(0, 255, 255));
        Compose_Sub_Title2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Compose_Sub_Title2.setText("Message :");
        Compose_Sub_Title2.setOpaque(true);
        Message_Compose.add(Compose_Sub_Title2);
        Compose_Sub_Title2.setBounds(20, 60, 410, 40);

        Compose_SMS.setColumns(20);
        Compose_SMS.setRows(5);
        Compose_SMS_Scroll_Pane.setViewportView(Compose_SMS);

        Message_Compose.add(Compose_SMS_Scroll_Pane);
        Compose_SMS_Scroll_Pane.setBounds(20, 100, 410, 290);

        Compose_Send.setBackground(new java.awt.Color(0, 150, 255));
        Compose_Send.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        Compose_Send.setForeground(new java.awt.Color(0, 0, 204));
        Compose_Send.setText("Send");
        Compose_Send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Compose_SendActionPerformed(evt);
            }
        });
        Message_Compose.add(Compose_Send);
        Compose_Send.setBounds(90, 410, 100, 41);

        Compose_Cancel.setBackground(new java.awt.Color(0, 150, 255));
        Compose_Cancel.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        Compose_Cancel.setForeground(new java.awt.Color(0, 0, 204));
        Compose_Cancel.setText("Clear");
        Compose_Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Compose_CancelActionPerformed(evt);
            }
        });
        Message_Compose.add(Compose_Cancel);
        Compose_Cancel.setBounds(240, 410, 91, 41);

        Message_Window.add(Message_Compose, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 59, 450, 0));

        Message_Scroll.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        Message_Scroll.setMinimumSize(new java.awt.Dimension(450, 600));
        Message_Scroll.setPreferredSize(new java.awt.Dimension(450, 600));
        Message_Scroll.setWheelScrollingEnabled(false);

        Message_List.setBackground(new java.awt.Color(0, 150, 255));
        Message_List.setPreferredSize(new java.awt.Dimension(450, 594));
        Message_List.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Message_ListMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Message_ListMouseExited(evt);
            }
        });
        Message_List.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                Message_ListMouseMoved(evt);
            }
        });

        javax.swing.GroupLayout Message_ListLayout = new javax.swing.GroupLayout(Message_List);
        Message_List.setLayout(Message_ListLayout);
        Message_ListLayout.setHorizontalGroup(
            Message_ListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 450, Short.MAX_VALUE)
        );
        Message_ListLayout.setVerticalGroup(
            Message_ListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 598, Short.MAX_VALUE)
        );

        Message_Scroll.setViewportView(Message_List);

        Message_Window.add(Message_Scroll, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 450, 600));

        Message_Convo_Scroll.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        Message_Convo_Scroll.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        Message_Convo_Scroll.setMinimumSize(new java.awt.Dimension(450, 0));
        Message_Convo_Scroll.setPreferredSize(new java.awt.Dimension(450, 600));

        Message_Convo.setBackground(new java.awt.Color(255, 255, 255));
        Message_Convo.setToolTipText("");
        Message_Convo.setPreferredSize(new java.awt.Dimension(450, 594));
        Message_Convo.setLayout(null);
        Message_Convo_Scroll.setViewportView(Message_Convo);

        Message_Window.add(Message_Convo_Scroll, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 450, 0));

        Message_Back.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        Message_Back.setText("<- Back");
        Message_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Message_BackActionPerformed(evt);
            }
        });
        Message_Window.add(Message_Back, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 665, 100, 30));

        Message_Write_New.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        Message_Write_New.setText("Compose New");
        Message_Write_New.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Message_Write_NewActionPerformed(evt);
            }
        });
        Message_Window.add(Message_Write_New, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 665, 150, 30));

        Message_Delete.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        Message_Delete.setText("Delete");
        Message_Delete.setToolTipText("");
        Message_Delete.setName("Manage"); // NOI18N
        Message_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Message_DeleteActionPerformed(evt);
            }
        });
        Message_Window.add(Message_Delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 665, 110, 30));

        getContentPane().add(Message_Window, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 450, 0));

        Contact_Window.setMinimumSize(new java.awt.Dimension(450, 0));
        Contact_Window.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Contacts_Title.setBackground(new java.awt.Color(0, 75, 255));
        Contacts_Title.setFont(new java.awt.Font("Tekton Pro", 1, 24)); // NOI18N
        Contacts_Title.setForeground(new java.awt.Color(102, 255, 255));
        Contacts_Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Contacts_Title.setText("Contacts");
        Contacts_Title.setOpaque(true);
        Contact_Window.add(Contacts_Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 450, 40));

        Contact_Info.setBackground(new java.awt.Color(0, 0, 0));
        Contact_Info.setLayout(null);
        Contact_Window.add(Contact_Info, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 450, 0));

        Create_Contact.setBackground(new java.awt.Color(255, 255, 255));
        Create_Contact.setLayout(null);

        Create_Sub_Title1.setBackground(new java.awt.Color(0, 75, 255));
        Create_Sub_Title1.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        Create_Sub_Title1.setForeground(new java.awt.Color(0, 255, 255));
        Create_Sub_Title1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Create_Sub_Title1.setText("Name :");
        Create_Sub_Title1.setOpaque(true);
        Create_Contact.add(Create_Sub_Title1);
        Create_Sub_Title1.setBounds(20, 20, 80, 40);
        Create_Contact.add(Create_Name);
        Create_Name.setBounds(100, 20, 330, 40);

        Create_Sub_Title2.setBackground(new java.awt.Color(0, 75, 255));
        Create_Sub_Title2.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        Create_Sub_Title2.setForeground(new java.awt.Color(0, 255, 255));
        Create_Sub_Title2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Create_Sub_Title2.setText("Home Number :");
        Create_Sub_Title2.setOpaque(true);
        Create_Contact.add(Create_Sub_Title2);
        Create_Sub_Title2.setBounds(20, 70, 160, 40);
        Create_Contact.add(Create_Number1);
        Create_Number1.setBounds(180, 70, 250, 40);

        Create_Sub_Title5.setBackground(new java.awt.Color(0, 75, 255));
        Create_Sub_Title5.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        Create_Sub_Title5.setForeground(new java.awt.Color(0, 255, 255));
        Create_Sub_Title5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Create_Sub_Title5.setText("Mobile Number :");
        Create_Sub_Title5.setOpaque(true);
        Create_Contact.add(Create_Sub_Title5);
        Create_Sub_Title5.setBounds(20, 120, 160, 40);
        Create_Contact.add(Create_Number2);
        Create_Number2.setBounds(180, 120, 250, 40);

        Create_Sub_Title6.setBackground(new java.awt.Color(0, 75, 255));
        Create_Sub_Title6.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        Create_Sub_Title6.setForeground(new java.awt.Color(0, 255, 255));
        Create_Sub_Title6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Create_Sub_Title6.setText("Work Number :");
        Create_Sub_Title6.setOpaque(true);
        Create_Contact.add(Create_Sub_Title6);
        Create_Sub_Title6.setBounds(20, 170, 160, 40);
        Create_Contact.add(Create_Number3);
        Create_Number3.setBounds(180, 170, 250, 40);

        Create_Sub_Title3.setBackground(new java.awt.Color(0, 75, 255));
        Create_Sub_Title3.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        Create_Sub_Title3.setForeground(new java.awt.Color(0, 255, 255));
        Create_Sub_Title3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Create_Sub_Title3.setText("E-Mail :");
        Create_Sub_Title3.setOpaque(true);
        Create_Contact.add(Create_Sub_Title3);
        Create_Sub_Title3.setBounds(20, 220, 80, 40);
        Create_Contact.add(Create_Email);
        Create_Email.setBounds(100, 220, 330, 40);

        Create_Sub_Title4.setBackground(new java.awt.Color(0, 75, 255));
        Create_Sub_Title4.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        Create_Sub_Title4.setForeground(new java.awt.Color(0, 255, 255));
        Create_Sub_Title4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Create_Sub_Title4.setText("Date of Birth :");
        Create_Sub_Title4.setOpaque(true);
        Create_Contact.add(Create_Sub_Title4);
        Create_Sub_Title4.setBounds(20, 280, 130, 40);

        Create_Day.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        Create_Day.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        Create_Day.setSelectedIndex(-1);
        Create_Contact.add(Create_Day);
        Create_Day.setBounds(160, 280, 70, 40);

        Create_Month.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        Create_Month.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        Create_Month.setSelectedIndex(-1);
        Create_Contact.add(Create_Month);
        Create_Month.setBounds(240, 280, 70, 40);

        Create_Year.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        Create_Year.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2050", "2049", "2048", "2047", "2046", "2045", "2044", "2043", "2042", "2041", "2040", "2039", "2038", "2037", "2036", "2035", "2034", "2033", "2032", "2031", "2030", "2029", "2028", "2027", "2026", "2025", "2024", "2023", "2022", "2021", "2020", "2019", "2018", "2017", "2016", "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004", "2003", "2002", "2001", "2000", "1999", "1998", "1997", "1996", "1995", "1994", "1993", "1992", "1991", "1990", "1989", "1988", "1987", "1986", "1985", "1984", "1983", "1982", "1981", "1980", "1979", "1978", "1977", "1976", "1975", "1974", "1973", "1972", "1971", "1970", "1969", "1968", "1967", "1966", "1965", "1964", "1963", "1962", "1961", "1960", "1959", "1958", "1957", "1956", "1955", "1954", "1953", "1952", "1951", "1950", "1949", "1948", "1947", "1946", "1945", "1944", "1943", "1942", "1941", "1940", "1939", "1938", "1937", "1936", "1935", "1934", "1933", "1932", "1931", "1930", "1929", "1928", "1927", "1926", "1925", "1924", "1923", "1922", "1921", "1920", "1919", "1918", "1917", "1916", "1915", "1914", "1913", "1912", "1911", "1910", "1909", "1908", "1907", "1906", "1905", "1904", "1903", "1902", "1901", "1900" }));
        Create_Year.setSelectedIndex(-1);
        Create_Contact.add(Create_Year);
        Create_Year.setBounds(320, 280, 110, 40);

        Create_Add.setBackground(new java.awt.Color(0, 150, 255));
        Create_Add.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        Create_Add.setForeground(new java.awt.Color(0, 0, 204));
        Create_Add.setText("Add");
        Create_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Create_AddActionPerformed(evt);
            }
        });
        Create_Contact.add(Create_Add);
        Create_Add.setBounds(30, 530, 120, 40);

        Create_Clear.setBackground(new java.awt.Color(0, 150, 255));
        Create_Clear.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        Create_Clear.setForeground(new java.awt.Color(0, 0, 204));
        Create_Clear.setText("Clear");
        Create_Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Create_ClearActionPerformed(evt);
            }
        });
        Create_Contact.add(Create_Clear);
        Create_Clear.setBounds(170, 530, 120, 40);

        Create_Cancel.setBackground(new java.awt.Color(0, 150, 255));
        Create_Cancel.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        Create_Cancel.setForeground(new java.awt.Color(0, 0, 204));
        Create_Cancel.setText("Cancel");
        Create_Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Create_CancelActionPerformed(evt);
            }
        });
        Create_Contact.add(Create_Cancel);
        Create_Cancel.setBounds(310, 530, 120, 40);

        Contact_Window.add(Create_Contact, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 59, 450, 0));

        Edit_Contact.setBackground(new java.awt.Color(255, 255, 255));
        Edit_Contact.setLayout(null);

        Edit_Sub_Title1.setBackground(new java.awt.Color(0, 75, 255));
        Edit_Sub_Title1.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        Edit_Sub_Title1.setForeground(new java.awt.Color(0, 255, 255));
        Edit_Sub_Title1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Edit_Sub_Title1.setText("Name :");
        Edit_Sub_Title1.setOpaque(true);
        Edit_Contact.add(Edit_Sub_Title1);
        Edit_Sub_Title1.setBounds(20, 20, 80, 40);
        Edit_Contact.add(Edit_Name);
        Edit_Name.setBounds(100, 20, 330, 40);

        Edit_Sub_Title2.setBackground(new java.awt.Color(0, 75, 255));
        Edit_Sub_Title2.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        Edit_Sub_Title2.setForeground(new java.awt.Color(0, 255, 255));
        Edit_Sub_Title2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Edit_Sub_Title2.setText("Home Number :");
        Edit_Sub_Title2.setOpaque(true);
        Edit_Contact.add(Edit_Sub_Title2);
        Edit_Sub_Title2.setBounds(20, 70, 160, 40);
        Edit_Contact.add(Edit_Number1);
        Edit_Number1.setBounds(180, 70, 250, 40);

        Edit_Sub_Title5.setBackground(new java.awt.Color(0, 75, 255));
        Edit_Sub_Title5.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        Edit_Sub_Title5.setForeground(new java.awt.Color(0, 255, 255));
        Edit_Sub_Title5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Edit_Sub_Title5.setText("Mobile Number :");
        Edit_Sub_Title5.setOpaque(true);
        Edit_Contact.add(Edit_Sub_Title5);
        Edit_Sub_Title5.setBounds(20, 120, 160, 40);
        Edit_Contact.add(Edit_Number2);
        Edit_Number2.setBounds(180, 120, 250, 40);

        Edit_Sub_Title6.setBackground(new java.awt.Color(0, 75, 255));
        Edit_Sub_Title6.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        Edit_Sub_Title6.setForeground(new java.awt.Color(0, 255, 255));
        Edit_Sub_Title6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Edit_Sub_Title6.setText("Work Number :");
        Edit_Sub_Title6.setOpaque(true);
        Edit_Contact.add(Edit_Sub_Title6);
        Edit_Sub_Title6.setBounds(20, 170, 160, 40);
        Edit_Contact.add(Edit_Number3);
        Edit_Number3.setBounds(180, 170, 250, 40);

        Edit_Sub_Title3.setBackground(new java.awt.Color(0, 75, 255));
        Edit_Sub_Title3.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        Edit_Sub_Title3.setForeground(new java.awt.Color(0, 255, 255));
        Edit_Sub_Title3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Edit_Sub_Title3.setText("E-Mail :");
        Edit_Sub_Title3.setOpaque(true);
        Edit_Contact.add(Edit_Sub_Title3);
        Edit_Sub_Title3.setBounds(20, 220, 80, 40);
        Edit_Contact.add(Edit_Email);
        Edit_Email.setBounds(100, 220, 330, 40);

        Edit_Sub_Title4.setBackground(new java.awt.Color(0, 75, 255));
        Edit_Sub_Title4.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        Edit_Sub_Title4.setForeground(new java.awt.Color(0, 255, 255));
        Edit_Sub_Title4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Edit_Sub_Title4.setText("Date of Birth :");
        Edit_Sub_Title4.setOpaque(true);
        Edit_Contact.add(Edit_Sub_Title4);
        Edit_Sub_Title4.setBounds(20, 280, 130, 40);

        Edit_Day.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        Edit_Day.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        Edit_Day.setSelectedIndex(-1);
        Edit_Contact.add(Edit_Day);
        Edit_Day.setBounds(160, 280, 70, 40);

        Edit_Month.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        Edit_Month.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        Edit_Month.setSelectedIndex(-1);
        Edit_Contact.add(Edit_Month);
        Edit_Month.setBounds(240, 280, 70, 40);

        Edit_Year.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        Edit_Year.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2050", "2049", "2048", "2047", "2046", "2045", "2044", "2043", "2042", "2041", "2040", "2039", "2038", "2037", "2036", "2035", "2034", "2033", "2032", "2031", "2030", "2029", "2028", "2027", "2026", "2025", "2024", "2023", "2022", "2021", "2020", "2019", "2018", "2017", "2016", "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004", "2003", "2002", "2001", "2000", "1999", "1998", "1997", "1996", "1995", "1994", "1993", "1992", "1991", "1990", "1989", "1988", "1987", "1986", "1985", "1984", "1983", "1982", "1981", "1980", "1979", "1978", "1977", "1976", "1975", "1974", "1973", "1972", "1971", "1970", "1969", "1968", "1967", "1966", "1965", "1964", "1963", "1962", "1961", "1960", "1959", "1958", "1957", "1956", "1955", "1954", "1953", "1952", "1951", "1950", "1949", "1948", "1947", "1946", "1945", "1944", "1943", "1942", "1941", "1940", "1939", "1938", "1937", "1936", "1935", "1934", "1933", "1932", "1931", "1930", "1929", "1928", "1927", "1926", "1925", "1924", "1923", "1922", "1921", "1920", "1919", "1918", "1917", "1916", "1915", "1914", "1913", "1912", "1911", "1910", "1909", "1908", "1907", "1906", "1905", "1904", "1903", "1902", "1901", "1900" }));
        Edit_Year.setSelectedIndex(-1);
        Edit_Contact.add(Edit_Year);
        Edit_Year.setBounds(320, 280, 110, 40);

        Edit_Save.setBackground(new java.awt.Color(0, 150, 255));
        Edit_Save.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        Edit_Save.setForeground(new java.awt.Color(0, 0, 204));
        Edit_Save.setText("Save");
        Edit_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Edit_SaveActionPerformed(evt);
            }
        });
        Edit_Contact.add(Edit_Save);
        Edit_Save.setBounds(30, 530, 120, 40);

        Edit_Delete.setBackground(new java.awt.Color(0, 150, 255));
        Edit_Delete.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        Edit_Delete.setForeground(new java.awt.Color(0, 0, 204));
        Edit_Delete.setText("Delete");
        Edit_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Edit_DeleteActionPerformed(evt);
            }
        });
        Edit_Contact.add(Edit_Delete);
        Edit_Delete.setBounds(170, 530, 120, 40);

        Edit_Cancel.setBackground(new java.awt.Color(0, 150, 255));
        Edit_Cancel.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        Edit_Cancel.setForeground(new java.awt.Color(0, 0, 204));
        Edit_Cancel.setText("Cancel");
        Edit_Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Edit_CancelActionPerformed(evt);
            }
        });
        Edit_Contact.add(Edit_Cancel);
        Edit_Cancel.setBounds(310, 530, 120, 40);

        Edit_Clear.setBackground(new java.awt.Color(0, 150, 255));
        Edit_Clear.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        Edit_Clear.setForeground(new java.awt.Color(0, 0, 204));
        Edit_Clear.setText("Clear");
        Edit_Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Edit_ClearActionPerformed(evt);
            }
        });
        Edit_Contact.add(Edit_Clear);
        Edit_Clear.setBounds(170, 530, 120, 0);
        Edit_Contact.add(Edit_Sl_No);
        Edit_Sl_No.setBounds(30, 480, 400, 0);

        Contact_Window.add(Edit_Contact, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 59, 450, 0));

        Contact_Scroll.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        Contact_Scroll.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        Contact_Scroll.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Contact_ScrollMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Contact_ScrollMouseExited(evt);
            }
        });

        Contact_List.setBackground(new java.awt.Color(0, 0, 0));
        Contact_List.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Contact_ListMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Contact_ListMouseExited(evt);
            }
        });
        Contact_List.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                Contact_ListMouseMoved(evt);
            }
        });

        javax.swing.GroupLayout Contact_ListLayout = new javax.swing.GroupLayout(Contact_List);
        Contact_List.setLayout(Contact_ListLayout);
        Contact_ListLayout.setHorizontalGroup(
            Contact_ListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 448, Short.MAX_VALUE)
        );
        Contact_ListLayout.setVerticalGroup(
            Contact_ListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 598, Short.MAX_VALUE)
        );

        Contact_Scroll.setViewportView(Contact_List);

        Contact_Window.add(Contact_Scroll, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 450, 600));

        Contact_Back.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        Contact_Back.setText("<- Back");
        Contact_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Contact_BackActionPerformed(evt);
            }
        });
        Contact_Window.add(Contact_Back, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 660, 100, 30));

        Contact_Create_New.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        Contact_Create_New.setText("Create New");
        Contact_Create_New.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Contact_Create_NewActionPerformed(evt);
            }
        });
        Contact_Window.add(Contact_Create_New, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 660, -1, 30));

        getContentPane().add(Contact_Window, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 450, 0));

        Games_Window.setBackground(new java.awt.Color(0, 0, 0));
        Games_Window.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Games_Title.setBackground(new java.awt.Color(0, 75, 255));
        Games_Title.setFont(new java.awt.Font("Tekton Pro", 1, 24)); // NOI18N
        Games_Title.setForeground(new java.awt.Color(102, 255, 255));
        Games_Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Games_Title.setText("Games");
        Games_Title.setOpaque(true);
        Games_Window.add(Games_Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 450, 40));

        Play_Tic_Tac_Toe.setBackground(new java.awt.Color(0, 0, 0));
        Play_Tic_Tac_Toe.setFont(new java.awt.Font("Tekton Pro", 0, 24)); // NOI18N
        Play_Tic_Tac_Toe.setForeground(new java.awt.Color(0, 153, 255));
        Play_Tic_Tac_Toe.setText("Tic Tac Toe");
        Play_Tic_Tac_Toe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Play_Tic_Tac_ToeActionPerformed(evt);
            }
        });
        Games_Window.add(Play_Tic_Tac_Toe, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 410, 100));

        Games_Window_Back.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        Games_Window_Back.setText("<- Back");
        Games_Window_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Games_Window_BackActionPerformed(evt);
            }
        });
        Games_Window.add(Games_Window_Back, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 660, 100, 30));

        getContentPane().add(Games_Window, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 450, 0));

        Tic_Tac_Toe_Window.setBackground(new java.awt.Color(0, 0, 0));
        Tic_Tac_Toe_Window.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        box1.setEditable(false);
        box1.setBackground(new java.awt.Color(51, 51, 51));
        box1.setFont(new java.awt.Font("Tahoma", 0, 100)); // NOI18N
        box1.setForeground(new java.awt.Color(10, 150, 255));
        box1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        box1.setFocusable(false);
        box1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                box1MouseClicked(evt);
            }
        });
        Tic_Tac_Toe_Window.add(box1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, 100, 100));

        box2.setEditable(false);
        box2.setBackground(new java.awt.Color(51, 51, 51));
        box2.setFont(new java.awt.Font("Tahoma", 0, 100)); // NOI18N
        box2.setForeground(new java.awt.Color(10, 150, 255));
        box2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        box2.setFocusable(false);
        box2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                box2MouseClicked(evt);
            }
        });
        Tic_Tac_Toe_Window.add(box2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 120, 100, 100));

        box3.setEditable(false);
        box3.setBackground(new java.awt.Color(51, 51, 51));
        box3.setFont(new java.awt.Font("Tahoma", 0, 100)); // NOI18N
        box3.setForeground(new java.awt.Color(10, 150, 255));
        box3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        box3.setFocusable(false);
        box3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                box3MouseClicked(evt);
            }
        });
        Tic_Tac_Toe_Window.add(box3, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 120, 100, 100));

        box4.setEditable(false);
        box4.setBackground(new java.awt.Color(51, 51, 51));
        box4.setFont(new java.awt.Font("Tahoma", 0, 100)); // NOI18N
        box4.setForeground(new java.awt.Color(10, 150, 255));
        box4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        box4.setFocusable(false);
        box4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                box4MouseClicked(evt);
            }
        });
        Tic_Tac_Toe_Window.add(box4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 220, 100, 100));

        box5.setEditable(false);
        box5.setBackground(new java.awt.Color(51, 51, 51));
        box5.setFont(new java.awt.Font("Tahoma", 0, 100)); // NOI18N
        box5.setForeground(new java.awt.Color(10, 150, 255));
        box5.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        box5.setFocusable(false);
        box5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                box5MouseClicked(evt);
            }
        });
        Tic_Tac_Toe_Window.add(box5, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 220, 100, 100));

        box6.setEditable(false);
        box6.setBackground(new java.awt.Color(51, 51, 51));
        box6.setFont(new java.awt.Font("Tahoma", 0, 100)); // NOI18N
        box6.setForeground(new java.awt.Color(10, 150, 255));
        box6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        box6.setFocusable(false);
        box6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                box6MouseClicked(evt);
            }
        });
        Tic_Tac_Toe_Window.add(box6, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 220, 100, 100));

        box7.setEditable(false);
        box7.setBackground(new java.awt.Color(51, 51, 51));
        box7.setFont(new java.awt.Font("Tahoma", 0, 100)); // NOI18N
        box7.setForeground(new java.awt.Color(10, 150, 255));
        box7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        box7.setFocusable(false);
        box7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                box7MouseClicked(evt);
            }
        });
        Tic_Tac_Toe_Window.add(box7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 320, 100, 100));

        box8.setEditable(false);
        box8.setBackground(new java.awt.Color(51, 51, 51));
        box8.setFont(new java.awt.Font("Tahoma", 0, 100)); // NOI18N
        box8.setForeground(new java.awt.Color(10, 150, 255));
        box8.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        box8.setFocusable(false);
        box8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                box8MouseClicked(evt);
            }
        });
        Tic_Tac_Toe_Window.add(box8, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 320, 100, 100));

        box9.setEditable(false);
        box9.setBackground(new java.awt.Color(51, 51, 51));
        box9.setFont(new java.awt.Font("Tahoma", 0, 100)); // NOI18N
        box9.setForeground(new java.awt.Color(10, 150, 255));
        box9.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        box9.setFocusable(false);
        box9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                box9MouseClicked(evt);
            }
        });
        Tic_Tac_Toe_Window.add(box9, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 320, 100, 100));

        refresh.setBackground(new java.awt.Color(0, 0, 0));
        refresh.setFont(new java.awt.Font("Comic Sans MS", 0, 36)); // NOI18N
        refresh.setForeground(new java.awt.Color(255, 255, 0));
        refresh.setText("Refresh");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });
        Tic_Tac_Toe_Window.add(refresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 440, -1, -1));

        Tic_Tac_Toe_Window_Quit.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        Tic_Tac_Toe_Window_Quit.setText("QUIT");
        Tic_Tac_Toe_Window_Quit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Tic_Tac_Toe_Window_QuitActionPerformed(evt);
            }
        });
        Tic_Tac_Toe_Window.add(Tic_Tac_Toe_Window_Quit, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 660, 150, 30));

        getContentPane().add(Tic_Tac_Toe_Window, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 450, 0));

        Menu_Window.setBackground(new java.awt.Color(0, 0, 0));
        Menu_Window.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Menu_Back.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        Menu_Back.setText("<- Back");
        Menu_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Menu_BackActionPerformed(evt);
            }
        });
        Menu_Window.add(Menu_Back, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 660, 100, 30));

        Menu_Title.setBackground(new java.awt.Color(0, 75, 255));
        Menu_Title.setFont(new java.awt.Font("Tekton Pro", 1, 24)); // NOI18N
        Menu_Title.setForeground(new java.awt.Color(102, 255, 255));
        Menu_Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Menu_Title.setText("Menu");
        Menu_Title.setOpaque(true);
        Menu_Window.add(Menu_Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 450, 40));

        Menu_Calendar.setBackground(new java.awt.Color(0, 0, 0));
        Menu_Calendar.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        Menu_Calendar.setForeground(new java.awt.Color(0, 204, 255));
        Menu_Calendar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Calendar.png"))); // NOI18N
        Menu_Calendar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Menu_CalendarActionPerformed(evt);
            }
        });
        Menu_Window.add(Menu_Calendar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 100, 100));

        Menu_Settings.setBackground(new java.awt.Color(0, 0, 0));
        Menu_Settings.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        Menu_Settings.setForeground(new java.awt.Color(0, 204, 255));
        Menu_Settings.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Settings.png"))); // NOI18N
        Menu_Settings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Menu_SettingsActionPerformed(evt);
            }
        });
        Menu_Window.add(Menu_Settings, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 120, 100, 100));

        Menu_Games.setBackground(new java.awt.Color(0, 0, 0));
        Menu_Games.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        Menu_Games.setForeground(new java.awt.Color(0, 204, 255));
        Menu_Games.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Games.png"))); // NOI18N
        Menu_Games.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Menu_GamesActionPerformed(evt);
            }
        });
        Menu_Window.add(Menu_Games, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 120, 100, 100));

        Menu_Calculator.setBackground(new java.awt.Color(0, 0, 0));
        Menu_Calculator.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        Menu_Calculator.setForeground(new java.awt.Color(0, 204, 255));
        Menu_Calculator.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Calculator.png"))); // NOI18N
        Menu_Calculator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Menu_CalculatorActionPerformed(evt);
            }
        });
        Menu_Window.add(Menu_Calculator, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 260, 100, 100));

        Menu_Contacts.setBackground(new java.awt.Color(0, 0, 0));
        Menu_Contacts.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        Menu_Contacts.setForeground(new java.awt.Color(0, 204, 255));
        Menu_Contacts.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Contacts.png"))); // NOI18N
        Menu_Contacts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Menu_ContactsActionPerformed(evt);
            }
        });
        Menu_Window.add(Menu_Contacts, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 260, 100, 100));

        Menu_Messages.setBackground(new java.awt.Color(0, 0, 0));
        Menu_Messages.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
        Menu_Messages.setForeground(new java.awt.Color(0, 204, 255));
        Menu_Messages.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Message.png"))); // NOI18N
        Menu_Messages.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Menu_MessagesActionPerformed(evt);
            }
        });
        Menu_Window.add(Menu_Messages, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 100, 100));

        getContentPane().add(Menu_Window, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 450, 0));

        Home_Window.setBackground(new java.awt.Color(255, 255, 255));
        Home_Window.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        Home_Window.setMinimumSize(new java.awt.Dimension(450, 0));
        Home_Window.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Contacts.setBackground(new java.awt.Color(0, 0, 0));
        Contacts.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Contacts.png"))); // NOI18N
        Contacts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ContactsActionPerformed(evt);
            }
        });
        Home_Window.add(Contacts, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 570, 100, 100));

        Menu.setBackground(new java.awt.Color(0, 0, 0));
        Menu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Menu.gif"))); // NOI18N
        Menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MenuMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MenuMousePressed(evt);
            }
        });
        Menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuActionPerformed(evt);
            }
        });
        Home_Window.add(Menu, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 570, 100, 100));

        Messages.setBackground(new java.awt.Color(0, 0, 0));
        Messages.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Message.png"))); // NOI18N
        Messages.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MessagesActionPerformed(evt);
            }
        });
        Home_Window.add(Messages, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 570, 100, 100));

        Wallpaper.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Wallpaper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Blue_6.jpg"))); // NOI18N
        Home_Window.add(Wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 700));

        getContentPane().add(Home_Window, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 450, 0));

        Lock_Phone.setBackground(new java.awt.Color(0, 153, 255));
        Lock_Phone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Lock_Button.png"))); // NOI18N
        Lock_Phone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Lock_PhoneActionPerformed(evt);
            }
        });
        getContentPane().add(Lock_Phone, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 80, 70, 50));

        Send_Message.setBackground(new java.awt.Color(0, 153, 255));
        Send_Message.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Send_Message.png"))); // NOI18N
        Send_Message.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Send_MessageActionPerformed(evt);
            }
        });
        getContentPane().add(Send_Message, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 140, 70, 50));

        Copyrights.setText("©$Dollar Aksahy$");
        getContentPane().add(Copyrights, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 40, 100, -1));

        Call_Button.setBackground(new java.awt.Color(0, 153, 255));
        Call_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Call_Button.png"))); // NOI18N
        Call_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Call_ButtonActionPerformed(evt);
            }
        });
        getContentPane().add(Call_Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 210, 70, 50));

        Make_Call_Button.setBackground(new java.awt.Color(0, 153, 255));
        Make_Call_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Make_Call_Button.png"))); // NOI18N
        Make_Call_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Make_Call_ButtonActionPerformed(evt);
            }
        });
        getContentPane().add(Make_Call_Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 280, 70, 50));

        pack();
    }// </editor-fold>//GEN-END:initComponents
//~~~~~~~~~~~~~~~~~~~~~ Variables ~~~~~~~~~~~~~~~~~~~~~
ArrayList calculations = new ArrayList(); 
Color line = new Color(255,225,0);
Point mp;
int cdx=0;
double check=0;
int no=0,mov=0;
int dot=0;
int months=0,years=0;
Timer t,click,unlock,bar_open,bar_close,test,reset_game;
int call_drag=0;
boolean Airplane_Mode=true;
boolean drag=false,setpattern=false;
boolean wifi=false,sound=false,bluetooth=false,power=true,vibrate=true;
boolean p1=false,p2=false,p3=false,p4=false,p5=false,p6=false,p7=false,p8=false,p9=false;
int xp[]={0,0,0,0,0,
          0,0,0,0,0,0};
int yp[]={0,0,0,0,0,
          0,0,0,0,0,0};
int pattern[]    ={3,2,1,4,5,6,9,8,7};
int testpattern[]={0,0,0,0,0,0,0,0,0};
public EmbeddedMediaPlayerComponent mlc;
int i=0,b1=0,b2=0,b3=0,b4=0,b5=0,b6=0,b7=0,b8=0,b9=0;
boolean player_start=true;
URL ringtone = this.getClass().getClassLoader().getResource("Ring.wav");
AudioInputStream audioIn ;
Clip clip ;

//~~~~~~~~~~~~~~~~~~ End of Variables ~~~~~~~~~~~~~~~~~
//~~~~~~~~~~~~~~~~~~~~~~ Methods ~~~~~~~~~~~~~~~~~~~~~~
     
void tie()
{
if(b1==1&&b2==1&&b3==1&&b4==1&&b5==1&&b6==1&&b7==1&&b8==1&&b9==1)
reset_game.start();
}

void AI()
{
     String c1= box1.getText();String c2= box2.getText();String c3= box3.getText();
     String c4= box4.getText();String c5= box5.getText();String c6= box6.getText();
     String c7= box7.getText();String c8= box8.getText();String c9= box9.getText();
     if((i%2)==1)
     {
     if  ((c1.equals(c2))&&(c2.equals("X"))&&(b3==0)){
        box3.setText("O");
        b3=1;i++;
        }
        else if  ((c3.equals(c2))&&(c2.equals("X"))&&(b1==0)){
        box1.setText("O");
        b1=1;i++;
        }
        else if  ((c1.equals(c3))&&(c1.equals("X"))&&(b2==0)){
        box2.setText("O");
        b2=1;i++;
        }

        else if((c4.equals(c5))&&(c5.equals("X"))&&(b6==0)){
        box6.setText("O");
        b6=1;i++;
        }
        else if((c6.equals(c5))&&(c5.equals("X"))&&(b4==0)){
        box4.setText("O");
        b4=1;i++;
        }
        else if((c4.equals(c6))&&(c4.equals("X"))&&(b5==0)){
        box5.setText("O");
        b5=1;i++;
        }

        else if((c7.equals(c8))&&(c8.equals("X"))&&(b9==0)){
        box9.setText("O");
        b9=1;i++;
        }
        else if((c9.equals(c8))&&(c8.equals("X"))&&(b7==0)){
        box7.setText("O");
        b7=1;i++;
        }
        else if((c7.equals(c9))&&(c7.equals("X"))&&(b8==0)){
        box8.setText("O");
        b8=1;i++;
        }

        else if((c1.equals(c4))&&(c4.equals("X"))&&(b7==0)){
        box7.setText("O");
        b7=1;i++;
        }
        else if((c7.equals(c4))&&(c4.equals("X"))&&(b1==0)){
        box1.setText("O");
        b1=1;i++;
        }
        else if((c1.equals(c7))&&(c1.equals("X"))&&(b4==0)){
        box4.setText("O");
        b4=1;i++;
        }

        else if((c2.equals(c5))&&(c5.equals("X"))&&(b8==0)){
        box8.setText("O");
        b8=1;i++;
        }
        else if((c8.equals(c5))&&(c5.equals("X"))&&(b2==0)){
        box2.setText("O");
        b2=1;i++;
        }
        else if((c2.equals(c8))&&(c2.equals("X"))&&(b5==0)){
        box5.setText("O");
        b5=1;i++;
        }


        else if((c3.equals(c6))&&(c6.equals("X"))&&(b9==0)){
        box9.setText("O");
        b9=1;i++;
        }
        else if((c9.equals(c6))&&(c6.equals("X"))&&(b3==0)){
        box3.setText("O");
        b3=1;i++;
        }
        else if((c3.equals(c9))&&(c3.equals("X"))&&(b6==0)){
        box6.setText("O");
        b6=1;i++;
        }

        else if((c1.equals(c5))&&(c5.equals("X"))&&(b9==0)){
        box9.setText("O");
        b9=1;i++;
        }
        else if((c9.equals(c5))&&(c5.equals("X"))&&(b1==0)){
        box1.setText("O");
        b1=1;i++;
        }
        else if((c1.equals(c9))&&(c1.equals("X"))&&(b5==0)){
        box5.setText("O");
        b5=1;i++;
        }

        else if((c3.equals(c5))&&(c5.equals("X"))&&(b7==0)){
        box7.setText("O");
        b7=1;i++;
        }
        else if((c7.equals(c5))&&(c5.equals("X"))&&(b3==0)){
        box3.setText("O");
        b3=1;i++;
        }
        else if((c3.equals(c7))&&(c3.equals("X"))&&(b5==0)){
        box5.setText("O");
        b5=1;i++;
        }
        else
        {
         if(i==1)
         {
             if(b5==0)
             {             
             box5.setText("O");
             b5=1;
             i++;
             }
             else{
         Random a1 = new Random();
         int first = a1.nextInt((4));
         first++;
         if((first==1)&&(b1==0))
         {
             box1.setText("O");
             b1=1;
             i++;
         }
         else if((first==2)&&(b3==0))
         {
             box3.setText("O");
             b3=1;
             i++;
         }
         else if((first==3)&&(b7==0))
         {
             box7.setText("O");
             b7=1;
             i++;
         }
         else if((first==4)&&(b9==0))
         {
             box9.setText("O");
             b9=1;
             i++;
         }
             }
         }
         else if((  (c1.equals(c9))&&(c9.equals("X")  ))   ||   
                 (  (c3.equals(c7))&&(c7.equals("X")  ))   &&
                 (i==3))
         {
         box6.setText("O");
         b6=1;
         i++;
         }
         else if(i>1)
         {
         
         boolean done = false;
         if(((i!=9)&&(player_start==true))||((i!=11)&&(player_start==false)))
         while(done==false){
         Random a2 = new Random();
         int scnd = a2.nextInt((9));
         scnd++;
         
         if((scnd==1)&&(b1==0))
         {
         box1.setText("O");
         b1=1;
         i++;done=true;
         }
         else if((scnd==2)&&(b2==0)&&(b1==1)&&(b3==1)&&(b7==1)&&(b9==1))
         {
         box2.setText("O");
         b2=1;
         i++;done=true;
         }
         else if((scnd==3)&&(b3==0))
         {
         box3.setText("O");
         b3=1;
         i++;done=true;
         }
         else if((scnd==4)&&(b4==0)&&(b1==1)&&(b3==1)&&(b7==1)&&(b9==1))
         {
         box4.setText("O");
         b4=1;
         i++;done=true;
         }
         else if((scnd==5)&&(b3==0))
         {
         box3.setText("O");
         b3=1;
         i++;done=true;
         }
         else if((scnd==6)&&(b6==0)&&(b1==1)&&(b3==1)&&(b7==1)&&(b9==1))
         {
         box6.setText("O");
         b6=1;
         i++;done=true;
         }
         else if((scnd==7)&&(b7==0))
         {
         box7.setText("O");
         b7=1;
         i++;done=true;
         }
         else if((scnd==8)&&(b8==0)&&(b1==1)&&(b3==1)&&(b7==1)&&(b9==1))
         {
         box8.setText("O");
         b8=1;
         i++;done=true;
         }
         else if((scnd==9)&&(b9==0))
         {
         box9.setText("O");
         b9=1;
         i++;done=true;
         }
         }
         }
        }   
     }
 }

void AI_attack()
{
     boolean AI_win=false;
     String c1= box1.getText();String c2= box2.getText();String c3= box3.getText();
     String c4= box4.getText();String c5= box5.getText();String c6= box6.getText();
     String c7= box7.getText();String c8= box8.getText();String c9= box9.getText();
        if((i%2)==1)
        {
     if  ((c1.equals(c2))&&(c2.equals("O"))&&(b3==0)){
        box3.setText("O");
        b3=1;i++;AI_win=true;AI_win=true;
        }
        else if  ((c3.equals(c2))&&(c2.equals("O"))&&(b1==0)){
        box1.setText("O");
        b1=1;i++;AI_win=true;
        }
        else if  ((c1.equals(c3))&&(c1.equals("O"))&&(b2==0)){
        box2.setText("O");
        b2=1;i++;AI_win=true;
        }

        else if((c4.equals(c5))&&(c5.equals("O"))&&(b6==0)){
        box6.setText("O");
        b6=1;i++;AI_win=true;
        }
        else if((c6.equals(c5))&&(c5.equals("O"))&&(b4==0)){
        box4.setText("O");
        b4=1;i++;AI_win=true;
        }
        else if((c4.equals(c6))&&(c4.equals("O"))&&(b5==0)){
        box5.setText("O");
        b5=1;i++;AI_win=true;
        }

        else if((c7.equals(c8))&&(c8.equals("O"))&&(b9==0)){
        box9.setText("O");
        b9=1;i++;AI_win=true;
        }
        else if((c9.equals(c8))&&(c8.equals("O"))&&(b7==0)){
        box7.setText("O");
        b7=1;i++;AI_win=true;
        }
        else if((c7.equals(c9))&&(c7.equals("O"))&&(b8==0)){
        box8.setText("O");
        b8=1;i++;AI_win=true;
        }

        else if((c1.equals(c4))&&(c4.equals("O"))&&(b7==0)){
        box7.setText("O");
        b7=1;i++;AI_win=true;
        }
        else if((c7.equals(c4))&&(c4.equals("O"))&&(b1==0)){
        box1.setText("O");
        b1=1;i++;AI_win=true;
        }
        else if((c1.equals(c7))&&(c1.equals("O"))&&(b4==0)){
        box4.setText("O");
        b4=1;i++;AI_win=true;
        }

        else if((c2.equals(c5))&&(c5.equals("O"))&&(b8==0)){
        box8.setText("O");
        b8=1;i++;AI_win=true;
        }
        else if((c8.equals(c5))&&(c5.equals("O"))&&(b2==0)){
        box2.setText("O");
        b2=1;i++;AI_win=true;
        }
        else if((c2.equals(c8))&&(c2.equals("O"))&&(b5==0)){
        box5.setText("O");
        b5=1;i++;AI_win=true;
        }


        else if((c3.equals(c6))&&(c6.equals("O"))&&(b9==0)){
        box9.setText("O");
        b9=1;i++;AI_win=true;
        }
        else if((c9.equals(c6))&&(c6.equals("O"))&&(b3==0)){
        box3.setText("O");
        b3=1;i++;AI_win=true;
        }
        else if((c3.equals(c9))&&(c3.equals("O"))&&(b6==0)){
        box6.setText("O");
        b6=1;i++;AI_win=true;
        }

        else if((c1.equals(c5))&&(c5.equals("O"))&&(b9==0)){
        box9.setText("O");
        b9=1;i++;AI_win=true;
        }
        else if((c9.equals(c5))&&(c5.equals("O"))&&(b1==0)){
        box1.setText("O");
        b1=1;i++;AI_win=true;
        }
        else if((c1.equals(c9))&&(c1.equals("O"))&&(b5==0)){
        box5.setText("O");
        b5=1;i++;AI_win=true;
        }

        else if((c3.equals(c5))&&(c5.equals("O"))&&(b7==0)){
        box7.setText("O");
        b7=1;i++;AI_win=true;
        }
        else if((c7.equals(c5))&&(c5.equals("O"))&&(b3==0)){
        box3.setText("O");
        b3=1;i++;AI_win=true;
        }
        else if((c3.equals(c7))&&(c3.equals("O"))&&(b5==0)){
        box5.setText("O");
        b5=1;i++;AI_win=true;
        }

        }
        if(AI_win==true)
        {
        JOptionPane.showMessageDialog(null,"Computer Wins");
        refresh.doClick(1000);
        }
 }
    
void winx()
{
     String c1= box1.getText();String c2= box2.getText();String c3= box3.getText();
     String c4= box4.getText();String c5= box5.getText();String c6= box6.getText();
     String c7= box7.getText();String c8= box8.getText();String c9= box9.getText();
     if(((c1.equals(c2))&&(c2.equals(c3))&&(c1.equals("X")) )  ||
        ((c4.equals(c5))&&(c5.equals(c6))&&(c4.equals("X")) )  ||
        ((c7.equals(c8))&&(c8.equals(c9))&&(c7.equals("X")) )  ||/*Horizontal Complete*/
        ((c1.equals(c4))&&(c4.equals(c7))&&(c1.equals("X")) )  ||
        ((c2.equals(c5))&&(c5.equals(c8))&&(c2.equals("X")) )  ||
        ((c3.equals(c6))&&(c6.equals(c9))&&(c3.equals("X")) )  ||/*Vertical Complete*/
        ((c1.equals(c5))&&(c5.equals(c9))&&(c1.equals("X")) )  ||
        ((c3.equals(c5))&&(c5.equals(c7))&&(c3.equals("X")) ))   /*Doagonal Complete*/
     {
        JOptionPane.showMessageDialog(null,"X WINS!!");
        refresh.doClick(1000);
     }
}

void special_case()
{
 if(i==3){
     String c1= box1.getText();String c2= box2.getText();String c3= box3.getText();
     String c4= box4.getText();String c5= box5.getText();String c6= box6.getText();
     String c7= box7.getText();String c8= box8.getText();String c9= box9.getText();
     if( ( (c7.equals("X"))||(c9.equals("X"))||(c4.equals("X"))||(c6.equals("X")) )
         &&(c2.equals("X"))&&(c5.equals("O")))
     {
     Random choice = new Random();
     boolean done=false;
     while(done==false){
     int box = choice.nextInt((3))+1;
     if((b1==0)&&(box==1))
     {
     box1.setText("O");
     b1=1;i++;done=true;
     }
     else if(b3==0)
     {
     box3.setText("O");
     b3=1;i++;done=true;
     }
     }
     }

     else if(((c1.equals("X"))||(c7.equals("X"))||(c2.equals("X"))||(c8.equals("X")))
             &&(c6.equals("X"))&&(c5.equals("O")))
     {
     Random choice = new Random();
     boolean done=false;
     while(done==false){
     int box = choice.nextInt((3))+1;
     if((b3==0)&&(box==1))
     {
     box3.setText("O");
     b3=1;i++;done=true;
     }
     else if(b9==0) 
     {
     box9.setText("O");
     b9=1;i++;done=true;
     }
     }
     }

     else if(((c3.equals("X"))||(c1.equals("X"))||(c4.equals("X"))||(c6.equals("X")))
             &&(c8.equals("X"))&&(c5.equals("O")))
     {
     Random choice = new Random();
     boolean done=false;
     while(done==false){ 
     int box = choice.nextInt((3))+1;
     if((b7==0)&&(box==1))
     {
     box7.setText("O");
     b7=1;i++;done=true;
     }
     else if(b9==0)
     {
     box9.setText("O");
     b9=1;i++;done=true;
     }
     }
     }

     else if((c9.equals("X")||(c3.equals("X"))||(c2.equals("X"))||(c8.equals("X")) )
             &&(c4.equals("X"))&&(c5.equals("O")))
     {
     Random choice = new Random();
     boolean done=false;
     while(done==false){    
     int box = choice.nextInt((3))+1;
     if((b7==0)&&(box==1))
     {
     box7.setText("O");
     b7=1;i++;done=true;
     }
     else if(b1==0)
     {
     box1.setText("O");
     b1=1;i++;done=true;
     }
     }
     }
  }
}

void arrangeCalendar(int col,int maxdays)
{
int i=col,j=0,day=1;
DefaultTableModel dtm = (DefaultTableModel) Calendar.getModel();
dtm.setRowCount(0);
for(j=0;j<=5;j++)
{
dtm.setRowCount(j+1);
for(i=0;i<=6;i++)
{
if((j==0)&&(i==0))
 i=col;
if(day<=maxdays)
Calendar.setValueAt(day++,j,i);
}
}
Calendar.setRowHeight(25);
}

void editClicked(java.awt.event.ActionEvent evt)
{
try {
JButton edit = (JButton) evt.getSource();
ResultSet info = executeQuerry("Select * from Contacts where name=\'"+edit.getName()+"\';","Blue_Diamond");
info.next();
Edit_Sl_No.setText(info.getInt(7)+"");
Edit_Name.setText(info.getString(1));
Edit_Number1.setText(info.getString(2));
Edit_Number2.setText(info.getString(3));
Edit_Number3.setText(info.getString(4));
Edit_Email.setText(info.getString(5));
if(info.getDate(6)!=null){
if(info.getDate(6).getDate()<10)
Edit_Day.setSelectedItem("0"+info.getDate(6).getDate());
else
Edit_Day.setSelectedItem(""+info.getDate(6).getDate()); 
if(info.getDate(6).getMonth()+1<10)
Edit_Month.setSelectedItem("0"+(info.getDate(6).getMonth()+1));
else
Edit_Month.setSelectedItem(""+(info.getDate(6).getMonth()+1)); 
Edit_Year.setSelectedItem(""+(info.getDate(6).getYear()+1900)); 
}
else{
Create_Day.setSelectedIndex(-1);
Create_Month.setSelectedIndex(-1);
Create_Year.setSelectedIndex(-1);
}
Contact_Scroll.setSize(450,0);
Contact_Info.setSize(450,0);
Edit_Contact.setSize(450,600);
} 
catch(Exception e)
{
JOptionPane.showMessageDialog(null, e.getMessage()+e.toString());
}
}

void displayContact(String no)
{
int posy=10;
try {
Contact_Info.removeAll();
Edit_Contact.setSize(450,0);
Contact_Scroll.setSize(450,0);
Contact_Info.setSize(450,600);
JButton edit = new JButton("Edit Contact");
edit.setBackground(new java.awt.Color(0, 0, 0));
edit.setFont(new java.awt.Font("Tekton Pro", 0, 18)); // NOI18N
edit.setForeground(new java.awt.Color(0, 204, 255));
edit.addActionListener(new java.awt.event.ActionListener() 
{ 
public void actionPerformed(java.awt.event.ActionEvent evt) {
editClicked(evt);
 }});
ResultSet cont = executeQuerry("Select * from Contacts "
+ "where Sl_No=\'"+no+"\';","Blue_Diamond");
cont.next();
edit.setName(cont.getString(1));
Contact_Info.add(edit).setBounds(10,550,430,40);  
JTextField info = new JTextField("  "+cont.getString(1));
info.setBackground(new Color(25,25,25));
info.setBorder(null);
info.setEditable(false);
info.setFont(new Font("Tekton Pro", 0,24));
info.setForeground(new Color(0, 180, 255));
info.setOpaque(true);
Contact_Info.add(info).setBounds(10,posy,430,40);

if(cont.getLong(2)!=0)
{
if(posy==10)
posy+=41;
else
posy+=31;
JTextField info2 = new JTextField("   "+cont.getLong(2)+"");
info2.setBackground(new Color(25,25,25));
info2.setBorder(null);
info2.setEditable(false);
info2.setFont(new Font("Tekton Pro", 0, 18));
info2.setForeground(new Color(0, 180, 255));
info2.setOpaque(true);
Contact_Info.add(info2).setBounds(10,posy,430,30);
}
if(cont.getLong(3)!=0)
{
if(posy==10)
posy+=41;
else
posy+=31;
JTextField info3 = new JTextField("   "+cont.getLong(3));
info3.setBackground(new Color(25,25,25));
info3.setBorder(null);
info3.setEditable(false);
info3.setFont(new Font("Tekton Pro", 0, 18));
info3.setForeground(new Color(0, 180, 255));
info3.setOpaque(true);
Contact_Info.add(info3).setBounds(10,posy,430,30);
}
if(cont.getLong(4)!=0)
{
if(posy==10)
posy+=41;
else
posy+=31;
JTextField info4 = new JTextField("   "+cont.getLong(4)+"");
info4.setBackground(new Color(25,25,25));
info4.setBorder(null);
info4.setEditable(false);
info4.setFont(new Font("Tekton Pro", 0, 18));
info4.setForeground(new Color(0, 180, 255));
info4.setOpaque(true);
Contact_Info.add(info4).setBounds(10,posy,430,30);
}
if(!(cont.getString(5).equals("")))
{
if(posy==10)
posy+=41;
else
posy+=31;
JTextField info5 = new JTextField(" "+cont.getString(5)+"");
info5.setBackground(new Color(25,25,25));
info5.setBorder(null);
info5.setEditable(false);
info5.setFont(new Font("Monospaced",1, 16));
info5.setForeground(new Color(0, 180, 255));
info5.setOpaque(true);
Contact_Info.add(info5).setBounds(10,posy,430,30);
}
if(cont.getString(6)!=null)
{
if(posy==10)
posy+=41;
else
posy+=31;
JTextField info6 = new JTextField("  "+cont.getDate(6).getDate()+" "
+getMonth(cont.getDate(6).getMonth()+1)+" "+(cont.getDate(6).getYear()+1900));
info6.setBackground(new Color(25,25,25));
info6.setBorder(null);
info6.setEditable(false);
info6.setFont(new Font("Tekton Pro",0, 18));
info6.setForeground(new Color(0, 180, 255));
info6.setOpaque(true);
Contact_Info.add(info6).setBounds(10,posy,430,30);
}
} 
catch(Exception e)
{
JOptionPane.showMessageDialog(null, e.getMessage()+e.toString());
}
}

void contactClicked(java.awt.event.MouseEvent evt)
{
displayContact(evt.getComponent().getName().trim());
}

private void messageClicked(java.awt.event.MouseEvent evt)
{
if(Message_Delete.getName().equals("Manage")){
Message_Convo.removeAll();


int dy=0,sh=0;
String time;
String number = evt.getComponent().getName();
try{
ResultSet search = executeQuerry("Select * from Contacts "
+"where home_number="+number+" OR mobile_number="+number+" OR work_number="+number+";",
"Blue_Diamond");
if(search.next()==true){
JLabel person = new JLabel(search.getString("Name"));
person.setFont(new java.awt.Font("Tekton Pro",0,24)); // NOI18N
person.setForeground(new java.awt.Color(50,50,255));
person.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
Message_Convo.add(person).setBounds(0,10,450,40);
}
else{
JLabel person = new JLabel(number);
person.setFont(new java.awt.Font("Tekton Pro",0,24)); // NOI18N
person.setForeground(new java.awt.Color(50,50,255));
person.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
Message_Convo.add(person).setBounds(0,10,450,40);
}
String qry = "SELECT * FROM messages where Number = "+number+" order by Time;";
ResultSet conv = executeQuerry(qry,"Blue_Diamond");

while(conv.next())
{
dy+=50+sh;
JTextArea txt = new JTextArea(conv.getString(3));

txt.setLineWrap(true);
txt.setWrapStyleWord(false);
txt.setEditable(false);
txt.setFont(new java.awt.Font("Monospaced",0,12));
if((conv.getTime(4).getHours()>=12)&&(conv.getTime(4).getMinutes()<10))
time = (conv.getTime(4).getHours()-12)+":0"+conv.getTime(4).getMinutes()+" PM";
else if((conv.getTime(4).getHours()>=12)&&(conv.getTime(4).getMinutes()>=10))
time = (conv.getTime(4).getHours()-12)+":"+conv.getTime(4).getMinutes()+" PM";
else if((conv.getTime(4).getHours()<12)&&(conv.getTime(4).getMinutes()<10))
time = conv.getTime(4).getHours()+":0"+conv.getTime(4).getMinutes()+" AM";
else
time = conv.getTime(4).getHours()+":"+conv.getTime(4).getMinutes()+" AM";
txt.setToolTipText(time);
JScrollPane scroll = new JScrollPane(txt);
scroll.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
sh = (((txt.getText().length()/33)+1)*18)+16;
sh=sh +(txt.getLineCount()-1)*5;
if(conv.getInt(2)==0){
txt.setBackground(new java.awt.Color(0, 200, 255));
scroll.setBounds(180,30+dy,250,sh);
scroll.setBorder(new javax.swing.border.LineBorder
(new java.awt.Color(0, 200, 255),1,false));
Message_Convo.add(new JLabel(new ImageIcon(getClass().getResource
("/Mobile_Operating_System/Message_Top.png"))),0).setBounds(180,30+dy-20,250,20);
Message_Convo.add(scroll,1);
Message_Convo.add(new JLabel(new ImageIcon(getClass().getResource
("/Mobile_Operating_System/Message_Bottom.png"))),2).setBounds(180,30+dy+sh,250,20);
}
else{
txt.setBackground(new java.awt.Color(255,255,255));
scroll.setBounds(5,30+dy,250,sh);
scroll.setBorder(new javax.swing.border.LineBorder
(new java.awt.Color(255,255,255),1,false));
Message_Convo.add(new JLabel(new ImageIcon(getClass().getResource
("/Mobile_Operating_System/Reply_Top.png"))),0).setBounds(5,30+dy-20,250,20);
Message_Convo.add(scroll,1);
Message_Convo.add(new JLabel(new ImageIcon(getClass().getResource
("/Mobile_Operating_System/Reply_Bottom.png"))),2).setBounds(5,30+dy+sh,250,20);
}
}
int times=0;
while(times*600<dy+sh+25)
{
Message_Convo.add(new JLabel(new ImageIcon(getClass().getResource
("/Mobile_Operating_System/Convo_Background.png")))).setBounds(0,0+600*(times),450,600);
times++;
}
}
catch(Exception e)
{
JOptionPane.showMessageDialog(null, e.getMessage()+","+e.toString());
}

Message_Convo_Scroll.setSize(450,600);
Message_Convo_Scroll.revalidate();
if(dy+sh+25>600)
Message_Convo.setPreferredSize(new Dimension(450,dy+sh+25));
else
Message_Convo.setPreferredSize(new Dimension(450,594));  
Message_Scroll.setSize(450,0);
}}

void displaySMS(String name,String no,String sms,String t,int y)
{

JCheckBox del = new JCheckBox();
del.setName(no);
del.setBounds(380,y+35,20,20);
del.setVisible(false);
Message_List.add(del);
JLabel main = new javax.swing.JLabel();
main.setName(""+no);
main.addMouseListener(new java.awt.event.MouseAdapter() {
public void mouseClicked(java.awt.event.MouseEvent evt) {
messageClicked(evt);
}});
main.setBorder(new LineBorder(Color.black,1));
Message_List.add(main).setBounds(0, y, 450, 60);    
Message_List.add(new JLabel(new ImageIcon(getClass().getResource
("/Mobile_Operating_System/Empty_contact.png")))).setBounds(20, y+5,50,50);
JLabel Ph_no = new javax.swing.JLabel();
Ph_no.setFont(new java.awt.Font("Tahoma", 0, 14));
Ph_no.setText(""+name);
Ph_no.setBounds(80,y,300,30);
Message_List.add(Ph_no);
JLabel text = new javax.swing.JLabel();
text.setFont(new java.awt.Font("Tahoma", 0, 11));
text.setText(""+sms);
text.setBounds(80,y+30,300,30);
Message_List.add(text);
JLabel time = new javax.swing.JLabel();
time.setFont(new java.awt.Font("Tahoma", 0, 11));
time.setHorizontalAlignment(2);
time.setText(""+t);
time.setBounds(380,y,60,30);
Message_List.add(time);
}

void executeUpdate(String query,String database,String succ)
{
try{
Class.forName("java.sql.DriverManager");
Connection con =
DriverManager.getConnection("jdbc:mysql://localhost:3306/"+database,"root", "student");
Statement stmt = (Statement) con.createStatement();
stmt.executeUpdate(query);
}
catch(Exception e)
{
JOptionPane.showMessageDialog(null, e.getMessage());
}
finally
{
if(!(succ.equals("")))
JOptionPane.showMessageDialog(null,succ);
}
}

ResultSet executeQuerry(String query,String database)
{ 
ResultSet rs = null;
try{
Class.forName("java.sql.DriverManager");
Connection con = 
DriverManager.getConnection("jdbc:mysql://localhost:3306/"+database,"root", "student");
Statement stmt = (Statement) con.createStatement();
rs = stmt.executeQuery(query);
}
catch(Exception e)
{
JOptionPane.showMessageDialog (null, e.getMessage());
}

return rs;
}

boolean checkPattern()
{
boolean result = false;
for(int i=0;i<dot;i++)
{
int mx=xp[i]-25;
int my=yp[i]-25;
if((mx==50)&&(my==50))
testpattern[i] =1;
else if((mx==150)&&(my==50))
testpattern[i] =2;
else if((mx==250)&&(my==50))
testpattern[i] =3;
else if((mx==50)&&(my==150))
testpattern[i] =4;
else if((mx==150)&&(my==150))
testpattern[i] =5;
else if((mx==250)&&(my==150))
testpattern[i] =6;
else if((mx==50)&&(my==250))
testpattern[i] =7;
else if((mx==150)&&(my==250))
testpattern[i] =8;
else if((mx==250)&&(my==250))
testpattern[i] =9;
}
//End of For Loop
for(int i=0;i<9;i++)
{
if(testpattern[i]==pattern[i])
result = true;
else
{
result = false;
break;
}
}
return result;
}

void setPattern()
{
for(int i=0;i<dot;i++)
{
int mx=xp[i]-25;
int my=yp[i]-25;
if((mx==50)&&(my==50))
pattern[i] =1;
else if((mx==150)&&(my==50))
pattern[i] =2;
else if((mx==250)&&(my==50))
pattern[i] =3;
else if((mx==50)&&(my==150))
pattern[i] =4;
else if((mx==150)&&(my==150))
pattern[i] =5;
else if((mx==250)&&(my==150))
pattern[i] =6;
else if((mx==50)&&(my==250))
pattern[i] =7;
else if((mx==150)&&(my==250))
pattern[i] =8;
else if((mx==250)&&(my==250))
pattern[i] =9;
}
for(int i=dot;i<9;i++)
{
pattern[i] =0;
}
line=new Color(0,160,255);
xp[dot+1]=xp[dot-1];
yp[dot+1]=yp[dot-1];
repaint();
t.start();
}

void setPoint(Component c)
{
xp[dot]=c.getX()+25;
yp[dot]=c.getY()+25;
dot++;
xp[dot]=c.getX()+25;
yp[dot]=c.getY()+25;
if(dot==9){
if((drag==true)&&(setpattern==false))
setLineColor();
else if((drag==true)&&(setpattern==true)&&(t.isRunning()==false))
setPattern();
xp[dot+1]=c.getX()+25;
yp[dot+1]=c.getY()+25;
}
}

int getMouseComponentNo()
{
int mx = Lock_Screen.getMousePosition().x; 
int my = Lock_Screen.getMousePosition().y;
mx=mx-(mx%50);
my=my-(my%50);
if((mx==50)&&(my==50))
return 1;
else if((mx==150)&&(my==50))
return 2;
else if((mx==250)&&(my==50))
return 3;
else if((mx==50)&&(my==150))
return 4;
else if((mx==150)&&(my==150))
return 5;
else if((mx==250)&&(my==150))
return 6;
else if((mx==50)&&(my==250))
return 7;
else if((mx==150)&&(my==250))
return 8;
else if((mx==250)&&(my==250))
return 9;
else
return 0;
}

void setLineColor()
{
if(checkPattern()==true)
{
line = new Color(0,225,0);
unlock.start();
}
else 
{
line = new Color(255,25,25);
}
xp[dot+1]=xp[dot-1];
yp[dot+1]=yp[dot-1];
repaint();
t.start();
}

String getMonth(int m)
{
if(m==1)
return "January";
else if(m==2)
return "February";
else if(m==3)
return "March";
else if(m==4)
return "April";
else if(m==5)
return "May";
else if(m==6)
return "June";
else if(m==7)
return "July";
else if(m==8)
return "August";
else if(m==9)
return "September";
else if(m==10)
return "October";
else if(m==11)
return "November";
else if(m==12)
return "December";
else
return null;
}

int countDays(int month,int year)
{
if(month==1)
return 31;
else if((month==2)&&((year%4)==0))
return 29;
else if((month==2)&&((year%4)!=0) )
return 28;
else if(month==3)
return 31;
else if(month==4)
return 30;
else if(month==5)
return 31;
else if(month==6)
return 30;
else if(month==7)
return 31;
else if(month==8)
return 31;
else if(month==9)
return 30;
else if(month==10)
return 31;
else if(month==11)
return 30;
else if(month==12)
return 31;
else
return 31;
}

void cancelDelete()
{
Message_Delete.setName("Manage");
Message_Select_All.setSize(20,0);
for(int i=0;i<Message_List.getComponentCount();i++){
Component c = Message_List.getComponent(i);
if(c.getClass().getSimpleName().equals("JCheckBox")){
c.setVisible(false);
}
}    
}

//~~~~~~~~~~~~~~~~~~ End of Methods ~~~~~~~~~~~~~~~~~


    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
try{
ResultSet time = executeQuerry("Select now();","Blue_Diamond");
time.next();
int hour = time.getTime(1).getHours();
int min = time.getTime(1).getMinutes();
String ap;
if(hour>12){
hour-=12;ap="PM";
}
else{
ap="AM";
}

if((hour<10)&&(min<10))
Notification_Time.setText("0"+hour+":0"+min+" "+ap);
else if((hour<10)&&(min>=10))
Notification_Time.setText("0"+hour+":"+min+" "+ap);
else if((hour>=10)&&(min<10))
Notification_Time.setText(""+hour+":0"+min+" "+ap);
else if((hour>=10)&&(min>=10))
Notification_Time.setText(""+hour+":"+min+" "+ap);
}
catch(Exception e)
{
JOptionPane.showMessageDialog (null, e.getMessage());
}
        
        try {
// Open an audio input stream.
         audioIn = AudioSystem.getAudioInputStream(ringtone);
         // Get a sound clip resource.
         clip = AudioSystem.getClip();
         // Open audio clip and load samples from the audio input stream.
         clip.open(audioIn);
         clip.loop(Clip.LOOP_CONTINUOUSLY);
       } catch (UnsupportedAudioFileException e) {
         e.printStackTrace();
      } catch (IOException e) {
         e.printStackTrace();
      } catch (LineUnavailableException e) {
         e.printStackTrace();
      }
clip.stop();
Call_End.doClick();
    }//GEN-LAST:event_formWindowOpened

    private void MenuMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuMousePressed
Menu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Menu.png")));
    }//GEN-LAST:event_MenuMousePressed

    private void MenuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuMouseExited
Menu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Menu.gif")));
// TODO add your handling code here:
    }//GEN-LAST:event_MenuMouseExited

    private void Lock_PhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Lock_PhoneActionPerformed
if(Call_Window.getHeight()==0){
Parent_Lock.setSize(450,700);
mlc.getMediaPlayer().start();
mlc.setSize(450,680);
}
// TODO add your handling code here:
    }//GEN-LAST:event_Lock_PhoneActionPerformed

    private void MessagesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MessagesActionPerformed
Message_List.removeAll();
try{
String qry = "SELECT * FROM (select m.number,c.name,m.sms,m.time from messages m left join contacts c "
        + "on c.home_number=m.number OR c.mobile_number=m.number OR c.work_number=m.number "
        + "Order by Time desc ) as Message_List group by number order by Time desc;";
ResultSet msg = executeQuerry(qry,"Blue_Diamond");
int my=0;
while(msg.next()){
if(msg.getString(2)==null){
if((msg.getTime(4).getHours()>=12)&&(msg.getTime(4).getMinutes()<10))
displaySMS(msg.getString(1),msg.getString(1),msg.getString(3),(msg.getTime(4).getHours()-12)+
           ":0"+msg.getTime(4).getMinutes()+" PM",my);
else if((msg.getTime(4).getHours()>=12)&&(msg.getTime(4).getMinutes()>=10))
displaySMS(msg.getString(1),msg.getString(1),msg.getString(3),(msg.getTime(4).getHours()-12)+
           ":"+msg.getTime(4).getMinutes()+" PM",my);
else if((msg.getTime(4).getHours()<12)&&(msg.getTime(4).getMinutes()<10))
displaySMS(msg.getString(1),msg.getString(1),msg.getString(3),msg.getTime(4).getHours()+
           ":0"+msg.getTime(4).getMinutes()+" AM",my);
else
displaySMS(msg.getString(1),msg.getString(1),msg.getString(3),msg.getTime(4).getHours()+
           ":"+msg.getTime(4).getMinutes()+" AM",my);   
my+=60;
}
else {
if((msg.getTime(4).getHours()>=12)&&(msg.getTime(4).getMinutes()<10))
displaySMS(msg.getString(2),msg.getString(1),msg.getString(3),(msg.getTime(4).getHours()-12)+
           ":0"+msg.getTime(4).getMinutes()+" PM",my);
else if((msg.getTime(4).getHours()>=12)&&(msg.getTime(4).getMinutes()>=10))
displaySMS(msg.getString(2),msg.getString(1),msg.getString(3),(msg.getTime(4).getHours()-12)+
           ":"+msg.getTime(4).getMinutes()+" PM",my);
else if((msg.getTime(4).getHours()<12)&&(msg.getTime(4).getMinutes()<10))
displaySMS(msg.getString(2),msg.getString(1),msg.getString(3),msg.getTime(4).getHours()+
           ":0"+msg.getTime(4).getMinutes()+" AM",my);
else
displaySMS(msg.getString(2),msg.getString(1),msg.getString(3),msg.getTime(4).getHours()+
           ":"+msg.getTime(4).getMinutes()+" AM",my);   
my+=60;
}
}
if(my>600)
Message_List.setPreferredSize(new Dimension(450,my));
}
catch(Exception e)
{
JOptionPane.showMessageDialog(null,e.getMessage());    
}
Home_Window.setSize(450,0);
Menu_Window.setSize(450,0);
Message_Window.setSize(450,700);
Notification_Bar.setSize(450,21);
Notification_Bar.setSize(450,20);
    }//GEN-LAST:event_MessagesActionPerformed

    private void set_patternActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_set_patternActionPerformed
if(set_pattern.isSelected())
{
setpattern=true;
set_pattern.setBackground(new Color(10,230,10));
}
else
{
setpattern=false;
set_pattern.setBackground(new Color(0,153,255));
}
    }//GEN-LAST:event_set_patternActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
p1=false;p2=false;p3=false;
p4=false;p5=false;p6=false;
p7=false;p8=false;p9=false;
dot=0;
line = new Color(255,225,0);
for(int i=0;i<=10;i++)
{
xp[i]=0;
yp[i]=0;
if(i<9)
testpattern[i]=0;
}
drag=false;
if(setpattern==true){
set_pattern.doClick();
}
repaint();
    }//GEN-LAST:event_resetActionPerformed

    private void DotsMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DotsMouseDragged
if(t.isRunning()==false){
int comp = getMouseComponentNo();
if((drag==true)&&(comp==1)&&(p1==false))
{p1=true;setPoint(dot1);}
else if((drag==true)&&(comp==2)&&(p2==false))
{p2=true;setPoint(dot2);}
else if((drag==true)&&(comp==3)&&(p3==false))
{p3=true;setPoint(dot3);}
else if((drag==true)&&(comp==4)&&(p4==false))
{p4=true;setPoint(dot4);}
else if((drag==true)&&(comp==5)&&(p5==false))
{p5=true;setPoint(dot5);}
else if((drag==true)&&(comp==6)&&(p6==false))
{p6=true;setPoint(dot6);}
else if((drag==true)&&(comp==7)&&(p7==false))
{p7=true;setPoint(dot7);}
else if((drag==true)&&(comp==8)&&(p8==false))
{p8=true;setPoint(dot8);}
else if((drag==true)&&(comp==9)&&(p9==false))
{p9=true;setPoint(dot9);}

if((dot<9)&&(drag==true))
{
mp = Lock_Screen.getMousePosition();
xp[dot+1]=mp.x;
yp[dot+1]=mp.y;
}
}
repaint();        // TODO add your handling code here:
    }//GEN-LAST:event_DotsMouseDragged

    private void DotsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DotsMousePressed
drag=true;        // TODO add your handling code here:
    }//GEN-LAST:event_DotsMousePressed

    private void DotsMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DotsMouseMoved
if((drag==true)&&(setpattern==false)){
setLineColor();
}
else if((drag==true)&&(setpattern==true)&&(t.isRunning()==false))
{
setPattern();
}

if((drag==true)&&(t.isRunning()==false))
{
reset.doClick(500);
drag=false;
}
// TODO add your handling code here:
    }//GEN-LAST:event_DotsMouseMoved

    private void Send_MessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Send_MessageActionPerformed
Message_Dialog.setBounds(600, 0, 400, 400);
Message_Dialog.setVisible(true);
    }//GEN-LAST:event_Send_MessageActionPerformed

    private void Send_SMSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Send_SMSActionPerformed
long no = Long.parseLong(From_Number.getText());
executeUpdate("Insert INTO Messages VALUES"+"("+no+",false,'"+Sender_SMS.getText()+"',now());",
"Blue_Diamond","Message Sent Successfully");
    }//GEN-LAST:event_Send_SMSActionPerformed

    private void Message_ListMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Message_ListMouseEntered

    }//GEN-LAST:event_Message_ListMouseEntered

    private void Message_ListMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Message_ListMouseExited

    }//GEN-LAST:event_Message_ListMouseExited

    private void Message_ListMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Message_ListMouseMoved

    }//GEN-LAST:event_Message_ListMouseMoved

    private void Message_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Message_BackActionPerformed
if(Message_Convo_Scroll.getHeight()>0){
Messages.doClick();
Message_Convo.removeAll();
Message_Convo.setPreferredSize(new Dimension(0,0));
Message_Convo_Scroll.setSize(450,0);
Message_Scroll.setSize(450,600);
}
else if(Message_Compose.getHeight()>0){
Messages.doClick();
Message_Compose.setSize(450,0);
Message_Scroll.setSize(450,600);  
}
else if((Message_Scroll.getHeight()>0)&&(Message_Window.getHeight()>0)){
cancelDelete();
Message_List.removeAll();
Message_Window.setSize(450,0);    
Menu_Window.setSize(450,700);
}
    
    }//GEN-LAST:event_Message_BackActionPerformed

    private void MenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuActionPerformed
Menu_Window.setSize(450,700);
Home_Window.setSize(450,0);
// TODO add your handling code here:
    }//GEN-LAST:event_MenuActionPerformed

    private void Message_Write_NewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Message_Write_NewActionPerformed
cancelDelete();
Message_Compose.setSize(450,600);
Message_Scroll.setSize(450,0);
Message_Convo_Scroll.setSize(450,0);
// TODO add your handling code here:
    }//GEN-LAST:event_Message_Write_NewActionPerformed

    private void Compose_SendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Compose_SendActionPerformed
long no = Long.parseLong(To_Number.getText());
executeUpdate("Insert INTO Messages VALUES("+no+",true,'"+
Compose_SMS.getText()+"',now());","Blue_Diamond","Message Sent Successfully");
    }//GEN-LAST:event_Compose_SendActionPerformed

    private void Compose_CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Compose_CancelActionPerformed
Compose_SMS.setText("");
// TODO add your handling code here:
    }//GEN-LAST:event_Compose_CancelActionPerformed

    private void Notification_Drop_DownMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Notification_Drop_DownMousePressed
if(Notification_Bar.getHeight()>20){
mov=130;
bar_close.start();
}
else{
mov=0;
bar_open.start();
}
    }//GEN-LAST:event_Notification_Drop_DownMousePressed

    private void Notification_WifiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Notification_WifiMouseClicked
if(wifi==true){
Notification_Wifi.setIcon(new ImageIcon(getClass().getResource("/Mobile_Operating_System/Wifi_Disabled.png")));
Settings_Wifi_Choice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/OFF.png")));
wifi=false;
}
else{
Notification_Wifi.setIcon(new ImageIcon(getClass().getResource("/Mobile_Operating_System/Wifi_Enabled.png")));
Settings_Wifi_Choice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/ON.png")));
wifi=true;
}

    }//GEN-LAST:event_Notification_WifiMouseClicked

    private void Notification_SoundMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Notification_SoundMouseClicked
if(sound==true){
Notification_Sound.setIcon(new ImageIcon(getClass().getResource("/Mobile_Operating_System/Sound_Disabled.png")));
sound=false;
}
else{
Notification_Sound.setIcon(new ImageIcon(getClass().getResource("/Mobile_Operating_System/Sound_Enabled.png")));
sound=true;
}
 // TODO add your handling code here:
    }//GEN-LAST:event_Notification_SoundMouseClicked

    private void Notification_BluetoothMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Notification_BluetoothMouseClicked
if(bluetooth==true){
Notification_Bluetooth.setIcon(new ImageIcon(getClass().getResource("/Mobile_Operating_System/Bluetooth_Disabled.png")));
Settings_Bluetooth_Choice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/OFF.png")));
bluetooth=false;
}
else{
Notification_Bluetooth.setIcon(new ImageIcon(getClass().getResource("/Mobile_Operating_System/Bluetooth_Enabled.png")));
Settings_Bluetooth_Choice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/ON.png")));
bluetooth=true;
}      // TODO add your handling code here:
    }//GEN-LAST:event_Notification_BluetoothMouseClicked

    private void Notification_PowerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Notification_PowerMouseClicked
int p = JOptionPane.showConfirmDialog(null, "Do you want to turn off ?");
if(p==0){
power=false;
System.exit(0);
}
 // TODO add your handling code here:
    }//GEN-LAST:event_Notification_PowerMouseClicked

    private void Notification_CloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Notification_CloseActionPerformed
Notification_Bar.setSize(450,20);
Notification_Time.setLocation(10,0);
Notification_Drop_Down.setLocation(200,0);
Notification_Background.setLocation(0,0);
Notification_Battery.setLocation(390,0);
    }//GEN-LAST:event_Notification_CloseActionPerformed

    private void Notification_Bar_Exited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Notification_Bar_Exited
        // TODO add your handling code here:
    }//GEN-LAST:event_Notification_Bar_Exited

    private void Notification_BarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Notification_BarMouseExited
if((getMousePosition().x>460)||(getMousePosition().y>170))
   Notification_Close.doClick();
    }//GEN-LAST:event_Notification_BarMouseExited

    private void Create_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Create_AddActionPerformed
if(!(Create_Name.getText().equals(""))){
try{
ResultSet count = executeQuerry("Select count(*) from Contacts;","Blue_Diamond");
count.next();
int slno = count.getInt(1)+1;
String name = Create_Name.getText();
String no1="",no2="",no3="",email="",date=null;

if(!(Create_Number1.getText().equals("")))
no1 = Create_Number1.getText();
if(!(Create_Number2.getText().equals("")))
no2 = Create_Number2.getText();
if(!(Create_Number3.getText().equals("")))
no3 = Create_Number3.getText();
email = Create_Email.getText();
if((Create_Year.getSelectedIndex()!=-1)&&(Create_Month.getSelectedIndex()!=-1)&&(Create_Day.getSelectedIndex()!=-1))
date = ""+Create_Year.getSelectedItem()+Create_Month.getSelectedItem()+Create_Day.getSelectedItem();
executeUpdate("Insert into Contacts Values('"+name+"','"+no1+"','"+no2+"','"+no3+"','"+email+"',"+date+","+slno+");","Blue_Diamond","Contact Added Successfully");
Contact_Back.doClick();
}
catch(Exception e)
{
JOptionPane.showMessageDialog (null, e.getMessage());
}
}
else
JOptionPane.showMessageDialog (null,"Enter name !","Error",0);   
    }//GEN-LAST:event_Create_AddActionPerformed

    private void Create_CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Create_CancelActionPerformed
Contact_Back.doClick();        // TODO add your handling code here:
    }//GEN-LAST:event_Create_CancelActionPerformed

    private void Contact_ListMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Contact_ListMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_Contact_ListMouseEntered

    private void Contact_ListMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Contact_ListMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_Contact_ListMouseExited

    private void Contact_ListMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Contact_ListMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_Contact_ListMouseMoved

    private void Contact_ScrollMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Contact_ScrollMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_Contact_ScrollMouseEntered

    private void Contact_ScrollMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Contact_ScrollMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_Contact_ScrollMouseExited

    private void Contact_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Contact_BackActionPerformed
if(Create_Contact.getHeight()>0){
Contacts.doClick();
Contact_Info.setSize(450, 0);
Create_Contact.setSize(450,0);
Edit_Contact.setSize(450,0);
Contact_Scroll.setSize(450,600);
}
else if(Contact_Info.getHeight()>0)
{
Contacts.doClick();
Contact_Info.setSize(450, 0);
Create_Contact.setSize(450,0);
Contact_Scroll.setSize(450,600);
Edit_Contact.setSize(450,0);
Contacts.doClick();

}
else if(Edit_Contact.getHeight()>0)
{
Edit_Clear.doClick();
Contact_Info.setSize(450,600);
Create_Contact.setSize(450,0);
Contact_Scroll.setSize(450,0);
Edit_Contact.setSize(450,0);
}
else{
Contact_Info.setSize(450, 0);
Create_Contact.setSize(450,0);
Edit_Contact.setSize(450,0);
Contact_Scroll.setSize(450,0);
Contact_Window.setSize(450,0);
Menu_Window.setSize(450,700);
}
    }//GEN-LAST:event_Contact_BackActionPerformed

    private void Contact_Create_NewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Contact_Create_NewActionPerformed
Create_Clear.doClick();
Contact_Info.setSize(450,0);
Contact_Scroll.setSize(450,0);
Create_Contact.setSize(450,600);



    }//GEN-LAST:event_Contact_Create_NewActionPerformed

    private void Create_ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Create_ClearActionPerformed
Create_Name.setText("");
Create_Number1.setText("");
Create_Number2.setText("");
Create_Number3.setText("");
Create_Email.setText("");
Create_Day.setSelectedIndex(-1);
Create_Month.setSelectedIndex(-1);
Create_Year.setSelectedIndex(-1);
    }//GEN-LAST:event_Create_ClearActionPerformed

    private void ContactsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ContactsActionPerformed
Contact_List.removeAll();
try{
String qry = "SELECT * FROM Contacts ORDER BY Name;";
ResultSet cont = executeQuerry(qry,"Blue_Diamond");
int my=0;
while(cont.next()){
JLabel name= new JLabel("     "+cont.getString(1));
name.setName(cont.getString(7));
name.setBackground(new Color(75,75,75));
name.setFont(new Font("Tekton Pro", 0, 18)); // NOI18N
name.setForeground(new Color(0, 180, 255));
name.addMouseListener(new java.awt.event.MouseAdapter() {
public void mouseClicked(java.awt.event.MouseEvent evt) {
contactClicked(evt);
}});
name.setOpaque(true);
Contact_List.add(name).setBounds(0, my, 450,40);
my+=41;
}
if(my>600)
Contact_List.setPreferredSize(new Dimension(450,my));
}
catch(Exception e)
{
JOptionPane.showMessageDialog(null,e.getMessage());    
}
Home_Window.setSize(450,0);
Menu_Window.setSize(450,0);
Contact_Scroll.setSize(450,600);
Contact_Window.setSize(450,700);
Notification_Bar.setSize(450,21);
Notification_Bar.setSize(450,20); // TODO add your handling code here:
    }//GEN-LAST:event_ContactsActionPerformed

    private void Edit_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Edit_SaveActionPerformed
if(!(Edit_Name.getText().equals(""))){
try{
int slno = Integer.parseInt(Edit_Sl_No.getText());
String name = Edit_Name.getText();
String no1="",no2="",no3="",email="",date=null;
no1 = Edit_Number1.getText();
no2 = Edit_Number2.getText();
no3 = Edit_Number3.getText();
email = Edit_Email.getText();
if((Edit_Year.getSelectedIndex()!=-1)&&(Edit_Month.getSelectedIndex()!=-1)
   &&(Edit_Day.getSelectedIndex()!=-1))
date = ""+Edit_Year.getSelectedItem()+Edit_Month.getSelectedItem()
         +Edit_Day.getSelectedItem();

executeUpdate("Update Contacts set Name=\'"+name+"\',Home_Number='"+no1+"',"
+"Mobile_Number='"+no2+"',Work_Number='"+no3+"',Email='"+email+"',"
+"Date_Of_Birth="+date+" where Sl_No="+slno+";","Blue_Diamond",
"Contact Updated Successfully");
Edit_Clear.doClick();
displayContact(slno+"");
}
catch(Exception e)
{
JOptionPane.showMessageDialog (null, e.getMessage());
}
}
else
JOptionPane.showMessageDialog (null,"Enter name !","Error",0);
    }//GEN-LAST:event_Edit_SaveActionPerformed

    private void Edit_ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Edit_ClearActionPerformed
        Edit_Name.setText("");
        Edit_Number1.setText("");
        Edit_Number2.setText("");
        Edit_Number3.setText("");
        Edit_Email.setText("");
        Edit_Day.setSelectedIndex(-1);
        Edit_Month.setSelectedIndex(-1);
        Edit_Year.setSelectedIndex(-1);
    }//GEN-LAST:event_Edit_ClearActionPerformed

    private void Edit_CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Edit_CancelActionPerformed
Contact_Back.doClick();        // TODO add your handling code here:
    }//GEN-LAST:event_Edit_CancelActionPerformed

    private void Edit_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Edit_DeleteActionPerformed
int op = JOptionPane.showConfirmDialog
(rootPane,"Are you sure you want to delete "
+Edit_Name.getText()+" ?","Delete confirmation",1,2);
if(op==0){
executeUpdate("Delete from Contacts where Name=\'"+Edit_Name.getText()+"\';",
"Blue_Diamond","Successfully Deleted");
Contact_Info.removeAll();
Edit_Contact.setSize(450,0);
Contact_Info.setSize(450,0);
Contacts.doClick();
}
    }//GEN-LAST:event_Edit_DeleteActionPerformed

    private void Call_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Call_ButtonActionPerformed

    }//GEN-LAST:event_Call_ButtonActionPerformed

    private void Call_TakeMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Call_TakeMouseDragged
Call_Take.setLocation(Take_Call.getMousePosition().x-cdx,500);
if(Call_Take.getX()+400>300){
if(clip.isRunning()==true)
clip.stop();
Take_Call.setSize(450,0);
In_Call.setSize(450,680);
Call_Take.setLocation(-320,500);
Call_Taken.setVisible(false);
Call_Cut.setVisible(true);
}
    }//GEN-LAST:event_Call_TakeMouseDragged

    private void Call_TakeMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Call_TakeMouseReleased
Call_Take.setLocation(-320,500);
Call_Taken.setVisible(false);
Call_Cut.setVisible(true);
    }//GEN-LAST:event_Call_TakeMouseReleased

    private void Call_TakeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Call_TakeMousePressed
Call_Taken.setVisible(true);
Call_Cut.setVisible(false);
cdx=Take_Call.getMousePosition().x-Call_Take.getX();
    }//GEN-LAST:event_Call_TakeMousePressed

    private void Call_CutMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Call_CutMouseDragged
Call_Cut.setLocation(Take_Call.getMousePosition().x-cdx,500);
if(Call_Cut.getX()<150){
if(clip.isRunning()==true)
clip.stop();
Call_End.doClick();
Call_Cut.setLocation(370,500);
Call_Cuted.setVisible(false);
Call_Take.setVisible(true);
}
    }//GEN-LAST:event_Call_CutMouseDragged

    private void Call_CutMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Call_CutMouseReleased
Call_Cut.setLocation(370,500);
Call_Cuted.setVisible(false);
Call_Take.setVisible(true);
    }//GEN-LAST:event_Call_CutMouseReleased

    private void Call_CutMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Call_CutMousePressed
Call_Cuted.setVisible(true);
Call_Take.setVisible(false);
cdx=Take_Call.getMousePosition().x-Call_Cut.getX();
    }//GEN-LAST:event_Call_CutMousePressed

    private void Make_Call_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Make_Call_ButtonActionPerformed
Call_Dialog.setBounds(600,400,400,230);
Call_Dialog.setVisible(true);
    }//GEN-LAST:event_Make_Call_ButtonActionPerformed

    private void Call_EndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Call_EndActionPerformed
In_Call.setSize(450,0);
Take_Call.setSize(450,0);
Call_Window.setSize(450,0);
Home_Window.setSize(450,700);
    }//GEN-LAST:event_Call_EndActionPerformed

    private void Make_CallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Make_CallActionPerformed
mlc.setSize(450,0);
Parent_Lock.setSize(450,0);
String no=Caller_Number.getText(),caller_name;
caller_name=no;
try {
ResultSet name = executeQuerry("select * from contacts where home_number="+no+""
+"|| mobile_number="+no+" || work_number="+no+";","Blue_Diamond");
while(name.next()){
caller_name=name.getString(1);
}
} 
catch(Exception e)
{
JOptionPane.showMessageDialog(null, e.getMessage()+e.toString());
}
Caller_Info.setText("<html> "+caller_name+" is Calling</html>");
Home_Window.setSize(450,0);
Call_Cuted.setVisible(false);
Call_Taken.setVisible(false);
Call_Window.setSize(450,680);
Take_Call.setSize(450,680);
try {
// Open an audio input stream.
audioIn = AudioSystem.getAudioInputStream(ringtone);
// Get a sound clip resource.
clip = AudioSystem.getClip();
// Open audio clip and load samples from the audio input stream.
clip.open(audioIn);
clip.loop(Clip.LOOP_CONTINUOUSLY);
}
catch (UnsupportedAudioFileException e){
e.printStackTrace();
}
catch (IOException e) {
e.printStackTrace();
}
catch (LineUnavailableException e){
e.printStackTrace();
}
    }//GEN-LAST:event_Make_CallActionPerformed

    private void Menu_CalendarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Menu_CalendarActionPerformed
try {
ResultSet cal;
ResultSet check = executeQuerry("Select month(now())+"+months+";","Blue_Diamond");
check.next();
if(check.getInt(1)<10)
cal = executeQuerry("Select dayofweek(concat(year(now())+"+years+",'0',month(now())+"
+months+",'01')),Month(now())+"+months+",year(now())+"+years+";","Blue_Diamond");
else
cal = executeQuerry("Select dayofweek(concat(year(now())+"+years+",month(now())+"
+months+",'01')),Month(now())+"+months+",year(now())+"+years+";","Blue_Diamond");
cal.next();
arrangeCalendar(cal.getInt(1)-1,countDays( cal.getInt(2) , cal.getInt(3) ));
Calendar_Sub_Title1.setText(getMonth(cal.getInt(2))+", "+cal.getInt(3));
}
catch(SQLException e)
{
JOptionPane.showMessageDialog(null, e.getMessage()+" , "+e.toString());
} 
Menu_Window.setSize(450,0);
Home_Window.setSize(450,0);
Calendar_Window.setSize(450,700);
    }//GEN-LAST:event_Menu_CalendarActionPerformed

    private void Next_MonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Next_MonthActionPerformed
months++;  
try {
ResultSet cal;
ResultSet check = executeQuerry("Select month(now());","Blue_Diamond");
check.next();
if(months+check.getInt(1)>12)
{
months-=12;years++;
} 
if(check.getInt(1)+months<10)
cal = executeQuerry("Select dayofweek(concat(year(now())+"+years+",'0',month(now())+"
+months+",'01')),Month(now())+"+months+",year(now())+"+years+";","Blue_Diamond");
else
cal = executeQuerry("Select dayofweek(concat(year(now())+"+years+",month(now())+"
+months+",'01')),Month(now())+"+months+",year(now())+"+years+";","Blue_Diamond");
cal.next();
arrangeCalendar(cal.getInt(1)-1,countDays( cal.getInt(2),cal.getInt(3)));
Calendar_Sub_Title1.setText(getMonth(cal.getInt(2))+", "+cal.getInt(3));
}
catch(SQLException e)
{
JOptionPane.showMessageDialog(null, e.getMessage()+" , "+e.toString());
}     
    }//GEN-LAST:event_Next_MonthActionPerformed

    private void Previous_MonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Previous_MonthActionPerformed
months--;  
try {
ResultSet cal;
ResultSet check = executeQuerry("Select month(now());","Blue_Diamond");
check.next();
if(months+check.getInt(1)<1)
{
months+=12;years--;
} 
if(check.getInt(1)+months<10)
cal = executeQuerry("Select dayofweek(concat(year(now())+"+years+",'0',month(now())+"
+months+",'01')),Month(now())+"+months+",year(now())+"+years+";","Blue_Diamond");
else
cal = executeQuerry("Select dayofweek(concat(year(now())+"+years+",month(now())+"
+months+",'01')),Month(now())+"+months+",year(now())+"+years+";","Blue_Diamond");
cal.next();
arrangeCalendar(cal.getInt(1)-1,countDays( cal.getInt(2) , cal.getInt(3) ));
Calendar_Sub_Title1.setText(getMonth(cal.getInt(2))+", "+cal.getInt(3));
}
catch(SQLException e)
{
JOptionPane.showMessageDialog(null, e.getMessage()+" , "+e.toString());
}
    }//GEN-LAST:event_Previous_MonthActionPerformed

    private void Calendar_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Calendar_BackActionPerformed
Calendar_Window.setSize(450,0);
Menu_Window.setSize(450,700);
    }//GEN-LAST:event_Calendar_BackActionPerformed

    private void Menu_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Menu_BackActionPerformed
Menu_Window.setSize(450,0);
Home_Window.setSize(450,700);
// TODO add your handling code here:
    }//GEN-LAST:event_Menu_BackActionPerformed

    private void Menu_SettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Menu_SettingsActionPerformed
Settings_Window.setSize(450,700);
Menu_Window.setSize(450,0);     
    }//GEN-LAST:event_Menu_SettingsActionPerformed

    private void Menu_GamesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Menu_GamesActionPerformed
Games_Window.setSize(450,700);
Menu_Window.setSize(450,0);       
        
    }//GEN-LAST:event_Menu_GamesActionPerformed

    private void Menu_CalculatorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Menu_CalculatorActionPerformed
Menu_Window.setSize(450,0);
Home_Window.setSize(450,0);
Calculator_Window.setSize(450,700);        // TODO add your handling code here:
    }//GEN-LAST:event_Menu_CalculatorActionPerformed

    private void Menu_ContactsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Menu_ContactsActionPerformed
Contacts.doClick();
    }//GEN-LAST:event_Menu_ContactsActionPerformed

    private void Menu_MessagesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Menu_MessagesActionPerformed
Messages.doClick();
        
    }//GEN-LAST:event_Menu_MessagesActionPerformed

    private void Play_Tic_Tac_ToeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Play_Tic_Tac_ToeActionPerformed
Games_Window.setSize(450,0);
Tic_Tac_Toe_Window.setSize(450,700);
    }//GEN-LAST:event_Play_Tic_Tac_ToeActionPerformed

    private void box2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box2MouseClicked
if(b2==0){
box2.setForeground(new Color(0,225,0));
box2.setText("X");
b2=1;
i++;
}
tie();special_case();winx();
AI_attack();AI();tie();
    }//GEN-LAST:event_box2MouseClicked

    private void box1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box1MouseClicked
if(b1==0){
box1.setForeground(new Color(0,225,0));
box1.setText("X");
b1=1;
i++;
}
tie();special_case();winx();
AI_attack();AI();tie();
    }//GEN-LAST:event_box1MouseClicked

    private void box5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box5MouseClicked
if(b5==0){
box5.setForeground(new Color(0,225,0));
box5.setText("X");
b5=1;
i++;
}
tie();special_case();winx();
AI_attack();AI();tie();
    }//GEN-LAST:event_box5MouseClicked

    private void box6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box6MouseClicked
if(b6==0){
box6.setForeground(new Color(0,225,0));
box6.setText("X");
b6=1;
i++;
}
tie();special_case();winx();
AI_attack();AI();tie();
    }//GEN-LAST:event_box6MouseClicked

    private void box7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box7MouseClicked
if(b7==0){
box7.setForeground(new Color(0,225,0));
box7.setText("X");
b7=1;
i++;
}
tie();special_case();winx();
AI_attack();AI();tie();
    }//GEN-LAST:event_box7MouseClicked

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
box1.setText("");box2.setText("");box3.setText("");
box4.setText("");box5.setText("");box6.setText("");
box7.setText("");box8.setText("");box9.setText("");
if(player_start==true){
i=1;
player_start=false;
}
else if(player_start==false){
i=0;
player_start=true;
}
b1=0;b2=0;b3=0;b4=0;b5=0;b6=0;b7=0;b8=0;b9=0;
box1.setForeground(new Color(10,150,255));box2.setForeground(new Color(10,150,255));
box3.setForeground(new Color(10,150,255));box4.setForeground(new Color(10,150,255));
box5.setForeground(new Color(10,150,255));box6.setForeground(new Color(10,150,255));
box7.setForeground(new Color(10,150,255));box8.setForeground(new Color(10,150,255));
box9.setForeground(new Color(10,150,255));
if(player_start==false){
special_case();winx();
AI_attack();AI();
}
    }//GEN-LAST:event_refreshActionPerformed

    private void box8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box8MouseClicked
if(b8==0){
box8.setForeground(new Color(0,225,0));
box8.setText("X");
b8=1;
i++;
}
tie();special_case();winx();
AI_attack();AI();tie();
    }//GEN-LAST:event_box8MouseClicked

    private void box4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box4MouseClicked
if(b4==0){
box4.setForeground(new Color(0,225,0));
box4.setText("X");
b4=1;
i++;
}
tie();special_case();winx();
AI_attack();AI();tie();
    }//GEN-LAST:event_box4MouseClicked

    private void box9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box9MouseClicked
if(b9==0){
box9.setForeground(new Color(0,225,0));
box9.setText("X");
b9=1;
i++;
}
tie();special_case();winx();
AI_attack();AI();tie();
    }//GEN-LAST:event_box9MouseClicked

    private void box3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box3MouseClicked
if(b3==0){
box3.setForeground(new Color(0,225,0));
box3.setText("X");
b3=1;
i++;
}
tie();special_case();winx();
AI_attack();AI();tie();
    }//GEN-LAST:event_box3MouseClicked

    private void Games_Window_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Games_Window_BackActionPerformed
Games_Window.setSize(450,0);
Menu_Window.setSize(450,700);
    }//GEN-LAST:event_Games_Window_BackActionPerformed

    private void Tic_Tac_Toe_Window_QuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Tic_Tac_Toe_Window_QuitActionPerformed
Tic_Tac_Toe_Window.setSize(450,0);
Games_Window.setSize(450,700);
    }//GEN-LAST:event_Tic_Tac_Toe_Window_QuitActionPerformed

    private void Message_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Message_DeleteActionPerformed
if(Message_Delete.getName().equals("Manage")){
for(int i=0;i<Message_List.getComponentCount();i++){
Message_List.getComponent(i).setVisible(true);
}
Message_Select_All.setSize(20,20);
Message_Delete.setName("Delete");
}
else if(Message_Delete.getName().equals("Delete")){
int choice=JOptionPane.showConfirmDialog(null, 
"Are you sure you want to delete the selected Messages ?","Delete Confirmation",
JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.WARNING_MESSAGE);
if(choice==0){
for(int i=0;i<Message_List.getComponentCount();i++){
Component c = Message_List.getComponent(i);
if(c.getClass().getSimpleName().equals("JCheckBox")){
JCheckBox cb = (JCheckBox) Message_List.getComponent(i);
if(cb.isSelected()==true){
String no = cb.getName();
executeUpdate("Delete from Messages where Number="+no+";","Blue_Diamond","");
}
}
}
cancelDelete();
}
else if(choice==2)
{
cancelDelete();
}
Messages.doClick();
}
    }//GEN-LAST:event_Message_DeleteActionPerformed

    private void Message_Select_AllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Message_Select_AllActionPerformed
for(int i=0;i<Message_List.getComponentCount();i++){
Component c = Message_List.getComponent(i);
if(c.getClass().getSimpleName().equals("JCheckBox")){
JCheckBox cb = (JCheckBox) Message_List.getComponent(i);
cb.setSelected(Message_Select_All.isSelected());
}
}
    }//GEN-LAST:event_Message_Select_AllActionPerformed

    private void Calculator_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Calculator_BackActionPerformed
Calculator_Window.setSize(450,0);
Menu_Window.setSize(450,700);  
    }//GEN-LAST:event_Calculator_BackActionPerformed

    private void Num_Pad_Pressed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Num_Pad_Pressed
if((Double.parseDouble(Workspace.getText())==0)&&(Workspace.getText().length()<=1))
{
Workspace.setText("");      
}
else if((Double.parseDouble(Workspace.getText())==0)&&(Workspace.getText().length()>1)
        &&(Workspace.getText().charAt(1)!='.'))
{
Workspace.setText("");
}

try{
if((calculations.size()!=0)&&(check==0))
check = Double.parseDouble(calculations.get(calculations.size()-1).toString());
}
catch(NumberFormatException e){
}
if((calculations.size()!=0)&&(check==0)){
Workspace.setText("");
check=-1;
}
JButton b = (JButton) evt.getSource();
if((b.getText().equals("."))&&((Workspace.getText().equals(""))||
   (Double.parseDouble(Workspace.getText())==0)))
Workspace.setText("0.");
else
Workspace.setText(Workspace.getText()+b.getText());
    }//GEN-LAST:event_Num_Pad_Pressed

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed
if(Workspace.getText().equals("0"))
History.setText("");
Workspace.setText("0");
while(calculations.size()!=0){
calculations.remove(calculations.size()-1);
}
    }//GEN-LAST:event_ClearActionPerformed

    private void EqualsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EqualsActionPerformed
double num = Double.parseDouble(Workspace.getText());
calculations.add(num);
if((calculations.get(calculations.size()-2).equals("sin"))||
   (calculations.get(calculations.size()-2).equals("cos"))||
   (calculations.get(calculations.size()-2).equals("tan")))
History.append(num+") = ");
else if(!(calculations.get(calculations.size()-2).equals("!")) )
History.append(num+" = ");
if(!(calculations.get(calculations.size()-1).equals("=")))
calculations.add("=");
double ans=0;

if(calculations.get(calculations.size()-3).equals("+")){
double n1 = Double.parseDouble(calculations.get(calculations.size()-4).toString());
double n2 = Double.parseDouble(calculations.get(calculations.size()-2).toString());
ans = n1+n2;
}
else if(calculations.get(calculations.size()-3).equals("-")){
double n1 = Double.parseDouble(calculations.get(calculations.size()-4).toString());
double n2 = Double.parseDouble(calculations.get(calculations.size()-2).toString());
ans = n1-n2;
}
else if(calculations.get(calculations.size()-3).equals("*")){
double n1 = Double.parseDouble(calculations.get(calculations.size()-4).toString());
double n2 = Double.parseDouble(calculations.get(calculations.size()-2).toString());
ans = n1*n2;
}
else if(calculations.get(calculations.size()-3).equals("/")){
double n1 = Double.parseDouble(calculations.get(calculations.size()-4).toString());
double n2 = Double.parseDouble(calculations.get(calculations.size()-2).toString());
ans = n1/n2;
}
else if(calculations.get(calculations.size()-3).equals("^")){
double n1 = Double.parseDouble(calculations.get(calculations.size()-4).toString());
double n2 = Double.parseDouble(calculations.get(calculations.size()-2).toString());
ans = Math.pow(n1, n2);
}
else if(calculations.get(calculations.size()-3).equals("√")){
double n = Double.parseDouble(calculations.get(calculations.size()-2).toString());
ans = Math.sqrt(n);
}
else if(calculations.get(calculations.size()-3).equals("!")){
int n = (int) Double.parseDouble(calculations.get(calculations.size()-2).toString());
if(n<0)
Workspace.setText("NaN");
else{
ans=1;
while(n>0)
ans*=n--;
}
}
else if(calculations.get(calculations.size()-3).equals("ln")){
double n = Double.parseDouble(calculations.get(calculations.size()-2).toString());
ans=Math.log(n);
}
else if(calculations.get(calculations.size()-3).equals("log")){
double n = Double.parseDouble(calculations.get(calculations.size()-2).toString());
ans = Math.log10(n);
}
else if(calculations.get(calculations.size()-3).equals("mod")){
double n1 = Double.parseDouble(calculations.get(calculations.size()-4).toString());
double n2 = Double.parseDouble(calculations.get(calculations.size()-2).toString());
ans = n1%n2;
}
else if(calculations.get(calculations.size()-3).equals("^-1")){
double n = Double.parseDouble(calculations.get(calculations.size()-2).toString());
ans = Math.pow(n,-1);
}
else if(calculations.get(calculations.size()-3).equals("sin")){
double n = Double.parseDouble(calculations.get(calculations.size()-2).toString());
if(Degree.isSelected())
ans = Math.sin(Math.toRadians(n));
else
ans = Math.sin(n); 
if(Math.abs(ans)==1.2246467991473532E-16)
ans = 0;
if(Math.abs(ans)==6.123233995736766E-17)
ans = 0;
}
else if(calculations.get(calculations.size()-3).equals("cos")){
double n = Double.parseDouble(calculations.get(calculations.size()-2).toString());
if(Degree.isSelected())
ans = Math.cos(Math.toRadians(n));
else
ans = Math.cos(n);
if(Math.abs(ans)==1.2246467991473532E-16)
ans = 0;
if(Math.abs(ans)==6.123233995736766E-17)
ans = 0;
}
else if(calculations.get(calculations.size()-3).equals("tan")){
double n = Double.parseDouble(calculations.get(calculations.size()-2).toString());
if(Degree.isSelected())
ans = Math.tan(Math.toRadians(n));
else
ans = Math.tan(n);
if(Math.abs(ans)==1.2246467991473532E-16)
ans = 0;
if(Math.abs(ans)==6.123233995736766E-17)
ans = 0;
}
Workspace.setText(ans+"");
History.append(ans+"\n ");
    }//GEN-LAST:event_EqualsActionPerformed

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
double num = Double.parseDouble(Workspace.getText());
calculations.add(num);
if((calculations.lastIndexOf("+")!=calculations.size()-1) || (calculations.isEmpty()) )
{
calculations.add("+");
History.append(num+" + ");
}
check=0;
    }//GEN-LAST:event_AddActionPerformed

    private void SubtractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubtractActionPerformed
double num = Double.parseDouble(Workspace.getText());
calculations.add(num);
if((calculations.lastIndexOf("-")!=calculations.size()-1) || (calculations.isEmpty()) )
{
calculations.add("-");
History.append(num+" - ");
}
check=0;
    }//GEN-LAST:event_SubtractActionPerformed

    private void MultiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MultiplyActionPerformed
double num = Double.parseDouble(Workspace.getText());
calculations.add(num);
if((calculations.lastIndexOf("*")!=calculations.size()-1) || (calculations.isEmpty()) )
{
calculations.add("*");
History.append(num+" * ");
}
check=0;
    }//GEN-LAST:event_MultiplyActionPerformed

    private void DivideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DivideActionPerformed
double num = Double.parseDouble(Workspace.getText());
calculations.add(num);
if((calculations.lastIndexOf("/")!=calculations.size()-1) || (calculations.isEmpty()) )
{
calculations.add("/");
History.append(num+" / ");
}
check=0;
    }//GEN-LAST:event_DivideActionPerformed

    private void PowerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PowerActionPerformed
double num = Double.parseDouble(Workspace.getText());
calculations.add(num);
if((calculations.lastIndexOf("^")!=calculations.size()-1) || (calculations.isEmpty()) )
{
calculations.add("^");
History.append(num+" ^ ");
}
check=0;
    }//GEN-LAST:event_PowerActionPerformed

    private void Square_RootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Square_RootActionPerformed
calculations.add("√");
History.append(" √ ");
Equals.doClick();
check=0;
    }//GEN-LAST:event_Square_RootActionPerformed

    private void Plus_MinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Plus_MinusActionPerformed
if(Workspace.getText().charAt(0)!='-')
Workspace.setText("-"+Math.abs( Double.parseDouble(Workspace.getText()) ));
else
Workspace.setText("+"+Math.abs( Double.parseDouble(Workspace.getText()) ));      
    }//GEN-LAST:event_Plus_MinusActionPerformed

    private void BackspaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackspaceActionPerformed
if(Workspace.getText().length()>1)
Workspace.setText(Workspace.getText().substring(0,Workspace.getText().length()-1));
else
Workspace.setText("0");
    }//GEN-LAST:event_BackspaceActionPerformed

    private void LanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LanActionPerformed
calculations.add("ln");
History.append("ln ");
Equals.doClick();
check=0;
    }//GEN-LAST:event_LanActionPerformed

    private void LogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogActionPerformed
calculations.add("log");
History.append("log ");
Equals.doClick();
check=0;
    }//GEN-LAST:event_LogActionPerformed

    private void ModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModActionPerformed
double num = Double.parseDouble(Workspace.getText());
calculations.add(num);
if((calculations.lastIndexOf("mod")!=calculations.size()-1)||(calculations.isEmpty()))
{
calculations.add("mod");
History.append(num+" mod ");
}
check=0;    
    }//GEN-LAST:event_ModActionPerformed

    private void InverseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InverseActionPerformed
calculations.add("^-1");
History.append("Inverse of ");
Equals.doClick();
check=0;
    }//GEN-LAST:event_InverseActionPerformed

    private void SinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SinActionPerformed
calculations.add("sin");
History.append("sin (");
Equals.doClick();
check=0;
    }//GEN-LAST:event_SinActionPerformed

    private void CosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CosActionPerformed
calculations.add("cos");
History.append("cos (");
Equals.doClick();
check=0;
    }//GEN-LAST:event_CosActionPerformed

    private void TanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TanActionPerformed
calculations.add("tan");
History.append("tan (");
Equals.doClick();
check=0;
    }//GEN-LAST:event_TanActionPerformed

    private void PiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PiActionPerformed
Workspace.setText(Math.PI+"");
    }//GEN-LAST:event_PiActionPerformed

    private void FactorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FactorialActionPerformed
double num = Double.parseDouble(Workspace.getText());
calculations.add("!");
History.append(num+" ! = ");
Equals.doClick();
check=0;
    }//GEN-LAST:event_FactorialActionPerformed

    private void Settings_ListMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Settings_ListMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_Settings_ListMouseEntered

    private void Settings_ListMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Settings_ListMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_Settings_ListMouseExited

    private void Settings_ListMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Settings_ListMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_Settings_ListMouseMoved

    private void Settings_Wifi_ChoiceMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Settings_Wifi_ChoiceMousePressed
Settings_Wifi_Choice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/MID.png")));
    }//GEN-LAST:event_Settings_Wifi_ChoiceMousePressed

    private void Settings_Wifi_ChoiceMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Settings_Wifi_ChoiceMouseReleased
if(wifi==true){
Settings_Wifi_Choice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/OFF.png")));
Notification_Wifi.setIcon(new ImageIcon(getClass().getResource("/Mobile_Operating_System/Wifi_Disabled.png")));
wifi=false;
}
else{
Settings_Wifi_Choice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/ON.png")));
Notification_Wifi.setIcon(new ImageIcon(getClass().getResource("/Mobile_Operating_System/Wifi_Enabled.png")));
wifi=true;
}
        // TODO add your handling code here:
    }//GEN-LAST:event_Settings_Wifi_ChoiceMouseReleased

    private void Settings_Airplane_Mode_ChoiceMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Settings_Airplane_Mode_ChoiceMousePressed
Settings_Airplane_Mode_Choice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/MID.png")));
    }//GEN-LAST:event_Settings_Airplane_Mode_ChoiceMousePressed

    private void Settings_Airplane_Mode_ChoiceMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Settings_Airplane_Mode_ChoiceMouseReleased
if(Airplane_Mode==true){
Settings_Airplane_Mode_Choice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/OFF.png")));
Airplane_Mode=false;
}
else{
Settings_Airplane_Mode_Choice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/ON.png")));
Airplane_Mode=true;
}
    }//GEN-LAST:event_Settings_Airplane_Mode_ChoiceMouseReleased

    private void Settings_Bluetooth_ChoiceMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Settings_Bluetooth_ChoiceMousePressed
Settings_Bluetooth_Choice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/MID.png")));
    }//GEN-LAST:event_Settings_Bluetooth_ChoiceMousePressed

    private void Settings_Bluetooth_ChoiceMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Settings_Bluetooth_ChoiceMouseReleased
if(bluetooth==true){
Settings_Bluetooth_Choice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/OFF.png")));
Notification_Bluetooth.setIcon(new ImageIcon(getClass().getResource("/Mobile_Operating_System/Bluetooth_Disabled.png")));
bluetooth=false;
}
else{
Settings_Bluetooth_Choice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/ON.png")));
Notification_Bluetooth.setIcon(new ImageIcon(getClass().getResource("/Mobile_Operating_System/Bluetooth_Enabled.png")));
bluetooth=true;
}
    }//GEN-LAST:event_Settings_Bluetooth_ChoiceMouseReleased

    private void Settings_WifiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Settings_WifiMouseClicked
Settings_Window.setSize(450,0);
Wifi_Window.setSize(450,700);
// TODO add your handling code here:
    }//GEN-LAST:event_Settings_WifiMouseClicked

    private void Settings_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Settings_BackActionPerformed
Settings_Window.setSize(450,0);
Menu_Window.setSize(450,700);
    }//GEN-LAST:event_Settings_BackActionPerformed

    private void Settings_DisplayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Settings_DisplayMouseClicked
Display_Window.setSize(450,700);
Settings_Window.setSize(450,0);       // TODO add your handling code here:
    }//GEN-LAST:event_Settings_DisplayMouseClicked

    private void Wifi_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Wifi_BackActionPerformed
Wifi_Window.setSize(450,0);
Settings_Window.setSize(450,700);
    }//GEN-LAST:event_Wifi_BackActionPerformed

    private void Display_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Display_BackActionPerformed
Display_Window.setSize(450,0);
Settings_Window.setSize(450,700);
    }//GEN-LAST:event_Display_BackActionPerformed

    private void Choose_WalpaperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Choose_WalpaperActionPerformed
Walpaper_Change_Dialog.setBounds(0,0,600,400);
Walpaper_Change_Dialog.setVisible(true);
    }//GEN-LAST:event_Choose_WalpaperActionPerformed

    private void Wallpaper_ChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Wallpaper_ChooserActionPerformed
if(Wallpaper_Chooser.APPROVE_OPTION==0){
Wallpaper.setIcon(new javax.swing.ImageIcon(Wallpaper_Chooser.getSelectedFile().toString()));
Walpaper_Change_Dialog.setVisible(false);
Call_End.doClick();
Display_Window.setSize(450,0);
Home_Window.setSize(450,700);
}
    }//GEN-LAST:event_Wallpaper_ChooserActionPerformed

    private void Bluetooth_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bluetooth_BackActionPerformed
Bluetooth_Window.setSize(450,0);
Settings_Window.setSize(450,700);        // TODO add your handling code here:
    }//GEN-LAST:event_Bluetooth_BackActionPerformed

    private void Settings_BluetoothMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Settings_BluetoothMouseClicked
Settings_Window.setSize(450,0); 
Bluetooth_Window.setSize(450,700);
    }//GEN-LAST:event_Settings_BluetoothMouseClicked

    private void Call_Settings_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Call_Settings_BackActionPerformed
Settings_Window.setSize(450,700); 
Call_Settings_Window.setSize(450,0);        // TODO add your handling code here:
    }//GEN-LAST:event_Call_Settings_BackActionPerformed

    private void Choose_RingtoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Choose_RingtoneActionPerformed
Ringtone_Change_Dialog.setBounds(0,0,600,400);
Ringtone_Change_Dialog.setVisible(true); 
    }//GEN-LAST:event_Choose_RingtoneActionPerformed

    private void Ringtone_ChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Ringtone_ChooserActionPerformed
if(Ringtone_Chooser.APPROVE_OPTION==0){
try {
// Open an audio input stream.
ringtone = Ringtone_Chooser.getSelectedFile().toURL();
audioIn = AudioSystem.getAudioInputStream(ringtone);
clip = AudioSystem.getClip();
         clip.start();
       } catch (UnsupportedAudioFileException e) {
         e.printStackTrace();
      } catch (IOException e) {
         e.printStackTrace();
      } catch (LineUnavailableException e) {
         e.printStackTrace();
      }  
}
Ringtone_Change_Dialog.setVisible(false);
    }//GEN-LAST:event_Ringtone_ChooserActionPerformed

    private void Settings_CallMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Settings_CallMouseClicked
Settings_Window.setSize(450,0); 
Call_Settings_Window.setSize(450,700);
    }//GEN-LAST:event_Settings_CallMouseClicked

    private void Sound_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Sound_BackActionPerformed
Settings_Window.setSize(450,700); 
Sound_Window.setSize(450,0);       // TODO add your handling code here:
    }//GEN-LAST:event_Sound_BackActionPerformed

    private void Sound_ChoiceMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Sound_ChoiceMousePressed
Sound_Choice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/MID.png")));
// TODO add your handling code here:
    }//GEN-LAST:event_Sound_ChoiceMousePressed

    private void Sound_ChoiceMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Sound_ChoiceMouseReleased
 if(sound==true){
Sound_Choice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/OFF.png")));
Notification_Sound.setIcon(new ImageIcon(getClass().getResource("/Mobile_Operating_System/Sound_Disabled.png")));
sound=false;
}
else{
Sound_Choice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/ON.png")));
Notification_Sound.setIcon(new ImageIcon(getClass().getResource("/Mobile_Operating_System/Sound_Enabled.png")));
sound=true;
}
 // TODO add your handling code here:
    }//GEN-LAST:event_Sound_ChoiceMouseReleased

    private void Vibrate_ChoiceMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Vibrate_ChoiceMousePressed
 Vibrate_Choice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/MID.png")));       // TODO add your handling code here:
    }//GEN-LAST:event_Vibrate_ChoiceMousePressed

    private void Vibrate_ChoiceMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Vibrate_ChoiceMouseReleased
if(vibrate==true){
Vibrate_Choice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/OFF.png")));
vibrate=false;
}
else{
Vibrate_Choice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/ON.png")));
vibrate=true;
}       // TODO add your handling code here:
    }//GEN-LAST:event_Vibrate_ChoiceMouseReleased

    private void Sound_Sub_Title2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Sound_Sub_Title2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Sound_Sub_Title2MouseClicked

    private void Settings_Date_TimeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Settings_Date_TimeMouseClicked
Date_Time_Window.setSize(450,700);
Settings_Window.setSize(450,0); 
try{
ResultSet time = executeQuerry("Select now();","Blue_Diamond");
time.next();

int day = time.getDate(1).getDate();
if(day<10)
System_Month.setSelectedItem("0"+day);
else
System_Day.setSelectedItem(""+day);

int mon = time.getDate(1).getMonth()+1;
if(mon<10)
System_Month.setSelectedItem("0"+mon);
else
System_Month.setSelectedItem(""+mon);

int year = time.getDate(1).getYear()+1900;
System_Year.setSelectedItem(""+year);

}
catch(Exception e)
{
JOptionPane.showMessageDialog (null, e.getMessage());
}

    }//GEN-LAST:event_Settings_Date_TimeMouseClicked

    private void Date_Time_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Date_Time_BackActionPerformed
Date_Time_Window.setSize(450,0);
Settings_Window.setSize(450,700);        // TODO add your handling code here:
    }//GEN-LAST:event_Date_Time_BackActionPerformed

    private void Network_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Network_BackActionPerformed
Network_Window.setSize(450,0);
Settings_Window.setSize(450,700);       
        // TODO add your handling code here:
    }//GEN-LAST:event_Network_BackActionPerformed

    private void Settings_NetworkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Settings_NetworkMouseClicked
Network_Window.setSize(450,700);
Settings_Window.setSize(450,0);        // TODO add your handling code here:
    }//GEN-LAST:event_Settings_NetworkMouseClicked

    private void Settings_SecurityMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Settings_SecurityMouseClicked
Security_Window.setSize(450,700);
Settings_Window.setSize(450,0);        // TODO add your handling code here:
    }//GEN-LAST:event_Settings_SecurityMouseClicked

    private void Security_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Security_BackActionPerformed
Security_Window.setSize(450,0);
Settings_Window.setSize(450,700);         // TODO add your handling code here:
    }//GEN-LAST:event_Security_BackActionPerformed

    private void Change_Lock_PatternActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Change_Lock_PatternActionPerformed
Parent_Lock.setSize(450,700);
Security_Window.setSize(450,0);
set_pattern.doClick();
    }//GEN-LAST:event_Change_Lock_PatternActionPerformed

    private void Settings_SoundMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Settings_SoundMouseClicked
Sound_Window.setSize(450,700);
Settings_Window.setSize(450,0); // TODO add your handling code here:
    }//GEN-LAST:event_Settings_SoundMouseClicked

    private void Settings_AboutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Settings_AboutMouseClicked
About_Window.setSize(450,700); 
Settings_Window.setSize(450,0);
// TODO add your handling code here:
    }//GEN-LAST:event_Settings_AboutMouseClicked

    private void About_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_About_BackActionPerformed
About_Window.setSize(450,0); 
Settings_Window.setSize(450,700);
// TODO add your handling code here:
    }//GEN-LAST:event_About_BackActionPerformed

    private void Settings_UpdatesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Settings_UpdatesMouseClicked
Updates_Window.setSize(450,700); 
Settings_Window.setSize(450,0);// TODO add your handling code here:
    }//GEN-LAST:event_Settings_UpdatesMouseClicked

    private void Updates_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Updates_BackActionPerformed
Updates_Window.setSize(450,0); 
Settings_Window.setSize(450,700);   // TODO add your handling code here:
    }//GEN-LAST:event_Updates_BackActionPerformed

    private void Cancel_SMSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cancel_SMSActionPerformed
Message_Dialog.setVisible(false);
    }//GEN-LAST:event_Cancel_SMSActionPerformed

    
        public final class InnerClassDrawingPanel extends javax.swing.JPanel {    
        @Override
        protected void paintComponent(Graphics g) {
        Graphics2D g2d = (Graphics2D)g;
        super.paintComponent(g2d);
        g2d.setColor(line);
        g2d.setBackground(Color.black);
        g2d.clearRect(0, 0,board.getWidth(),board.getHeight());
        g2d.setStroke(new BasicStroke(15f,BasicStroke.CAP_ROUND,BasicStroke.JOIN_ROUND));
        g2d.drawPolyline(xp,yp,dot+2);
        g2d.clearRect(0, 0,10,10);
          }
    }

    public static void main(String args[]) {
        NativeLibrary.addSearchPath(RuntimeUtil.getLibVlcLibraryName(), "C:/Program Files/VideoLAN/VLC");
        Native.loadLibrary(RuntimeUtil.getLibVlcLibraryName(),LibVlc.class);
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Blue_Diamond.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Blue_Diamond.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Blue_Diamond.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Blue_Diamond.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Blue_Diamond().setVisible(true);
            }
        });
    }
    
InnerClassDrawingPanel drawpanel = new InnerClassDrawingPanel();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton About_Back;
    private javax.swing.JLabel About_Title;
    private javax.swing.JPanel About_Window;
    private javax.swing.JButton Add;
    private javax.swing.ButtonGroup Angles;
    private javax.swing.JPanel Animation;
    private javax.swing.JButton Backspace;
    private javax.swing.JButton Bluetooth_Back;
    private javax.swing.JLabel Bluetooth_Sub_Title1;
    private javax.swing.JLabel Bluetooth_Sub_Title2;
    private javax.swing.JLabel Bluetooth_Sub_Title3;
    private javax.swing.JLabel Bluetooth_Title;
    private javax.swing.JPanel Bluetooth_Window;
    private javax.swing.JButton Calculator_Back;
    private javax.swing.JLabel Calculator_Title;
    private javax.swing.JPanel Calculator_Window;
    private javax.swing.JTable Calendar;
    private javax.swing.JButton Calendar_Back;
    private javax.swing.JScrollPane Calendar_Scroll;
    private javax.swing.JTextField Calendar_Sub_Title1;
    private javax.swing.JLabel Calendar_Title;
    private javax.swing.JPanel Calendar_Window;
    private javax.swing.JLabel Call_Background;
    private javax.swing.JLabel Call_Background1;
    private javax.swing.JLabel Call_Background2;
    private javax.swing.JButton Call_Button;
    private javax.swing.JLabel Call_Cut;
    private javax.swing.JLabel Call_Cuted;
    private javax.swing.JDialog Call_Dialog;
    private javax.swing.JLabel Call_Dialog_Sub_Title3;
    private javax.swing.JLabel Call_Dialog_Title;
    private javax.swing.JButton Call_End;
    private javax.swing.JToggleButton Call_Hold;
    private javax.swing.JButton Call_Settings_Back;
    private javax.swing.JLabel Call_Settings_Sub_Title1;
    private javax.swing.JLabel Call_Settings_Title;
    private javax.swing.JSlider Call_Settings_Volume;
    private javax.swing.JPanel Call_Settings_Window;
    private javax.swing.JToggleButton Call_Speaker;
    private javax.swing.JLabel Call_Take;
    private javax.swing.JLabel Call_Taken;
    private javax.swing.JPanel Call_Window;
    private javax.swing.JLabel Caller;
    private javax.swing.JLabel Caller_Info;
    private javax.swing.JTextField Caller_Number;
    private javax.swing.JButton Cancel_Call;
    private javax.swing.JButton Cancel_SMS;
    private javax.swing.JToggleButton Change_Lock_Pattern;
    private javax.swing.JButton Choose_Ringtone;
    private javax.swing.JButton Choose_Walpaper;
    private javax.swing.JButton Clear;
    private javax.swing.JButton Compose_Cancel;
    private javax.swing.JTextArea Compose_SMS;
    private javax.swing.JScrollPane Compose_SMS_Scroll_Pane;
    private javax.swing.JButton Compose_Send;
    private javax.swing.JLabel Compose_Sub_Title1;
    private javax.swing.JLabel Compose_Sub_Title2;
    private javax.swing.JButton Contact_Back;
    private javax.swing.JButton Contact_Create_New;
    private javax.swing.JPanel Contact_Info;
    private javax.swing.JPanel Contact_List;
    private javax.swing.JScrollPane Contact_Scroll;
    private javax.swing.JPanel Contact_Window;
    private javax.swing.JButton Contacts;
    private javax.swing.JLabel Contacts_Title;
    private javax.swing.JLabel Copyrights;
    private javax.swing.JButton Cos;
    private javax.swing.JButton Create_Add;
    private javax.swing.JButton Create_Cancel;
    private javax.swing.JButton Create_Clear;
    private javax.swing.JPanel Create_Contact;
    private javax.swing.JComboBox Create_Day;
    private javax.swing.JTextField Create_Email;
    private javax.swing.JComboBox Create_Month;
    private javax.swing.JTextField Create_Name;
    private javax.swing.JTextField Create_Number1;
    private javax.swing.JTextField Create_Number2;
    private javax.swing.JTextField Create_Number3;
    private javax.swing.JLabel Create_Sub_Title1;
    private javax.swing.JLabel Create_Sub_Title2;
    private javax.swing.JLabel Create_Sub_Title3;
    private javax.swing.JLabel Create_Sub_Title4;
    private javax.swing.JLabel Create_Sub_Title5;
    private javax.swing.JLabel Create_Sub_Title6;
    private javax.swing.JComboBox Create_Year;
    private javax.swing.JButton Date_Time_Back;
    private javax.swing.JLabel Date_Time_Title;
    private javax.swing.JPanel Date_Time_Window;
    private javax.swing.JRadioButton Degree;
    private javax.swing.JButton Display_Back;
    private javax.swing.JSlider Display_Backlight_Time;
    private javax.swing.JSlider Display_Brightness;
    private javax.swing.JLabel Display_Sub_Title1;
    private javax.swing.JLabel Display_Sub_Title2;
    private javax.swing.JLabel Display_Sub_Title3;
    private javax.swing.JLabel Display_Sub_Title5;
    private javax.swing.JLabel Display_Sub_Title6;
    private javax.swing.JLabel Display_Title;
    private javax.swing.JPanel Display_Window;
    private javax.swing.JButton Divide;
    private javax.swing.JButton Edit_Cancel;
    private javax.swing.JButton Edit_Clear;
    private javax.swing.JPanel Edit_Contact;
    private javax.swing.JComboBox Edit_Day;
    private javax.swing.JButton Edit_Delete;
    private javax.swing.JTextField Edit_Email;
    private javax.swing.JComboBox Edit_Month;
    private javax.swing.JTextField Edit_Name;
    private javax.swing.JTextField Edit_Number1;
    private javax.swing.JTextField Edit_Number2;
    private javax.swing.JTextField Edit_Number3;
    private javax.swing.JButton Edit_Save;
    private javax.swing.JTextField Edit_Sl_No;
    private javax.swing.JLabel Edit_Sub_Title1;
    private javax.swing.JLabel Edit_Sub_Title2;
    private javax.swing.JLabel Edit_Sub_Title3;
    private javax.swing.JLabel Edit_Sub_Title4;
    private javax.swing.JLabel Edit_Sub_Title5;
    private javax.swing.JLabel Edit_Sub_Title6;
    private javax.swing.JComboBox Edit_Year;
    private javax.swing.JButton Equals;
    private javax.swing.JButton Factorial;
    private javax.swing.JTextField From_Number;
    private javax.swing.JLabel Games_Title;
    private javax.swing.JPanel Games_Window;
    private javax.swing.JButton Games_Window_Back;
    private javax.swing.JTextArea History;
    private javax.swing.JScrollPane History_Scroll;
    private javax.swing.JPanel Home_Window;
    private javax.swing.JPanel In_Call;
    private javax.swing.JButton Inverse;
    private javax.swing.JButton Lan;
    private javax.swing.JButton Lock_Phone;
    private javax.swing.JPanel Lock_Screen;
    private javax.swing.JButton Log;
    private javax.swing.JButton Make_Call;
    private javax.swing.JButton Make_Call_Button;
    private javax.swing.JButton Menu;
    private javax.swing.JButton Menu_Back;
    private javax.swing.JButton Menu_Calculator;
    private javax.swing.JButton Menu_Calendar;
    private javax.swing.JButton Menu_Contacts;
    private javax.swing.JButton Menu_Games;
    private javax.swing.JButton Menu_Messages;
    private javax.swing.JButton Menu_Settings;
    private javax.swing.JLabel Menu_Title;
    private javax.swing.JPanel Menu_Window;
    private javax.swing.JButton Message_Back;
    private javax.swing.JPanel Message_Compose;
    private javax.swing.JPanel Message_Convo;
    private javax.swing.JScrollPane Message_Convo_Scroll;
    private javax.swing.JButton Message_Delete;
    private javax.swing.JDialog Message_Dialog;
    private javax.swing.JLabel Message_Dialog_Sub_Title1;
    private javax.swing.JLabel Message_Dialog_Sub_Title2;
    private javax.swing.JLabel Message_Dialog_Title;
    private javax.swing.JPanel Message_List;
    private javax.swing.JScrollPane Message_Scroll;
    private javax.swing.JCheckBox Message_Select_All;
    private javax.swing.JLabel Message_Title;
    private javax.swing.JPanel Message_Window;
    private javax.swing.JButton Message_Write_New;
    private javax.swing.JButton Messages;
    private javax.swing.JButton Mod;
    private javax.swing.JButton Multiply;
    private javax.swing.JButton Network_Back;
    private javax.swing.JLabel Network_Sub_Title1;
    private javax.swing.JLabel Network_Sub_Title2;
    private javax.swing.JLabel Network_Title;
    private javax.swing.JPanel Network_Window;
    private javax.swing.JButton Next_Month;
    private javax.swing.JLabel Notification_Background;
    private javax.swing.JPanel Notification_Bar;
    private javax.swing.JLabel Notification_Battery;
    private javax.swing.JLabel Notification_Bluetooth;
    private javax.swing.JButton Notification_Close;
    private javax.swing.JLabel Notification_Drop_Down;
    private javax.swing.JLabel Notification_Power;
    private javax.swing.JLabel Notification_Sound;
    private javax.swing.JTextField Notification_Time;
    private javax.swing.JLabel Notification_Wifi;
    private javax.swing.JButton Num_0;
    private javax.swing.JButton Num_1;
    private javax.swing.JButton Num_2;
    private javax.swing.JButton Num_3;
    private javax.swing.JButton Num_4;
    private javax.swing.JButton Num_5;
    private javax.swing.JButton Num_6;
    private javax.swing.JButton Num_7;
    private javax.swing.JButton Num_8;
    private javax.swing.JButton Num_9;
    private javax.swing.JPanel Num_Pad;
    private javax.swing.JPanel Parent_Lock;
    private javax.swing.JButton Pi;
    private javax.swing.JButton Play_Tic_Tac_Toe;
    private javax.swing.JButton Plus_Minus;
    private javax.swing.JButton Power;
    private javax.swing.JButton Previous_Month;
    private javax.swing.JRadioButton Radians;
    private javax.swing.JButton Remainder;
    private javax.swing.JDialog Ringtone_Change_Dialog;
    private javax.swing.JFileChooser Ringtone_Chooser;
    private javax.swing.JButton Security_Back;
    private javax.swing.JLabel Security_Sub_Title1;
    private javax.swing.JLabel Security_Title;
    private javax.swing.JPanel Security_Window;
    private javax.swing.JButton Send_Message;
    private javax.swing.JButton Send_SMS;
    private javax.swing.JTextArea Sender_SMS;
    private javax.swing.JScrollPane Sender_SMS_Scroll_Pane;
    private javax.swing.JLabel Settings_About;
    private javax.swing.JLabel Settings_Airplane;
    private javax.swing.JLabel Settings_Airplane_Mode_Choice;
    private javax.swing.JButton Settings_Back;
    private javax.swing.JLabel Settings_Bluetooth;
    private javax.swing.JLabel Settings_Bluetooth_Choice;
    private javax.swing.JLabel Settings_Call;
    private javax.swing.JLabel Settings_Date_Time;
    private javax.swing.JLabel Settings_Display;
    private javax.swing.JPanel Settings_List;
    private javax.swing.JLabel Settings_Network;
    private javax.swing.JScrollPane Settings_Scroll;
    private javax.swing.JLabel Settings_Security;
    private javax.swing.JLabel Settings_Sound;
    private javax.swing.JLabel Settings_Title;
    private javax.swing.JLabel Settings_Updates;
    private javax.swing.JLabel Settings_Wifi;
    private javax.swing.JLabel Settings_Wifi_Choice;
    private javax.swing.JPanel Settings_Window;
    private javax.swing.JButton Sin;
    private javax.swing.JButton Sound_Back;
    private javax.swing.JLabel Sound_Choice;
    private javax.swing.JLabel Sound_Sub_Title1;
    private javax.swing.JLabel Sound_Sub_Title2;
    private javax.swing.JLabel Sound_Sub_Title3;
    private javax.swing.JLabel Sound_Title;
    private javax.swing.JPanel Sound_Window;
    private javax.swing.JButton Square_Root;
    private javax.swing.JButton Subtract;
    private javax.swing.JComboBox System_Day;
    private javax.swing.JComboBox System_Month;
    private javax.swing.JSlider System_Volume;
    private javax.swing.JComboBox System_Year;
    private javax.swing.JPanel Take_Call;
    private javax.swing.JButton Tan;
    private javax.swing.JPanel Tic_Tac_Toe_Window;
    private javax.swing.JButton Tic_Tac_Toe_Window_Quit;
    private javax.swing.JTextField To_Number;
    private javax.swing.JButton Updates_Back;
    private javax.swing.JLabel Updates_Title;
    private javax.swing.JPanel Updates_Window;
    private javax.swing.JLabel Vibrate_Choice;
    private javax.swing.JLabel Wallpaper;
    private javax.swing.JFileChooser Wallpaper_Chooser;
    private javax.swing.JDialog Walpaper_Change_Dialog;
    private javax.swing.JButton Wifi_Back;
    private javax.swing.JLabel Wifi_Sub_Title1;
    private javax.swing.JLabel Wifi_Sub_Title2;
    private javax.swing.JLabel Wifi_Title;
    private javax.swing.JPanel Wifi_Window;
    private javax.swing.JTextField Workspace;
    private javax.swing.JPanel board;
    private javax.swing.JTextField box1;
    private javax.swing.JTextField box2;
    private javax.swing.JTextField box3;
    private javax.swing.JTextField box4;
    private javax.swing.JTextField box5;
    private javax.swing.JTextField box6;
    private javax.swing.JTextField box7;
    private javax.swing.JTextField box8;
    private javax.swing.JTextField box9;
    private javax.swing.JLabel dot1;
    private javax.swing.JLabel dot2;
    private javax.swing.JLabel dot3;
    private javax.swing.JLabel dot4;
    private javax.swing.JLabel dot5;
    private javax.swing.JLabel dot6;
    private javax.swing.JLabel dot7;
    private javax.swing.JLabel dot8;
    private javax.swing.JLabel dot9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton refresh;
    private javax.swing.JButton reset;
    private javax.swing.JToggleButton set_pattern;
    // End of variables declaration//GEN-END:variables
}

/*
 * ~~~~~~~~~~~ MYSQL One time Commands ~~~~~~~~~~~~~~
 * create table Messages(Number long,Reply boolean,SMS varchar(160),Time DateTime);
 * create table Contacts(Name varchar(100),Home_Number long,Mobile_Number long,Work_Number long,Email varchar(255),Date_Of_Birth Date,SL_No int Primary KEY);
 * select number,Home_Number,Mobile_number,Work_Number,SMS from messages,contacts;
 * select m.number,c.name,m.sms,m.time from messages m left join contacts c on c.home_number=m.number OR c.mobile_number=m.number OR c.work_number=m.number group by number Order by time desc;
 */