/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Långsam.java
 *
 * Created on Jul 1, 2012, 2:49:05 PM
 */
package Mobile_Operating_System;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.ImageIcon;
import javax.swing.Timer;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import java.io.File;
import java.net.URL;
import uk.co.caprica.vlcj.binding.LibVlc;
import uk.co.caprica.vlcj.component.EmbeddedMediaPlayerComponent;
import uk.co.caprica.vlcj.runtime.RuntimeUtil;

/**
 *
 * @author $Akshay$
 */
public class Langsam extends javax.swing.JFrame {

    /** Creates new form Långsam */
    public Langsam() {
        initComponents();
        
mlc = new EmbeddedMediaPlayerComponent();
Inactive_Background2.setContentPane(mlc);
String mrl = getClass().getResource("/Mobile_Operating_System/Snow_Animation.mp4").toString();
mlc.getMediaPlayer().prepareMedia(mrl);   
        
        
t = new Timer(1100,new ActionListener() {    
public void actionPerformed(ActionEvent evt){
reset.doClick();
t.stop();
}});

click = new Timer(50,new ActionListener() {    
public void actionPerformed(ActionEvent evt){
no++;
if(no<10)
Ripple.setIcon(new ImageIcon(getClass().getResource("/Ripple/Ripple_0000"+no+".png")));
else if(no<100)
Ripple.setIcon(new ImageIcon(getClass().getResource("/Ripple/Ripple_000"+no+".png")));   
else if(no<113)
Ripple.setIcon(new ImageIcon(getClass().getResource("/Ripple/Ripple_00"+no+".png")));
}});

unlock = new Timer(1000,new ActionListener() {    
public void actionPerformed(ActionEvent evt){
mlc.getMediaPlayer().pause();
Inactive_Background2.setSize(450,0);
Parent_Lock.setSize(450,0);

Contacts.setEnabled(true);
Menu.setEnabled(true);
Messages.setEnabled(true);

unlock.stop();
}});      
        
board.setViewportView(drawpanel);
drawpanel.repaint();
drawpanel.setAutoscrolls(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Screen = new javax.swing.JPanel();
        Parent_Lock = new javax.swing.JPanel();
        Lock_Screen_Panel = new javax.swing.JPanel();
        set_pattern = new javax.swing.JToggleButton();
        dot1 = new javax.swing.JLabel();
        dot2 = new javax.swing.JLabel();
        dot3 = new javax.swing.JLabel();
        dot4 = new javax.swing.JLabel();
        dot5 = new javax.swing.JLabel();
        dot6 = new javax.swing.JLabel();
        dot7 = new javax.swing.JLabel();
        dot8 = new javax.swing.JLabel();
        dot9 = new javax.swing.JLabel();
        empty = new javax.swing.JLabel();
        board = new javax.swing.JScrollPane();
        tapane = new javax.swing.JScrollPane();
        ta = new javax.swing.JTextArea();
        reset = new javax.swing.JButton();
        Inactive_Background2 = new javax.swing.JInternalFrame();
        Inactive_Background = new javax.swing.JPanel();
        Message_Window = new javax.swing.JPanel();
        Contacts = new javax.swing.JButton();
        Menu = new javax.swing.JButton();
        Messages = new javax.swing.JButton();
        Ripple = new javax.swing.JLabel();
        Wallpaper = new javax.swing.JLabel();
        Lock_Phone = new javax.swing.JButton();
        info = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Screen.setBackground(new java.awt.Color(255, 255, 255));
        Screen.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        Screen.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Parent_Lock.setOpaque(false);
        Parent_Lock.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Lock_Screen_Panel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        set_pattern.setBackground(new java.awt.Color(0, 153, 255));
        set_pattern.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        set_pattern.setText("Set Pattern");
        set_pattern.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                set_patternActionPerformed(evt);
            }
        });
        Lock_Screen_Panel.add(set_pattern, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 0, 120, 30));

        dot1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                dotsMousePressed(evt);
            }
        });
        dot1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                screenMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                screenMouseMoved(evt);
            }
        });
        Lock_Screen_Panel.add(dot1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 50, 50));

        dot2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                dotsMousePressed(evt);
            }
        });
        dot2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                screenMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                screenMouseMoved(evt);
            }
        });
        Lock_Screen_Panel.add(dot2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 50, 50, 50));

        dot3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                dotsMousePressed(evt);
            }
        });
        dot3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                screenMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                screenMouseMoved(evt);
            }
        });
        Lock_Screen_Panel.add(dot3, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 50, 50, 50));

        dot4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                dotsMousePressed(evt);
            }
        });
        dot4.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                screenMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                screenMouseMoved(evt);
            }
        });
        Lock_Screen_Panel.add(dot4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, 50, 50));

        dot5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                dotsMousePressed(evt);
            }
        });
        dot5.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                screenMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                screenMouseMoved(evt);
            }
        });
        Lock_Screen_Panel.add(dot5, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 150, 50, 50));

        dot6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                dotsMousePressed(evt);
            }
        });
        dot6.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                screenMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                screenMouseMoved(evt);
            }
        });
        Lock_Screen_Panel.add(dot6, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 150, 50, 50));

        dot7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                dotsMousePressed(evt);
            }
        });
        dot7.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                screenMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                screenMouseMoved(evt);
            }
        });
        Lock_Screen_Panel.add(dot7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 250, 50, 50));

        dot8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                dotsMousePressed(evt);
            }
        });
        dot8.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                screenMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                screenMouseMoved(evt);
            }
        });
        Lock_Screen_Panel.add(dot8, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 250, 50, 50));

        dot9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                dotsMousePressed(evt);
            }
        });
        dot9.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                screenMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                screenMouseMoved(evt);
            }
        });
        Lock_Screen_Panel.add(dot9, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 250, 50, 50));

        empty.setBackground(new java.awt.Color(0, 0, 0));
        empty.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                screenMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                screenMouseMoved(evt);
            }
        });
        Lock_Screen_Panel.add(empty, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 350, 350));
        Lock_Screen_Panel.add(board, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 350, 350));

        ta.setColumns(20);
        ta.setEditable(false);
        ta.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        ta.setRows(3);
        ta.setMinimumSize(new java.awt.Dimension(0, 0));
        ta.setName(""); // NOI18N
        tapane.setViewportView(ta);

        Lock_Screen_Panel.add(tapane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 350, 350, 100));

        reset.setBackground(new java.awt.Color(0, 204, 0));
        reset.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });
        Lock_Screen_Panel.add(reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 70, 30));

        Parent_Lock.add(Lock_Screen_Panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, -1, 350));
        Lock_Screen_Panel.getAccessibleContext().setAccessibleName("");

        Inactive_Background2.setVisible(true);
        Parent_Lock.add(Inactive_Background2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 0));

        Screen.add(Parent_Lock, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 0));

        Inactive_Background.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        Screen.add(Inactive_Background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 0));
        Screen.add(Message_Window, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 0));

        Contacts.setBackground(new java.awt.Color(0, 0, 0));
        Screen.add(Contacts, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 570, 100, 100));

        Menu.setBackground(new java.awt.Color(0, 0, 0));
        Menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MenuMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MenuMousePressed(evt);
            }
        });
        Screen.add(Menu, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 570, 100, 100));

        Messages.setBackground(new java.awt.Color(0, 0, 0));
        Messages.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MessagesActionPerformed(evt);
            }
        });
        Screen.add(Messages, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 570, 100, 100));
        Screen.add(Ripple, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 140, 300, 300));

        Wallpaper.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Wallpaper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/BG_1.jpeg"))); // NOI18N
        Wallpaper.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        Wallpaper.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                WallpaperMousePressed(evt);
            }
        });
        Screen.add(Wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 700));

        getContentPane().add(Screen, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 450, 700));

        Lock_Phone.setBackground(new java.awt.Color(0, 153, 255));
        Lock_Phone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Lock_PhoneActionPerformed(evt);
            }
        });
        getContentPane().add(Lock_Phone, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 140, 70, 50));

        info.setText("©$Dollar Aksahy$");
        getContentPane().add(info, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 110, 100, 20));

        pack();
    }// </editor-fold>//GEN-END:initComponents
Color line = new Color(255,200,0);
Point mp;
URL mrl;
public EmbeddedMediaPlayerComponent mlc;
int no=0;
Timer t,click;
Timer unlock;
boolean drag=false,setpattern=false;
boolean p1=false,p2=false,p3=false,
        p4=false,p5=false,p6=false,
        p7=false,p8=false,p9=false;
int xp[]={0,0,0,0,0,
          0,0,0,0,0,0};
int yp[]={0,0,0,0,0,
          0,0,0,0,0,0};
int pattern[]    ={3,2,1,4,5,6,9,8,7};
int testpattern[]={0,0,0,0,0,0,0,0,0};
int dot=0;
//End of Variables
boolean checkPattern()
{
boolean result = false;
for(int i=0;i<dot;i++)
{
int mx=xp[i]-22;
int my=yp[i]-22;
ta.append(mx+","+my+"|");
if((mx==50)&&(my==50))
testpattern[i] =1;
else if((mx==150)&&(my==50))
testpattern[i] =2;
else if((mx==250)&&(my==50))
testpattern[i] =3;
else if((mx==50)&&(my==150))
testpattern[i] =4;
else if((mx==150)&&(my==150))
testpattern[i] =5;
else if((mx==250)&&(my==150))
testpattern[i] =6;
else if((mx==50)&&(my==250))
testpattern[i] =7;
else if((mx==150)&&(my==250))
testpattern[i] =8;
else if((mx==250)&&(my==250))
testpattern[i] =9;
}
//End of For Loop
for(int i=0;i<9;i++)
{
if(testpattern[i]==pattern[i])
result = true;
else
{
result = false;
break;
}
}
return result;
}

void setPattern()
{
for(int i=0;i<dot;i++)
{
int mx=xp[i]-22;
int my=yp[i]-22;
if((mx==50)&&(my==50))
pattern[i] =1;
else if((mx==150)&&(my==50))
pattern[i] =2;
else if((mx==250)&&(my==50))
pattern[i] =3;
else if((mx==50)&&(my==150))
pattern[i] =4;
else if((mx==150)&&(my==150))
pattern[i] =5;
else if((mx==250)&&(my==150))
pattern[i] =6;
else if((mx==50)&&(my==250))
pattern[i] =7;
else if((mx==150)&&(my==250))
pattern[i] =8;
else if((mx==250)&&(my==250))
pattern[i] =9;
}
for(int i=dot;i<9;i++)
{
pattern[i] =0;
}
for(int i=0;i<9;i++)
{
ta.append(pattern[i]+",");
}
ta.append("\n");
line=new Color(0,160,255);
xp[dot+1]=xp[dot-1];
yp[dot+1]=yp[dot-1];
repaint();
t.start();
}

void setPoint(Component c)
{
xp[dot]=c.getX()+22;
yp[dot]=c.getY()+22;
dot++;
xp[dot]=c.getX()+22;
yp[dot]=c.getY()+22;
if(dot==9){
if((drag==true)&&(setpattern==false))
setLineColor();
else if((drag==true)&&(setpattern==true)&&(t.isRunning()==false))
setPattern();
xp[dot+1]=c.getX()+22;
yp[dot+1]=c.getY()+22;
}
}

int getMouseComponentNo()
{
int mx = Lock_Screen_Panel.getMousePosition().x; 
int my = Lock_Screen_Panel.getMousePosition().y;
mx=mx-(mx%50);
my=my-(my%50);
if((mx==50)&&(my==50))
return 1;
else if((mx==150)&&(my==50))
return 2;
else if((mx==250)&&(my==50))
return 3;
else if((mx==50)&&(my==150))
return 4;
else if((mx==150)&&(my==150))
return 5;
else if((mx==250)&&(my==150))
return 6;
else if((mx==50)&&(my==250))
return 7;
else if((mx==150)&&(my==250))
return 8;
else if((mx==250)&&(my==250))
return 9;
else
return 0;
}

void setLineColor()
{
if(checkPattern()==true)
{
ta.setText("Correct Pattern\n");
for(int i=0;i<9;i++)
ta.append(testpattern[i]+",");
line = new Color(0,225,50);
unlock.start();
}
else 
{
ta.setText("Incorrect Pattern\n");
for(int i=0;i<9;i++)
ta.append(testpattern[i]+",");
line = new Color(255,75,75);
}
xp[dot+1]=xp[dot-1];
yp[dot+1]=yp[dot-1];
repaint();
t.start();
}


    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
info.setText(null);        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void MenuMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuMousePressed
Menu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Menu.png")));
    }//GEN-LAST:event_MenuMousePressed

    private void MenuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuMouseExited
Menu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Mobile_Operating_System/Menu.gif")));
// TODO add your handling code here:
    }//GEN-LAST:event_MenuMouseExited

    private void Lock_PhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Lock_PhoneActionPerformed
Parent_Lock.setSize(450,700);
Contacts.setEnabled(false);
Menu.setEnabled(false);
Messages.setEnabled(false);
Inactive_Background2.setSize(450,700);
mlc.getMediaPlayer().play();

        // TODO add your handling code here:
    }//GEN-LAST:event_Lock_PhoneActionPerformed

    private void set_patternActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_set_patternActionPerformed
        if (set_pattern.isSelected()) {
            setpattern = true;
            set_pattern.setBackground(new Color(10, 230, 10));
        } else {
            setpattern = false;
            set_pattern.setBackground(new Color(0, 153, 255));
        }
    }//GEN-LAST:event_set_patternActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed

        p1 = false;
        p2 = false;
        p3 = false;
        p4 = false;
        p5 = false;
        p6 = false;
        p7 = false;
        p8 = false;
        p9 = false;
        dot = 0;
        line = new Color(255, 200, 0);
        for (int i = 0; i <= 10; i++) {
            xp[i] = 0;
            yp[i] = 0;
            if (i < 9) {
                testpattern[i] = 0;
            }
        }
        drag = false;
        if (setpattern == true) {
            set_pattern.doClick();
        }
        repaint();
    }//GEN-LAST:event_resetActionPerformed

    private void screenMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_screenMouseMoved
if((drag==true)&&(setpattern==false))
setLineColor();
else if((drag==true)&&(setpattern==true)&&(t.isRunning()==false))
setPattern();

if((drag==true)&&(t.isRunning()==false))
{
reset.doClick(500);
drag=false;
}     
// TODO add your handling code here:
    }//GEN-LAST:event_screenMouseMoved

    private void screenMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_screenMouseDragged
if(t.isRunning()==false){
int comp = getMouseComponentNo();
if((drag==true)&&(comp==1)&&(p1==false))
{p1=true;setPoint(dot1);}
else if((drag==true)&&(comp==2)&&(p2==false))
{p2=true;setPoint(dot2);}
else if((drag==true)&&(comp==3)&&(p3==false))
{p3=true;setPoint(dot3);}
else if((drag==true)&&(comp==4)&&(p4==false))
{p4=true;setPoint(dot4);}
else if((drag==true)&&(comp==5)&&(p5==false))
{p5=true;setPoint(dot5);}
else if((drag==true)&&(comp==6)&&(p6==false))
{p6=true;setPoint(dot6);}
else if((drag==true)&&(comp==7)&&(p7==false))
{p7=true;setPoint(dot7);}
else if((drag==true)&&(comp==8)&&(p8==false))
{p8=true;setPoint(dot8);}
else if((drag==true)&&(comp==9)&&(p9==false))
{p9=true;setPoint(dot9);}

if((dot<9)&&(drag==true))
{
mp = Lock_Screen_Panel.getMousePosition();
xp[dot+1]=mp.x;
yp[dot+1]=mp.y;
ta.setText("No. of Dots Conneted :"+dot+"\n");
}
}
repaint();
        // TODO add your handling code here:
    }//GEN-LAST:event_screenMouseDragged

    private void dotsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dotsMousePressed
drag=true;
    }//GEN-LAST:event_dotsMousePressed

    private void WallpaperMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_WallpaperMousePressed
no=0;
Ripple.setLocation(Screen.getMousePosition().x-150,Screen.getMousePosition().y-150);
click.start(); 
// TODO add your handling code here:
    }//GEN-LAST:event_WallpaperMousePressed

    private void MessagesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MessagesActionPerformed
Message_Window.setSize(450,700);
    }//GEN-LAST:event_MessagesActionPerformed
 public final class InnerClassDrawingPanel extends javax.swing.JPanel {    
        @Override
        protected void paintComponent(Graphics g) {
        Graphics2D g2d = (Graphics2D)g;
        super.paintComponent(g2d);
        g2d.setColor(line);
        g2d.clearRect(0, 0,empty.getX(),empty.getY());
        g2d.setStroke(new BasicStroke(15f,BasicStroke.CAP_ROUND,BasicStroke.JOIN_ROUND));
        g2d.drawPolyline(xp,yp,dot+2);
        g2d.clearRect(0,0,10,10);
        drawpanel.setAutoscrolls(true); 
          }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        NativeLibrary.addSearchPath(RuntimeUtil.getLibVlcLibraryName(), "F:/Program Files/VLC");
        Native.loadLibrary(RuntimeUtil.getLibVlcLibraryName(),LibVlc.class);
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Langsam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Langsam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Langsam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Langsam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Langsam().setVisible(true);
            }
        });
    }
    
InnerClassDrawingPanel drawpanel = new InnerClassDrawingPanel();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Contacts;
    private javax.swing.JPanel Inactive_Background;
    private javax.swing.JInternalFrame Inactive_Background2;
    private javax.swing.JButton Lock_Phone;
    private javax.swing.JPanel Lock_Screen_Panel;
    private javax.swing.JButton Menu;
    private javax.swing.JPanel Message_Window;
    private javax.swing.JButton Messages;
    private javax.swing.JPanel Parent_Lock;
    private javax.swing.JLabel Ripple;
    private javax.swing.JPanel Screen;
    private javax.swing.JLabel Wallpaper;
    private javax.swing.JScrollPane board;
    private javax.swing.JLabel dot1;
    private javax.swing.JLabel dot2;
    private javax.swing.JLabel dot3;
    private javax.swing.JLabel dot4;
    private javax.swing.JLabel dot5;
    private javax.swing.JLabel dot6;
    private javax.swing.JLabel dot7;
    private javax.swing.JLabel dot8;
    private javax.swing.JLabel dot9;
    private javax.swing.JLabel empty;
    private javax.swing.JLabel info;
    private javax.swing.JButton reset;
    private javax.swing.JToggleButton set_pattern;
    private javax.swing.JTextArea ta;
    private javax.swing.JScrollPane tapane;
    // End of variables declaration//GEN-END:variables
}
