/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Text_Editor.java
 *
 * Created on Sep 3, 2011, 1:04:26 PM
 */
package TextEditor;

import java.awt.Color;
import java.awt.Font;
import java.awt.Insets;
import javax.swing.ImageIcon;
import javax.swing.KeyStroke;



/**
 *
 * @author $Akshay$
 */
public class Text_Editor extends javax.swing.JFrame {

    /** Creates new form Text_Editor */
    public Text_Editor() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        color_chooser_dialog = new javax.swing.JDialog();
        select_color = new javax.swing.JButton();
        color_chooser = new javax.swing.JColorChooser();
        file_chooser_dialog = new javax.swing.JDialog();
        file_saver = new javax.swing.JFileChooser();
        file_chooser = new javax.swing.JFileChooser();
        bottom_bar = new javax.swing.JToolBar();
        page_length = new javax.swing.JLabel();
        scroll_pane = new javax.swing.JScrollPane();
        screen = new javax.swing.JPanel();
        ground = new javax.swing.JButton();
        size_buttons = new javax.swing.JToolBar();
        size_increase = new javax.swing.JButton();
        size_decrease = new javax.swing.JButton();
        style_buttons = new javax.swing.JToolBar();
        plain_text = new javax.swing.JToggleButton();
        italics_text = new javax.swing.JToggleButton();
        bold_text = new javax.swing.JToggleButton();
        more_colors = new javax.swing.JButton();
        jToolBar1 = new javax.swing.JToolBar();
        centre_alignment = new javax.swing.JToggleButton();
        inventory = new javax.swing.JTabbedPane();
        home_toolbar = new javax.swing.JToolBar();
        cut = new javax.swing.JButton();
        copy = new javax.swing.JButton();
        paste = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        font_size = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        font_name = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        color_list = new javax.swing.JList();
        tab_background = new javax.swing.JLabel();
        home_tab_background = new javax.swing.JLabel();
        vertical_margin_top = new javax.swing.JSlider();
        vertical_margin_bottom = new javax.swing.JSlider();
        horizontal_margin_right = new javax.swing.JSlider();
        horizontal_margin_left = new javax.swing.JSlider();
        top_margin = new javax.swing.JLabel();
        left_margin = new javax.swing.JLabel();
        bottom_margin = new javax.swing.JLabel();
        right_margin = new javax.swing.JLabel();
        page_scroll = new javax.swing.JScrollPane();
        page = new javax.swing.JTextArea();
        background = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        file = new javax.swing.JMenu();
        open = new javax.swing.JMenuItem();
        save = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        edit = new javax.swing.JMenu();
        cut_item = new javax.swing.JMenuItem();
        copy_item = new javax.swing.JMenuItem();
        paste_item = new javax.swing.JMenuItem();
        selectall_item = new javax.swing.JMenuItem();
        clearall_item = new javax.swing.JMenuItem();

        color_chooser_dialog.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        color_chooser_dialog.setMinimumSize(new java.awt.Dimension(600, 450));
        color_chooser_dialog.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        select_color.setFont(new java.awt.Font("Gabriola", 1, 24)); // NOI18N
        select_color.setText("Select");
        select_color.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        select_color.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select_colorActionPerformed(evt);
            }
        });
        color_chooser_dialog.getContentPane().add(select_color, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 340, -1, 30));

        color_chooser.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        color_chooser.setOpaque(false);
        color_chooser_dialog.getContentPane().add(color_chooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 390));

        file_chooser_dialog.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        file_chooser_dialog.setMinimumSize(new java.awt.Dimension(575, 450));
        file_chooser_dialog.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        file_saver.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        file_saver.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        file_saver.setMinimumSize(new java.awt.Dimension(600, 420));
        file_saver.setPreferredSize(new java.awt.Dimension(500, 400));
        file_saver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                file_saverActionPerformed(evt);
            }
        });
        file_chooser_dialog.getContentPane().add(file_saver, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 550, 420));

        file_chooser.setCurrentDirectory(new java.io.File("F:\\"));
            file_chooser.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            file_chooser.setMinimumSize(new java.awt.Dimension(600, 420));
            file_chooser.setPreferredSize(new java.awt.Dimension(500, 400));
            file_chooser_dialog.getContentPane().add(file_chooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 550, 420));

            setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
            setTitle("$$$$$$$$$$$$$   Dolar Editor   $$$$$$$$$$$$$           Version  0.16  ");
            setResizable(false);
            setState(1);
            addWindowListener(new java.awt.event.WindowAdapter() {
                public void windowOpened(java.awt.event.WindowEvent evt) {
                    formWindowOpened(evt);
                }
            });
            getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

            bottom_bar.setBackground(new java.awt.Color(0, 0, 255));
            bottom_bar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
            bottom_bar.setFloatable(false);
            bottom_bar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            bottom_bar.setOpaque(false);
            bottom_bar.setPreferredSize(new java.awt.Dimension(800, 30));

            page_length.setBackground(new java.awt.Color(0, 0, 0));
            page_length.setForeground(new java.awt.Color(255, 255, 255));
            page_length.setText("Number of Characters :                                                                                                                                                           ");
            page_length.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
            page_length.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            page_length.setMinimumSize(new java.awt.Dimension(1040, 18));
            page_length.setName(""); // NOI18N
            page_length.setOpaque(true);
            page_length.setPreferredSize(new java.awt.Dimension(1040, 30));
            bottom_bar.add(page_length);

            getContentPane().add(bottom_bar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 730, 1040, 30));

            scroll_pane.setBorder(null);
            scroll_pane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
            scroll_pane.setAutoscrolls(true);
            scroll_pane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

            screen.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            screen.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

            ground.setFont(new java.awt.Font("Gabriola", 1, 20)); // NOI18N
            ground.setText("Foreground");
            ground.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            ground.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    groundActionPerformed(evt);
                }
            });
            screen.add(ground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 120, 30));

            size_buttons.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
            size_buttons.setFloatable(false);
            size_buttons.setRollover(true);
            size_buttons.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            size_buttons.setOpaque(false);

            size_increase.setBackground(new java.awt.Color(218, 234, 242));
            size_increase.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
            size_increase.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TextEditor/size_increase.gif"))); // NOI18N
            size_increase.setFocusable(false);
            size_increase.setOpaque(false);
            size_increase.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/TextEditor/size_increase_moveover.gif"))); // NOI18N
            size_increase.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    size_increaseActionPerformed(evt);
                }
            });
            size_buttons.add(size_increase);

            size_decrease.setBackground(new java.awt.Color(218, 234, 242));
            size_decrease.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
            size_decrease.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TextEditor/size_decrease.gif"))); // NOI18N
            size_decrease.setFocusable(false);
            size_decrease.setOpaque(false);
            size_decrease.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/TextEditor/size_decrease_moveover.gif"))); // NOI18N
            size_decrease.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    size_decreaseActionPerformed(evt);
                }
            });
            size_buttons.add(size_decrease);

            screen.add(size_buttons, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 40, 90, 40));

            style_buttons.setFloatable(false);
            style_buttons.setRollover(true);
            style_buttons.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            style_buttons.setOpaque(false);
            style_buttons.setPreferredSize(new java.awt.Dimension(150, 25));

            plain_text.setBackground(new java.awt.Color(218, 234, 242));
            plain_text.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TextEditor/plain.gif"))); // NOI18N
            plain_text.setSelected(true);
            plain_text.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            plain_text.setFocusable(false);
            plain_text.setMinimumSize(new java.awt.Dimension(32, 32));
            plain_text.setOpaque(true);
            plain_text.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/TextEditor/paintmoveover.gif"))); // NOI18N
            plain_text.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TextEditor/plain_selected.gif"))); // NOI18N
            plain_text.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    plain_textActionPerformed(evt);
                }
            });
            style_buttons.add(plain_text);

            italics_text.setBackground(new java.awt.Color(218, 234, 242));
            italics_text.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TextEditor/italics.gif"))); // NOI18N
            italics_text.setFocusable(false);
            italics_text.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
            italics_text.setOpaque(true);
            italics_text.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/TextEditor/italicsmoveover.gif"))); // NOI18N
            italics_text.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TextEditor/italics_selected.gif"))); // NOI18N
            italics_text.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            italics_text.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    italics_textActionPerformed(evt);
                }
            });
            style_buttons.add(italics_text);

            bold_text.setBackground(new java.awt.Color(218, 234, 242));
            bold_text.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TextEditor/bold.gif"))); // NOI18N
            bold_text.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            bold_text.setFocusable(false);
            bold_text.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
            bold_text.setOpaque(true);
            bold_text.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/TextEditor/boldmoveover.gif"))); // NOI18N
            bold_text.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TextEditor/bold_selected.gif"))); // NOI18N
            bold_text.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            bold_text.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    bold_textActionPerformed(evt);
                }
            });
            style_buttons.add(bold_text);

            screen.add(style_buttons, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 95, 140, 50));

            more_colors.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
            more_colors.setText("...more Colors");
            more_colors.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            more_colors.setFocusable(false);
            more_colors.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
            more_colors.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            more_colors.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    more_colorsActionPerformed(evt);
                }
            });
            screen.add(more_colors, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 50, -1, 30));

            jToolBar1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
            jToolBar1.setFloatable(false);
            jToolBar1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            jToolBar1.setOpaque(false);

            centre_alignment.setText("Centre");
            centre_alignment.setFocusable(false);
            centre_alignment.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
            centre_alignment.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
            centre_alignment.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    centre_alignmentActionPerformed(evt);
                }
            });
            jToolBar1.add(centre_alignment);

            screen.add(jToolBar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 65, 190, 50));

            inventory.setBackground(new java.awt.Color(189, 223, 240));
            inventory.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
            inventory.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            inventory.addChangeListener(new javax.swing.event.ChangeListener() {
                public void stateChanged(javax.swing.event.ChangeEvent evt) {
                    inventoryStateChanged(evt);
                }
            });

            home_toolbar.setBackground(new java.awt.Color(218, 234, 242));
            home_toolbar.setFloatable(false);
            home_toolbar.setRollover(true);
            home_toolbar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

            cut.setBackground(new java.awt.Color(218, 234, 242));
            cut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TextEditor/cut.gif"))); // NOI18N
            cut.setToolTipText("<html>Cut<br>Ctrl+x<html>");
            cut.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/TextEditor/cutmoveover.gif"))); // NOI18N
            cut.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    cutActionPerformed(evt);
                }
            });
            home_toolbar.add(cut);

            copy.setBackground(new java.awt.Color(218, 234, 242));
            copy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TextEditor/copy.gif"))); // NOI18N
            copy.setToolTipText("<html>Copy<br>Ctrl+c<html>");
            copy.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/TextEditor/copymoveover.gif"))); // NOI18N
            copy.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    copyActionPerformed(evt);
                }
            });
            home_toolbar.add(copy);

            paste.setBackground(new java.awt.Color(218, 234, 242));
            paste.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TextEditor/paste.gif"))); // NOI18N
            paste.setToolTipText("<html>Paste<br>Ctrl+v<html>");
            paste.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/TextEditor/pastemoveover.gif"))); // NOI18N
            paste.setVerifyInputWhenFocusTarget(false);
            paste.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    pasteActionPerformed(evt);
                }
            });
            home_toolbar.add(paste);

            jLabel1.setFont(new java.awt.Font("Gabriola", 1, 24)); // NOI18N
            jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            jLabel1.setText("Font Size :");
            home_toolbar.add(jLabel1);

            font_size.setEditable(true);
            font_size.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "8", "9", "10", "12", "14", "18", "20", "24", "28", "32", "36", "48", "56", "64", "72", " " }));
            font_size.setPreferredSize(new java.awt.Dimension(75, 20));
            font_size.addItemListener(new java.awt.event.ItemListener() {
                public void itemStateChanged(java.awt.event.ItemEvent evt) {
                    font_sizeItemStateChanged(evt);
                }
            });
            home_toolbar.add(font_size);

            jLabel2.setFont(new java.awt.Font("Gabriola", 1, 24)); // NOI18N
            jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            jLabel2.setText("Font :");
            home_toolbar.add(jLabel2);

            font_name.setMaximumRowCount(10);
            font_name.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "academy engraved let", "algerian", "amaze", "arial", "arial black", "balthazar", "bankgothic lt bt", "bart", "bimini", "comic sans ms", "book antiqua", "bookman old style", "braggadocio", "britannic bold", "brush script mt", "century gothic", "century schoolbook", "chasm", "chicago", "colonna mt", "Comic Sans MS", "commercialscript bt", "coolsville", "courier", "courier new", "cursive", "dayton", "desdemona", "fantasy", "flat brush", "footlight mt light", "futurablack bt", "futuralight bt", "garamond", "gaze", "geneva", "georgia", "geotype tt", "helterskelter", "helvetica", "herman", "highlight let", "impact", "jester", "joan", "john handy let", "jokerman let", "kelt", "kids", "kino mt", "la bamba let", "lithograph", "lucida console", "map symbols", "marlett", "matteroffact", "matisse itc", "matura mt script capitals", "mekanik let", "monaco", "monospace", "monotype sorts", "ms linedraw", "new york", "olddreadfulno7 bt", "orange let", "palatino", "playbill", "pump demi bold let", "puppylike", "roland", "sans-serif", "script", "scruff let", "serif", "short hand", "signs normal", "simplex", "simpson", "stylus bt", "surfer", "swis721 bt", "swis721 blkoul bt", "symap", "symbol", "tahoma", "technic", "tempus sans itc", "terk", "times", "times new roman", "trebuchet ms", "trendy", "verdana", "victorian let", "vineta bt", "vivian", "webdings", "wingdings", "western", "westminster", "westwood let", "wide latin", "zapfellipt " }));
            font_name.setSelectedIndex(3);
            font_name.setBorder(new javax.swing.border.MatteBorder(null));
            font_name.setName(""); // NOI18N
            font_name.setPreferredSize(new java.awt.Dimension(150, 20));
            font_name.addItemListener(new java.awt.event.ItemListener() {
                public void itemStateChanged(java.awt.event.ItemEvent evt) {
                    font_nameItemStateChanged(evt);
                }
            });
            home_toolbar.add(font_name);

            inventory.addTab("Home", new javax.swing.ImageIcon(getClass().getResource("/TextEditor/home.gif")), home_toolbar); // NOI18N

            jScrollPane2.setForeground(new java.awt.Color(255, 153, 51));
            jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
            jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
            jScrollPane2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

            color_list.setModel(new javax.swing.AbstractListModel() {
                ImageIcon[] strings =
                {
                    new ImageIcon(getClass().getResource("/TextEditor/black.gif")),
                    new ImageIcon(getClass().getResource("/TextEditor/blue.gif")),
                    new ImageIcon(getClass().getResource("/TextEditor/cayan.gif")),
                    new ImageIcon(getClass().getResource("/TextEditor/darkgrey.gif")),
                    new ImageIcon(getClass().getResource("/TextEditor/green.gif")),
                    new ImageIcon(getClass().getResource("/TextEditor/grey.gif")),
                    new ImageIcon(getClass().getResource("/TextEditor/lightgrey.gif")),
                    new ImageIcon(getClass().getResource("/TextEditor/magenta.gif")),
                    new ImageIcon(getClass().getResource("/TextEditor/orange.gif")),
                    new ImageIcon(getClass().getResource("/TextEditor/pink.gif")),
                    new ImageIcon(getClass().getResource("/TextEditor/red.gif")),
                    new ImageIcon(getClass().getResource("/TextEditor/white.gif")),
                    new ImageIcon(getClass().getResource("/TextEditor/yellow.gif")),
                    new ImageIcon(getClass().getResource("/TextEditor/brown.gif")),
                    new ImageIcon(getClass().getResource("/TextEditor/darkgreen.gif")),
                };
                public int getSize() { return strings.length; }
                public Object getElementAt(int i) { return strings[i]; }
            });
            color_list.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
            color_list.setLayoutOrientation(javax.swing.JList.HORIZONTAL_WRAP);
            color_list.setVisibleRowCount(3);
            color_list.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
                public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                    color_listValueChanged(evt);
                }
            });
            jScrollPane2.setViewportView(color_list);

            inventory.addTab("Color", new javax.swing.ImageIcon(getClass().getResource("/TextEditor/color_tab_ani.gif")), jScrollPane2); // NOI18N

            screen.add(inventory, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1025, 140));

            tab_background.setBackground(new java.awt.Color(191, 223, 239));
            tab_background.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            tab_background.setOpaque(true);
            screen.add(tab_background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1040, 41));

            home_tab_background.setBackground(new java.awt.Color(218, 234, 242));
            home_tab_background.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            home_tab_background.setOpaque(true);
            screen.add(home_tab_background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 25, 1040, 112));

            vertical_margin_top.setBackground(new java.awt.Color(0, 0, 0));
            vertical_margin_top.setForeground(new java.awt.Color(255, 204, 0));
            vertical_margin_top.setMajorTickSpacing(60);
            vertical_margin_top.setMaximum(550);
            vertical_margin_top.setMinorTickSpacing(1);
            vertical_margin_top.setOrientation(javax.swing.JSlider.VERTICAL);
            vertical_margin_top.setPaintTicks(true);
            vertical_margin_top.setPaintTrack(false);
            vertical_margin_top.setValue(2);
            vertical_margin_top.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            vertical_margin_top.setInverted(true);
            vertical_margin_top.setOpaque(false);
            vertical_margin_top.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseReleased(java.awt.event.MouseEvent evt) {
                    vertical_margin_topMouseReleased(evt);
                }
            });
            vertical_margin_top.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
                public void mouseDragged(java.awt.event.MouseEvent evt) {
                    vertical_margin_topMouseDragged(evt);
                }
            });
            screen.add(vertical_margin_top, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, -1, 550));

            vertical_margin_bottom.setBackground(new java.awt.Color(0, 0, 0));
            vertical_margin_bottom.setForeground(new java.awt.Color(255, 204, 0));
            vertical_margin_bottom.setMajorTickSpacing(60);
            vertical_margin_bottom.setMaximum(550);
            vertical_margin_bottom.setMinorTickSpacing(1);
            vertical_margin_bottom.setOrientation(javax.swing.JSlider.VERTICAL);
            vertical_margin_bottom.setPaintTrack(false);
            vertical_margin_bottom.setValue(2);
            vertical_margin_bottom.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            vertical_margin_bottom.setOpaque(false);
            vertical_margin_bottom.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseReleased(java.awt.event.MouseEvent evt) {
                    vertical_margin_bottomMouseReleased(evt);
                }
            });
            vertical_margin_bottom.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
                public void mouseDragged(java.awt.event.MouseEvent evt) {
                    vertical_margin_bottomMouseDragged(evt);
                }
            });
            screen.add(vertical_margin_bottom, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 260, 30, 550));

            horizontal_margin_right.setBackground(new java.awt.Color(0, 0, 0));
            horizontal_margin_right.setForeground(new java.awt.Color(255, 204, 0));
            horizontal_margin_right.setMajorTickSpacing(30);
            horizontal_margin_right.setMaximum(810);
            horizontal_margin_right.setMinorTickSpacing(1);
            horizontal_margin_right.setPaintTrack(false);
            horizontal_margin_right.setValue(2);
            horizontal_margin_right.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            horizontal_margin_right.setInverted(true);
            horizontal_margin_right.setOpaque(false);
            horizontal_margin_right.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseReleased(java.awt.event.MouseEvent evt) {
                    horizontal_margin_rightMouseReleased(evt);
                }
            });
            horizontal_margin_right.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
                public void mouseDragged(java.awt.event.MouseEvent evt) {
                    horizontal_margin_right_rightMouseDragged(evt);
                }
            });
            screen.add(horizontal_margin_right, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 215, 810, 30));

            horizontal_margin_left.setBackground(new java.awt.Color(0, 0, 0));
            horizontal_margin_left.setForeground(new java.awt.Color(255, 204, 0));
            horizontal_margin_left.setMajorTickSpacing(30);
            horizontal_margin_left.setMaximum(810);
            horizontal_margin_left.setMinorTickSpacing(1);
            horizontal_margin_left.setPaintTicks(true);
            horizontal_margin_left.setPaintTrack(false);
            horizontal_margin_left.setValue(2);
            horizontal_margin_left.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            horizontal_margin_left.setOpaque(false);
            horizontal_margin_left.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseReleased(java.awt.event.MouseEvent evt) {
                    horizontal_margin_leftMouseReleased(evt);
                }
            });
            horizontal_margin_left.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
                public void mouseDragged(java.awt.event.MouseEvent evt) {
                    horizontal_margin_leftMouseDragged(evt);
                }
            });
            screen.add(horizontal_margin_left, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 200, 810, 30));

            top_margin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TextEditor/top_margin.gif"))); // NOI18N
            top_margin.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            screen.add(top_margin, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 200, -1, -1));

            left_margin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TextEditor/left_margin.gif"))); // NOI18N
            left_margin.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            screen.add(left_margin, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 250, -1, -1));

            bottom_margin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TextEditor/bottom_margin.gif"))); // NOI18N
            bottom_margin.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            screen.add(bottom_margin, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 800, -1, -1));

            right_margin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TextEditor/right_margin.gif"))); // NOI18N
            right_margin.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            screen.add(right_margin, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 250, -1, -1));

            page_scroll.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
            page_scroll.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

            page.setColumns(20);
            page.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
            page.setLineWrap(true);
            page.setRows(5);
            page.setWrapStyleWord(true);
            page.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            page.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    pageMouseClicked(evt);
                }
            });
            page.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyPressed(java.awt.event.KeyEvent evt) {
                    pageKeyPressed(evt);
                }
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    pageKeyReleased(evt);
                }
            });
            page_scroll.setViewportView(page);

            screen.add(page_scroll, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 250, 810, 550));

            background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TextEditor/background.jpg"))); // NOI18N
            background.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            background.setOpaque(true);
            screen.add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 1025, -1));

            scroll_pane.setViewportView(screen);

            getContentPane().add(scroll_pane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1040, 731));

            jMenuBar1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            jMenuBar1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

            file.setText("File");
            file.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

            open.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
            open.setText("Open");
            open.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    openActionPerformed(evt);
                }
            });
            file.add(open);

            save.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
            save.setText("Save");
            save.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    saveActionPerformed(evt);
                }
            });
            file.add(save);

            jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
            jMenuItem1.setText("Exit");
            file.add(jMenuItem1);

            jMenuBar1.add(file);

            edit.setText("Edit");
            edit.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

            cut_item.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
            cut_item.setText("Cut");
            cut_item.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    cut_itemActionPerformed(evt);
                }
            });
            edit.add(cut_item);

            copy_item.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
            copy_item.setText("Copy");
            copy_item.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    copy_itemActionPerformed(evt);
                }
            });
            edit.add(copy_item);

            paste_item.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
            paste_item.setText("Paste");
            paste_item.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    paste_itemActionPerformed(evt);
                }
            });
            edit.add(paste_item);

            selectall_item.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
            selectall_item.setText("Select All");
            selectall_item.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    selectall_itemActionPerformed(evt);
                }
            });
            edit.add(selectall_item);

            clearall_item.setText("Clear All");
            clearall_item.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    clearall_itemActionPerformed(evt);
                }
            });
            edit.add(clearall_item);

            jMenuBar1.add(edit);

            setJMenuBar(jMenuBar1);

            pack();
        }// </editor-fold>//GEN-END:initComponents
void page_length()
{
char_length = page.getText().length();
int lines = page.getLineCount();
page_length.setText("Number of Characters : "+char_length+"     Number of lines : "+lines+"\t Caret Position"+page.getCaret().getDot());

}
int siz;
int num;
int char_length;
  boolean fg_selected=true;
KeyStroke[] p;
private void cutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cutActionPerformed
page.cut();page_length();
}//GEN-LAST:event_cutActionPerformed

private void copyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyActionPerformed
page.copy();page_length();
}//GEN-LAST:event_copyActionPerformed

private void pasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pasteActionPerformed
page.paste();page_length();
}//GEN-LAST:event_pasteActionPerformed

private void color_listValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_color_listValueChanged

    int i = color_list.getSelectedIndex();
if(fg_selected==true)
{
    switch(i)
    {
     case 0 :
     page.setForeground(Color.BLACK);
     break;
     case 1 :
     page.setForeground(Color.BLUE);
     break;
     case 2 :
     page.setForeground(Color.CYAN);
     break;
     case 3 :
     page.setForeground(Color.DARK_GRAY);
     break;         
     case 4 :
     page.setForeground(Color.GREEN);
     break;     
     case 5 :
     page.setForeground(Color.GRAY);
     break;     
     case 6 :
     page.setForeground(Color.LIGHT_GRAY);
     break;     
     case 7 :
     page.setForeground(Color.MAGENTA);
     break;
     case 8 :
     page.setForeground(Color.ORANGE);
     break;   
     case 9 :
     page.setForeground(Color.PINK);
     break;   
     case 10 :
     page.setForeground(Color.RED);
     break;   
     case 11 :
     page.setForeground(Color.WHITE);
     break;   
     case 12 :
     page.setForeground(Color.YELLOW);
     break;
     case 13 :
     page.setForeground(new Color(153,51,0));
     break;
     case 14 :
     page.setForeground(new Color(0,128,0));
     break;     
}
}
else if(fg_selected==false)    
{
    switch(i)
    {
     case 0 :
     page.setBackground(Color.BLACK);
     break;
     case 1 :
     page.setBackground(Color.BLUE);
     break;
     case 2 :
     page.setBackground(Color.CYAN);
     break;
     case 3 :
     page.setBackground(Color.DARK_GRAY);
     break;         
     case 4 :
     page.setBackground(Color.GREEN);
     break;     
     case 5 :
     page.setBackground(Color.GRAY);
     break;     
     case 6 :
     page.setBackground(Color.LIGHT_GRAY);
     break;     
     case 7 :
     page.setBackground(Color.MAGENTA);
     break;
     case 8 :
     page.setBackground(Color.ORANGE);
     break;   
     case 9 :
     page.setBackground(Color.PINK);
     break;   
     case 10 :
     page.setBackground(Color.RED);
     break;   
     case 11 :
     page.setBackground(Color.WHITE);
     break;   
     case 12 :
     page.setBackground(Color.YELLOW);
     break;     
     case 13 :
     page.setBackground(new Color(153,51,0));
     break;
     case 14 :
     page.setBackground(new Color(0,128,0));
     break;            
    }
}

    
    
    

}//GEN-LAST:event_color_listValueChanged

private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
top_margin.setVisible(false);
left_margin.setVisible(false);
bottom_margin.setVisible(false);
right_margin.setVisible(false);
ground.setVisible(false);
more_colors.setVisible(false);

}//GEN-LAST:event_formWindowOpened

private void groundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_groundActionPerformed
if(fg_selected==true)
{
ground.setBackground(new Color(0,0,0));
ground.setForeground(new Color(255,255,255));
ground.setText("Background");
fg_selected=false;
}
else if(fg_selected==false)
{
ground.setForeground(new Color(0,0,0));
ground.setBackground(new Color(255,255,255));
ground.setText("Foreground");
fg_selected=true;
}

    
}//GEN-LAST:event_groundActionPerformed

private void inventoryStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_inventoryStateChanged
int tab = inventory.getSelectedIndex();
if(tab==1)
{
style_buttons.setVisible(false);
size_buttons.setVisible(false);
ground.setVisible(true);
more_colors.setVisible(true);
}
else if (tab==0)
{
ground.setVisible(false);
more_colors.setVisible(false);
size_buttons.setVisible(true);
style_buttons.setVisible(true);
}

// TODO add your handling code here:
}//GEN-LAST:event_inventoryStateChanged

private void font_sizeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_font_sizeItemStateChanged
page.setFont(new Font(page.getFont().getFontName(),page.getFont().getStyle(),Math.abs(Integer.parseInt(font_size.getSelectedItem().toString()))));
}//GEN-LAST:event_font_sizeItemStateChanged

private void font_nameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_font_nameItemStateChanged
page.setFont(new Font(font_name.getSelectedItem().toString(),page.getFont().getStyle(),page.getFont().getSize()));
}//GEN-LAST:event_font_nameItemStateChanged

private void size_increaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_size_increaseActionPerformed
page.setFont(new Font(page.getFont().getFontName(),page.getFont().getStyle(),page.getFont().getSize()+2));
font_size.setSelectedIndex(-1);
}//GEN-LAST:event_size_increaseActionPerformed

private void size_decreaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_size_decreaseActionPerformed
page.setFont(new Font(page.getFont().getFontName(),page.getFont().getStyle(),page.getFont().getSize()-2));
font_size.setSelectedIndex(-1);
}//GEN-LAST:event_size_decreaseActionPerformed

private void more_colorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_more_colorsActionPerformed
color_chooser_dialog.setVisible(true);
}//GEN-LAST:event_more_colorsActionPerformed

private void select_colorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select_colorActionPerformed
if(fg_selected==true)
page.setForeground(color_chooser.getColor());
else if(fg_selected==false)
page.setBackground(color_chooser.getColor());
color_chooser_dialog.dispose();
}//GEN-LAST:event_select_colorActionPerformed

private void openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openActionPerformed
file_chooser_dialog.setVisible(true);
file_saver.setVisible(false);
page_length();
}//GEN-LAST:event_openActionPerformed

private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
file_chooser_dialog.setVisible(true);
file_saver.setVisible(true);

}//GEN-LAST:event_saveActionPerformed

private void file_saverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_file_saverActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_file_saverActionPerformed

private void cut_itemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cut_itemActionPerformed
cut.doClick();page_length();
}//GEN-LAST:event_cut_itemActionPerformed

private void copy_itemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copy_itemActionPerformed
copy.doClick();page_length();
}//GEN-LAST:event_copy_itemActionPerformed

private void paste_itemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paste_itemActionPerformed
paste.doClick();page_length();
}//GEN-LAST:event_paste_itemActionPerformed

private void selectall_itemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectall_itemActionPerformed
page.selectAll();page_length();
}//GEN-LAST:event_selectall_itemActionPerformed

private void clearall_itemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearall_itemActionPerformed
page.setText("");page_length();
}//GEN-LAST:event_clearall_itemActionPerformed

private void horizontal_margin_right_rightMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_horizontal_margin_right_rightMouseDragged
right_margin.setVisible(true);
if(horizontal_margin_right.getValue()>=(810-horizontal_margin_left.getValue()))
  horizontal_margin_right.setValue(810-horizontal_margin_left.getValue()-page.getFont().getSize());
page.setMargin(new Insets(vertical_margin_top.getValue(),horizontal_margin_left.getValue(),vertical_margin_bottom.getValue(),horizontal_margin_right.getValue()));
page.selectAll();
page.copy();
page.paste();
right_margin.setLocation(902-horizontal_margin_right.getValue(),250);
}//GEN-LAST:event_horizontal_margin_right_rightMouseDragged

private void horizontal_margin_leftMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_horizontal_margin_leftMouseDragged
left_margin.setVisible(true);
if(horizontal_margin_left.getValue()>=(810-horizontal_margin_right.getValue()))
    horizontal_margin_right.setValue(810-horizontal_margin_left.getValue()-page.getFont().getSize());
page.setMargin(new Insets(vertical_margin_top.getValue(),horizontal_margin_left.getValue(),vertical_margin_bottom.getValue(),horizontal_margin_right.getValue()));
page.selectAll();
page.cut();
page.paste();
left_margin.setLocation(58+horizontal_margin_left.getValue(),250);

}//GEN-LAST:event_horizontal_margin_leftMouseDragged

private void pageKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pageKeyReleased
page_length();
siz = page.getFont().getSize();
num = page.getText().length();
if(centre_alignment.isSelected()==true)
{
page.setMargin(new Insets(vertical_margin_top.getValue(),405-((num*siz)/4),vertical_margin_bottom.getValue(),0));
}
else
    page.setMargin(new Insets(vertical_margin_top.getValue(),horizontal_margin_left.getValue(),vertical_margin_bottom.getValue(),horizontal_margin_right.getValue()));



}//GEN-LAST:event_pageKeyReleased

private void horizontal_margin_leftMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_horizontal_margin_leftMouseReleased
left_margin.setVisible(false);
}//GEN-LAST:event_horizontal_margin_leftMouseReleased

private void horizontal_margin_rightMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_horizontal_margin_rightMouseReleased
right_margin.setVisible(false);
}//GEN-LAST:event_horizontal_margin_rightMouseReleased

private void vertical_margin_bottomMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vertical_margin_bottomMouseReleased
bottom_margin.setVisible(false);
}//GEN-LAST:event_vertical_margin_bottomMouseReleased

private void vertical_margin_bottomMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vertical_margin_bottomMouseDragged
bottom_margin.setVisible(true);
page.setMargin(new Insets(vertical_margin_top.getValue(),horizontal_margin_left.getValue(),vertical_margin_bottom.getValue(),horizontal_margin_right.getValue()));
page.selectAll();
page.cut();
page.paste();
bottom_margin.setLocation(100,792-vertical_margin_bottom.getValue());
}//GEN-LAST:event_vertical_margin_bottomMouseDragged

private void vertical_margin_topMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vertical_margin_topMouseReleased
top_margin.setVisible(false);
}//GEN-LAST:event_vertical_margin_topMouseReleased

private void vertical_margin_topMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vertical_margin_topMouseDragged
top_margin.setVisible(true);
page.setMargin(new Insets(vertical_margin_top.getValue(),horizontal_margin_left.getValue(),vertical_margin_bottom.getValue(),horizontal_margin_right.getValue()));
page.selectAll();
page.cut();
page.paste();
top_margin.setLocation(100,208+vertical_margin_top.getValue());
}//GEN-LAST:event_vertical_margin_topMouseDragged

private void plain_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plain_textActionPerformed
italics_text.setSelected(false);
bold_text.setSelected(false);
if(plain_text.isSelected()==true)
page.setFont(new Font(page.getFont().getName(),Font.PLAIN,page.getFont().getSize()));
else if(plain_text.isSelected()==false)
    italics_text.setSelected(true);

}//GEN-LAST:event_plain_textActionPerformed

private void italics_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_italics_textActionPerformed
plain_text.setSelected(false);
if((italics_text.isSelected()==true)&&(bold_text.isSelected()==true))
    page.setFont(new Font(page.getFont().getName(),Font.ITALIC+Font.BOLD,page.getFont().getSize()));
else if(italics_text.isSelected()==true)
    page.setFont(new Font(page.getFont().getName(),Font.ITALIC,page.getFont().getSize()));
else if(bold_text.isSelected()==true)
    page.setFont(new Font(page.getFont().getName(),Font.BOLD,page.getFont().getSize()));
else if(italics_text.isSelected()==false)
{
    page.setFont(new Font(page.getFont().getName(),Font.PLAIN,page.getFont().getSize()));
plain_text.setSelected(true);
}
}//GEN-LAST:event_italics_textActionPerformed

private void bold_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bold_textActionPerformed
plain_text.setSelected(false);
if((italics_text.isSelected()==true)&&(bold_text.isSelected()==true))
    page.setFont(new Font(page.getFont().getName(),Font.ITALIC+Font.BOLD,page.getFont().getSize()));
else if(bold_text.isSelected()==true)
    page.setFont(new Font(page.getFont().getName(),Font.BOLD,page.getFont().getSize()));
else if(italics_text.isSelected()==true)
    page.setFont(new Font(page.getFont().getName(),Font.ITALIC,page.getFont().getSize()));
else if(bold_text.isSelected()==false)
{
    page.setFont(new Font(page.getFont().getName(),Font.PLAIN,page.getFont().getSize()));
plain_text.setSelected(true);
}




}//GEN-LAST:event_bold_textActionPerformed

private void pageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pageMouseClicked
page_length();
}//GEN-LAST:event_pageMouseClicked

private void pageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pageKeyPressed

}//GEN-LAST:event_pageKeyPressed

private void centre_alignmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_centre_alignmentActionPerformed
siz = page.getFont().getSize();
num = page.getText().length();
page.selectAll();
page.cut();
page.setText("");
page.paste();
if(centre_alignment.isSelected()==true)
page.setMargin(new Insets(vertical_margin_top.getValue(),405-((num*siz)/4),vertical_margin_bottom.getValue(),0));
else
page.setMargin(new Insets(vertical_margin_top.getValue(),horizontal_margin_left.getValue(),vertical_margin_bottom.getValue(),horizontal_margin_right.getValue()));    
}//GEN-LAST:event_centre_alignmentActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Text_Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Text_Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Text_Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Text_Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new Text_Editor().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JToggleButton bold_text;
    private javax.swing.JToolBar bottom_bar;
    private javax.swing.JLabel bottom_margin;
    private javax.swing.JToggleButton centre_alignment;
    private javax.swing.JMenuItem clearall_item;
    private javax.swing.JColorChooser color_chooser;
    private javax.swing.JDialog color_chooser_dialog;
    private javax.swing.JList color_list;
    private javax.swing.JButton copy;
    private javax.swing.JMenuItem copy_item;
    private javax.swing.JButton cut;
    private javax.swing.JMenuItem cut_item;
    private javax.swing.JMenu edit;
    private javax.swing.JMenu file;
    private javax.swing.JFileChooser file_chooser;
    private javax.swing.JDialog file_chooser_dialog;
    private javax.swing.JFileChooser file_saver;
    private javax.swing.JComboBox font_name;
    private javax.swing.JComboBox font_size;
    private javax.swing.JButton ground;
    private javax.swing.JLabel home_tab_background;
    private javax.swing.JToolBar home_toolbar;
    private javax.swing.JSlider horizontal_margin_left;
    private javax.swing.JSlider horizontal_margin_right;
    private javax.swing.JTabbedPane inventory;
    private javax.swing.JToggleButton italics_text;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel left_margin;
    private javax.swing.JButton more_colors;
    private javax.swing.JMenuItem open;
    private javax.swing.JTextArea page;
    private javax.swing.JLabel page_length;
    private javax.swing.JScrollPane page_scroll;
    private javax.swing.JButton paste;
    private javax.swing.JMenuItem paste_item;
    private javax.swing.JToggleButton plain_text;
    private javax.swing.JLabel right_margin;
    private javax.swing.JMenuItem save;
    private javax.swing.JPanel screen;
    private javax.swing.JScrollPane scroll_pane;
    private javax.swing.JButton select_color;
    private javax.swing.JMenuItem selectall_item;
    private javax.swing.JToolBar size_buttons;
    private javax.swing.JButton size_decrease;
    private javax.swing.JButton size_increase;
    private javax.swing.JToolBar style_buttons;
    private javax.swing.JLabel tab_background;
    private javax.swing.JLabel top_margin;
    private javax.swing.JSlider vertical_margin_bottom;
    private javax.swing.JSlider vertical_margin_top;
    // End of variables declaration//GEN-END:variables
}
