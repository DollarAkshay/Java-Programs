/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Execute_Querry.java
 *
 * Created on Jul 31, 2012, 10:27:59 AM
 */

package $_School_Programs_12th_STD_SemI_$;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author student
 */
public class Execute_Querry extends javax.swing.JFrame {

    /** Creates new form Execute_Querry */
    public Execute_Querry() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane4 = new javax.swing.JScrollPane();
        query = new javax.swing.JTextArea();
        execute = new javax.swing.JButton();
        Databases2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        MySQL_Table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        query.setColumns(20);
        query.setRows(5);
        jScrollPane4.setViewportView(query);

        execute.setBackground(new java.awt.Color(0, 204, 0));
        execute.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        execute.setText("Execute Querry");
        execute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                executeActionPerformed(evt);
            }
        });

        Databases2.setBackground(new java.awt.Color(51, 51, 51));
        Databases2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Databases2.setForeground(new java.awt.Color(255, 255, 255));
        Databases2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Databases2.setText("Enter a MySQL Querry :");
        Databases2.setOpaque(true);

        MySQL_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(MySQL_Table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 939, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Databases2, javax.swing.GroupLayout.DEFAULT_SIZE, 949, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(execute, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 939, Short.MAX_VALUE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 939, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Databases2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(execute)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
ResultSetMetaData rsmd;
ResultSet result_set,result_set_col;
int rows,columns;//Number of Rows and Columns in a Table
String database,table;//Current Database and Table used;
    private void executeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_executeActionPerformed
String sql = query.getText();
DefaultTableModel dtm = (DefaultTableModel)MySQL_Table.getModel();
dtm.setRowCount(0);
dtm.setColumnCount(0);
ResultSet rs = null;
try{
Class.forName("java.sql.DriverManager");
Connection con =
DriverManager.getConnection("jdbc:mysql://localhost:3306/lab","root", "student");
Statement stmt = (Statement) con.createStatement();
stmt.executeUpdate(sql);

}
catch(Exception e)
{
JOptionPane.showMessageDialog (this, e.getMessage());
}
try {
rsmd =(ResultSetMetaData)rs.getMetaData();
int columns=rsmd.getColumnCount();
Object[] data ={null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,
                null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,
                null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,
                null,null,null,null,null,null,null,null,null,null};
dtm = (DefaultTableModel)MySQL_Table.getModel();
for(int i=1;i<=columns;i++)
{
dtm.addColumn(rsmd.getColumnName(i));
}

while(rs.next()){
for(int i=1;i<=columns;i++)
{
data[i-1] = rs.getObject(i);
}
dtm.addRow(data);
}
}
catch(Exception e)
{
JOptionPane.showMessageDialog (this, e.getMessage());
}
}//GEN-LAST:event_executeActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Execute_Querry().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Databases2;
    private javax.swing.JTable MySQL_Table;
    private javax.swing.JButton execute;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea query;
    // End of variables declaration//GEN-END:variables

}
